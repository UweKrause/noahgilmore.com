(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{241:function(e,a,s){"use strict";s.r(a),s.d(a,"_frontmatter",function(){return p}),s.d(a,"default",function(){return i});s(9),s(10),s(5),s(14),s(22),s(0);var t=s(84),n=s(275),c=s(13);s(29);var p={},m={_frontmatter:p},b=n.a;function i(e){var a=e.components,s=function(e,a){if(null==e)return{};var s,t,n={},c=Object.keys(e);for(t=0;t<c.length;t++)s=c[t],a.indexOf(s)>=0||(n[s]=e[s]);return n}(e,["components"]);return Object(t.b)(b,Object.assign({},m,s,{components:a,mdxType:"MDXLayout"}),Object(t.b)("p",null,"Recently, I've been learning more about Metal - I'm still working through the basics, but I've written a couple of ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"/blog/gpu-capture-flickering"}),"posts")," and ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769/status/1197599674917515264"}),"tweets")," about it, and I'm about halfway through ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/MetalByExampleExamples"}),"Metal By Example"),". Up until now I've mostly been coding sample projects, but I recently had the opportunity to prototype a Metal implementation integrated into our production app at work."),Object(t.b)("p",null,"One thing I hadn't considered until I had to implement Metal in a real app was animations - when another part of our interface animated, we wanted to scale the Metal content along with an animation. This post will dive into how to adapt the CALayer animation system to work with a custom Metal view, and along the way we'll see a situation which Swift can't handle without hacks. (ðŸ˜±)"),Object(t.b)("p",null,"Our goal will be to build a triangle that animates to a new scale when a button is pressed:"),Object(t.b)(c.a,{max:400,filename:"calayer-metal-1.gif",alt:"Blue triangle animating from 1x to 2x scale when a button is clicked",caption:"",mdxType:"CaptionedImage"}),Object(t.b)("blockquote",null,Object(t.b)("p",{parentName:"blockquote"},"Full sample code is available for this project at ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/NGCAMetalLayerAnimationExample"}),"NGCAMetalLayerAnimationExample"),".")),Object(t.b)("h2",null,"Getting started"),Object(t.b)("p",null,"Our sample project will follow the architecture adapted from the Xcode default Metal project (what Xcode gives you after New Project > Cross Platform Game):"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"We'll have a ",Object(t.b)("inlineCode",{parentName:"li"},"Renderer")," with a ",Object(t.b)("inlineCode",{parentName:"li"},"draw(drawable:)")," method which is responsible for issuing Metal draw calls with the ",Object(t.b)("inlineCode",{parentName:"li"},"drawable")," as a target. The renderer will have a ",Object(t.b)("inlineCode",{parentName:"li"},"triangleScale")," property to determine what transform to the triangle's vertices."),Object(t.b)("li",{parentName:"ol"},"We'll have a custom view with a ",Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://developer.apple.com/documentation/quartzcore/cametallayer"}),Object(t.b)("inlineCode",{parentName:"a"},"CAMetalLayer"))," subclass, and we'll override the layer's ",Object(t.b)("inlineCode",{parentName:"li"},"display()")," to call ",Object(t.b)("inlineCode",{parentName:"li"},"draw"),", passing the drawable from ",Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://developer.apple.com/documentation/quartzcore/cametallayer/1478172-nextdrawable"}),Object(t.b)("inlineCode",{parentName:"a"},"nextDrawable")),".")),Object(t.b)("blockquote",null,Object(t.b)("p",{parentName:"blockquote"},"Note: we need a ",Object(t.b)("inlineCode",{parentName:"p"},"CAMetalLayer")," instead of an ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/metalkit/mtkview"}),Object(t.b)("inlineCode",{parentName:"a"},"MTKView"))," here, for reasons I'll get into near the end of this post.")),Object(t.b)("p",null,"Our custom layer looks like this:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"CustomCAMetalLayer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": CAMetalLayer {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"var"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," renderer: Renderer!")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"device"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"MTLCreateSystemDefaultDevice"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()!")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"Renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"device"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"device"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"!)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setNeedsDisplay"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"/// Block the current thread until this layer has a drawable ready.")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"blockRequestingNextDrawable"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() -> CAMetalDrawable {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"var"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," drawable: CAMetalDrawable? = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"while"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," (drawable == "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            drawable = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"nextDrawable"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," drawable!")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"display"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," drawable = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"blockRequestingNextDrawable"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"draw"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"drawable"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": drawable)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"MetalView"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIView {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"var"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," layerClass: "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"AnyClass"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," CustomCAMetalLayer.self")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"We set up our renderer in init, wait for a drawable to become available, and use our renderer to draw the triangle. The renderer code is more verbose since Metal requires quite a lot of code to set up a command queue, vertex buffers, etc, but you can view the code ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/NGCAMetalLayerAnimationExample/blob/master/NGCAMetalLayerAnimationExample%20iOS/GameViewController.swift#L29"}),"here")," if you like - it creates a buffer of three vertices for the points of the triangle, and the fragment shader shades them blue."),Object(t.b)(c.a,{max:400,filename:"calayer-metal-2.png",alt:"Blue triangle displaying on the screen",caption:"Hello World",mdxType:"CaptionedImage"}),Object(t.b)("h2",null,"CALayer animations"),Object(t.b)("p",null,"In order to implement our triangle's scale-up animation, we need to talk more about CoreAnimation."),Object(t.b)("p",null,Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/quartzcore"}),"CoreAnimation")," is the framework that powers ",Object(t.b)("inlineCode",{parentName:"p"},"CALayer")," (used to implement ",Object(t.b)("inlineCode",{parentName:"p"},"UIView"),"). Changes in a ",Object(t.b)("inlineCode",{parentName:"p"},"CALayer")," (like setting a new position or background color) are initiated by changing the layer's properties."),Object(t.b)("p",null,"Many layer properties (you can see a list ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreAnimation_guide/AnimatableProperties/AnimatableProperties.html#//apple_ref/doc/uid/TP40004514-CH11-SW4"}),"here"),") are animatable, which means that when they're changed, CoreAnimation will interpolate between the old value and the new value to animate the change. If you've ever tried to change the background color of a ",Object(t.b)("inlineCode",{parentName:"p"},"UIView"),"'s layer directly (using ",Object(t.b)("inlineCode",{parentName:"p"},"self.layer.backgroundColor"),"), you might notice that the change isn't instant - there's a subtle fade. Animatable ",Object(t.b)("inlineCode",{parentName:"p"},"CALayer"),' properties all have default, "implicit" animations.'),Object(t.b)("p",null,"We'll add our ",Object(t.b)("inlineCode",{parentName:"p"},"triangleScale")," as a custom layer property - we want this property to animate between 1 and 2 to double the size of the triangle."),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"CustomCAMetalLayer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": CAMetalLayer {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"var"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," triangleScale: CGFloat")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"1")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"display"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Float"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(triangleScale)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"Our button callback sets the new value:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"@objc"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"didTapButton"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    layer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"2")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"And when we run the app and click the button, we get..."),Object(t.b)(c.a,{max:400,filename:"calayer-metal-3.gif",alt:"Blue triangle displaying with cursor clicking button, but nothing happens with the triangle after button click",caption:"",mdxType:"CaptionedImage"}),Object(t.b)("p",null,"...nothing!"),Object(t.b)("h2",null,"Customizing layer animations"),Object(t.b)("p",null,"Turns out, custom CALayer properties don't come completely for free. I haven't been able to find an official Apple reference on this, but there are several articles online about how to implement them - I'd recommend ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://www.objc.io/issues/12-animations/animating-custom-layer-properties/"}),"this objc.io article")," and ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://vimeo.com/44986916"}),"this talk from Rob Napier"),", but I'll try to summarize here."),Object(t.b)("p",null,"In order for CoreAnimation to manage our custom layer properties, they have to be Objc ",Object(t.b)("inlineCode",{parentName:"p"},"@dynamic")," properties. Declaring an ",Object(t.b)("inlineCode",{parentName:"p"},"@dynamic")," property in Objc tells the compiler that the property implementation will be managed dynamically - in this case, since we're a subclass of ",Object(t.b)("inlineCode",{parentName:"p"},"CALayer"),", CoreAnimation will manage this property for us, and we don't have to declare getters or setters, or handle initializing the property. (Learn more about ",Object(t.b)("inlineCode",{parentName:"p"},"@dynamic")," in the ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjectiveC/Chapters/ocProperties.html#//apple_ref/doc/uid/TP30001163-CH17-SW2"}),"Objective-C reference"),".)"),Object(t.b)("p",null,"The dynamic nature of how CALayer handles property animations is why we need to use a ",Object(t.b)("inlineCode",{parentName:"p"},"CAMetalLayer")," instead of an ",Object(t.b)("inlineCode",{parentName:"p"},"MTKView")," - if we were to declare these properties on a view subclass instead of a layer subclass, they wouldn't be automatically handled in the same way."),Object(t.b)("p",null,"There's another wrinkle though - Swift doesn't support managing dynamic properties in the same way. There's a ",Object(t.b)("inlineCode",{parentName:"p"},"dynamic")," keyword in Swift, but that specifies that ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://swiftunboxed.com/interop/objc-dynamic/"}),"function calls should use Objc-style dynamic method dispatch"),", not that property implementations should be managed dynamically."),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"@dynamic")," is a mechanism in Objc that just doesn't exist in Swift. Luckily, there's a way to get around it - ",Object(t.b)("inlineCode",{parentName:"p"},"@NSManaged"),"."),Object(t.b)("h2",null,"Dynamic properties in Swift"),Object(t.b)("p",null,"The ",Object(t.b)("inlineCode",{parentName:"p"},"@NSManaged")," property modifier is used for Core Data, but its effect is the same as Objc's ",Object(t.b)("inlineCode",{parentName:"p"},"@dynamic")," - it defers implementation of the property getters and setters. If we declare our layer property as ",Object(t.b)("inlineCode",{parentName:"p"},"@NSManaged"),", ",Object(t.b)("inlineCode",{parentName:"p"},"CALayer")," will be able to manage its getters and setters! Our new code looks like:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"CustomCAMetalLayer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": CAMetalLayer {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"@NSManaged"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"var"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," triangleScale: CGFloat")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"1")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"display"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Float"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(triangleScale)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"Now that we've declared our property dynamically, the last step is to tell CoreAnimation that we want the layer to be redisplayed when the property changes. We do this by overriding ",Object(t.b)("inlineCode",{parentName:"p"},"needsDisplay(forKey:)"),"."),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"needsDisplay"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"forKey"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"key"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"String"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") -> "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"if"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," key == "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"triangleScale"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"needsDisplay"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"forKey"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": key)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"We have a triangle that changes scale! The only thing left is to actually implement the animation."),Object(t.b)(c.a,{max:400,filename:"calayer-metal-4.gif",alt:"Blue triangle changing scale (not animated) when the button is clicked.",caption:"",mdxType:"CaptionedImage"}),Object(t.b)("h2",null,"Using presentation layers"),Object(t.b)("p",null,'In CoreAnimation, each layer is actually composed of a "model" layer, which represents the current set of non-interpolated properties, and a "presentation" layer, which represents the layer\'s current state as it appears on screen. Copies of the model and presentation layers are accessible through ',Object(t.b)("inlineCode",{parentName:"p"},"CALayer"),"'s ",Object(t.b)("inlineCode",{parentName:"p"},"model()")," and ",Object(t.b)("inlineCode",{parentName:"p"},"presentation()")," methods."),Object(t.b)("p",null,"As an example: let's say we added an animation for our triangleScale, to take its value from 1 to 2."),Object(t.b)("p",null,"The first thing we have to do is make sure our ",Object(t.b)("inlineCode",{parentName:"p"},"CALayer")," subclass knows how to be instantiated as a presentation copy - CoreAnimation will call ",Object(t.b)("inlineCode",{parentName:"p"},"init(layer:)")," for this."),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"layer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Any"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"layer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": layer)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"guard"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," layer = layer as? CustomCAMetalLayer "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"else"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = layer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"Then we add an explicit animation:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," animation = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"CABasicAnimation"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"keyPath"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"triangleScale"')),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"fromValue"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"1")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"toValue"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"2")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"duration"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0.25")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"metalView"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"add"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(animation, "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"forKey"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"some-key"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(t.b)("p",null,"And a print in our layer's ",Object(t.b)("inlineCode",{parentName:"p"},"display()"),":"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," modelScale = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"model"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"guard"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," presentationScale = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"presentation"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()?."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"else"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"model: '),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"\\("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"modelScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),")"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),", presentation: "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"\\("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"presentationScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),")"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(t.b)("p",null,"We'll get the following output:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":""},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.0053806598298252"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.1318122893571854"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.2192756980657578"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.2894128262996674"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.363368809223175"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.4336175322532654"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.5070415139198303"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.577137529850006"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.649360716342926"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.7197566032409668"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.7918232679367065"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.8647624254226685"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.9373475313186646"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.0"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 1.0, presentation: 1.0"))),Object(t.b)("p",null,"The model layer never changes, and the presentation layer's ",Object(t.b)("inlineCode",{parentName:"p"},"triangleScale")," is automatically interpolated from 1 to 2 - but changes back to 1 after the animation ends, since CoreAnimation starts using the model value again when the animation ends. Before we see the triangle growing, we'll have to fix this interpolation issue."),Object(t.b)("h2",null,"Custom animatable properties"),Object(t.b)("p",null,"I noted before that with CoreAnimation, animatable layer properties have default animations that apply when you change the property. We can define our own animation by returning a value from the ",Object(t.b)("inlineCode",{parentName:"p"},"action(forKey:)")," class method:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"action"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"forKey"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"key"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"String"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") -> CAAction? {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"if"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," key == "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"triangleScale"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," animation = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"CABasicAnimation"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"keyPath"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": key)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"fromValue"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"presentation"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()?."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," animation")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"action"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"forKey"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": key)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}       ")))),Object(t.b)("blockquote",null,Object(t.b)("p",{parentName:"blockquote"},"Note: specifying the fromValue here is important, but other animation properties (duration, timing function, etc) will be inherited from the current ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/quartzcore/catransaction"}),Object(t.b)("inlineCode",{parentName:"a"},"CATransaction")),".")),Object(t.b)("p",null,"If we specify an action, we don't need to define an animation anymore - CoreAnimation will automatically add the animation we defined when the layer's property changes. Adding the animation is now:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"guard"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," layer = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"metalView"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," as? CustomCAMetalLayer "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"else"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"layer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"2")))),Object(t.b)("p",null,"Our model layer stays at 2 while the presentation layer's value is interpolated all the way there."),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":""},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.0"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.0715526789426804"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.1949102729558945"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.27173313498497"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.3447068929672241"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.4154288470745087"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.4875067472457886"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.5570306777954102"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.628233015537262"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.7017306685447693"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.771639108657837"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.8431110382080078"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.9160330295562744"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 1.9892664551734924"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"model: 2.0, presentation: 2.0"))),Object(t.b)("h2",null,"The last step"),Object(t.b)("p",null,"We've got our presentation layer set up to interpolate the triangle's scale, so the last step is to pass it to the renderer. We'll change our layer's display function to use the presentation value:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"display"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"guard"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," effectiveScale = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"presentation"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()?."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"else"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Float"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(effectiveScale)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," drawable = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"blockRequestingNextDrawable"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"renderer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"draw"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"drawable"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": drawable)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"Specify a few parameters for the animation:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"CATransaction."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"begin"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    CATransaction."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setAnimationDuration"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"2"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    CATransaction."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setAnimationTimingFunction"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"name"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"easeInEaseOut"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"))")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    layer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"2")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"CATransaction."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"commit"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")))),Object(t.b)("p",null,"And tada! ðŸŽ‰"),Object(t.b)(c.a,{max:400,filename:"calayer-metal-1.gif",alt:"Blue triangle animating from 1x to 2x scale when the button is clicked",caption:"",mdxType:"CaptionedImage"}),Object(t.b)("h2",null,"More complicated animations"),Object(t.b)("p",null,"Using CALayer properties to implement our animations means that we can hook into the entire CoreAnimation ecosystem - our ",Object(t.b)("inlineCode",{parentName:"p"},"triangleScale")," is now every bit as animatable as every other ",Object(t.b)("inlineCode",{parentName:"p"},"CALayer")," property. One benefit is that we get keyframe animations with no extra work! Let's make the triangle jump around a bit:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," layer = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"metalView"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," as! CustomCAMetalLayer")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," animation = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"CAKeyframeAnimation"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"keyPath"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"triangleScale"')),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"values"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = [")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    layer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"-1"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"2"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"-2"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    layer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"triangleScale")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"]")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"keyTimes"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = ["),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0.2"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0.5"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0.8"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"1"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"]")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"timingFunctions"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = [")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"name"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"easeInEaseOut"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"),")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"name"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"easeInEaseOut"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"),")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"name"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"easeInEaseOut"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"),")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"name"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"easeInEaseOut"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"]")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"animation."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"duration"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"8")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"metalView"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layer"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"add"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(animation, "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"forKey"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"expandScale"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(t.b)(c.a,{max:400,filename:"calayer-metal-5.gif",alt:"Blue triangle animating between multiple different scales with a keyframe animation",caption:"",mdxType:"CaptionedImage"}),Object(t.b)("h2",null,"Conclusion and further reading"),Object(t.b)("p",null,"CoreAnimation was always one of the more confusing parts of iOS development to me, but hopefully this post has helped to pull back the covers a bit on how the system works - going through these examples has certainly helped me understand how to make Metal play nicely with other parts of the iOS ecosystem."),Object(t.b)("p",null,"There's a lot of great Apple and non-Apple content written about custom CALayer animations ",Object(t.b)("em",{parentName:"p"},"not")," related to Metal that I'd recommend checking out:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://www.objc.io/issues/12-animations/animating-custom-layer-properties/"}),"Animating Custom Layer Properties")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://vimeo.com/44986916"}),"Cocoaheads June 2012: Animating Custom Layer Properties")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/"}),"Advanced Graphics with CoreAnimation")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://nsscreencast.com/episodes/290-core-graphics-custom-calayer"}),"Custom CALayer")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreAnimation_guide/AdvancedAnimationTricks/AdvancedAnimationTricks.html"}),"Advanced Animation Tricks"))),Object(t.b)("style",{className:"vscode-highlight-styles"},".dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }"))}i.isMDXComponent=!0},263:function(e,a,s){"use strict";s.d(a,"d",function(){return N}),s.d(a,"b",function(){return g}),s.d(a,"c",function(){return d}),s.d(a,"g",function(){return h}),s.d(a,"e",function(){return k}),s.d(a,"f",function(){return u}),s.d(a,"a",function(){return f});var t=s(2),n=s(265),c=s.n(n),p=s(266),m=s.n(p),b=s(267),i=s.n(b),l=s(268),r=s.n(l);function o(){var e=O(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n            url('","') format('woff'),\n            url('","') format('truetype'),\n            url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n\n    @media (prefers-color-scheme: dark) {\n        html, body {\n            background-color: #2b2c2f;\n        }\n    }\n"]);return o=function(){return e},e}function j(){var e=O(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n             url('","') format('woff'),\n             url('","') format('truetype'),\n             url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n"]);return j=function(){return e},e}function O(e,a){return a||(a=e.slice(0)),e.raw=a,e}var N=Object(t.a)(j(),c.a,c.a,m.a,i.a,r.a),g=Object(t.a)(o(),c.a,c.a,m.a,i.a,r.a),d=t.c.div.withConfig({displayName:"default__Div",componentId:"d4l1a1-0"})([""]),h=(t.c.nav.withConfig({displayName:"default__Nav",componentId:"d4l1a1-1"})([""]),t.c.ul.withConfig({displayName:"default__UL",componentId:"d4l1a1-2"})(["margin:0;padding:0;"])),k=t.c.li.withConfig({displayName:"default__LI",componentId:"d4l1a1-3"})(["margin:0;padding:0;"]),u=t.c.p.withConfig({displayName:"default__P",componentId:"d4l1a1-4"})(["margin:0;padding:0;"]),f=t.c.a.withConfig({displayName:"default__A",componentId:"d4l1a1-5"})(["&,&:hover,&:focus{outline:none;color:inherit;text-decoration:none;}"])},265:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot"},266:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff"},267:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf"},268:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg"},269:function(e,a,s){"use strict";var t=s(0),n=s.n(t),c=s(263),p=s(66),m=s(2),b=s(273),i=s(274),l=m.c.nav.withConfig({displayName:"Nav__StyledNav",componentId:"sc-1cm9dpf-0"})(["display:flex;flex-direction:row;flex-wrap:wrap;padding:20px 60px;border-bottom:1px solid #ddd;@media all and (max-width:600px){padding:20px;}@media (prefers-color-scheme:dark){border-color:#777;}"]),r=m.c.div.withConfig({displayName:"Nav__Title",componentId:"sc-1cm9dpf-1"})(['flex:2;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:28px;font-display:swap;@media (prefers-color-scheme:dark){color:#fff;}']),o=Object(m.c)(c.g).withConfig({displayName:"Nav__NavLinks",componentId:"sc-1cm9dpf-2"})(["flex:10;display:flex;flex-direction:horizontal;flex-wrap:wrap;justify-content:flex-end;height:100%;align-self:center;"]),j=Object(m.c)(c.e).withConfig({displayName:"Nav__NavLink",componentId:"sc-1cm9dpf-3"})(['display:flex;flex-direction:vertical;align-items:center;text-align:center;font-family:"Bariol","Helvetica Neue","Helvetica",sans-serif;font-size:16px;padding:0px 20px;']),O=Object(m.c)(c.a).withConfig({displayName:"Nav__StyledA",componentId:"sc-1cm9dpf-4"})(["height:auto;color:",";display:flex;flex-direction:vertical;align-items:center;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{color:",";}"],p.a,p.b);a.a=function(e){return n.a.createElement(l,null,n.a.createElement(r,null,n.a.createElement(O,{href:e.blog?"/blog":"/"},"NOAH GILMORE")),n.a.createElement(o,null,n.a.createElement(j,null,n.a.createElement(O,{"aria-label":"Blog Home",href:"/blog"},n.a.createElement(b.b,{color:p.a,size:"24"}))),n.a.createElement(j,null,n.a.createElement(O,{"aria-label":"Twitter",href:"https://twitter.com/noahsark769"},n.a.createElement(i.a,{color:p.a,size:"24"}))),n.a.createElement(j,null,n.a.createElement(O,{"aria-label":"App Store",href:"https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8"},n.a.createElement(b.a,{color:p.a,size:"24"})))))}},270:function(e,a,s){"use strict";s.d(a,"a",function(){return m}),s.d(a,"b",function(){return r});var t=s(0),n=s.n(t),c=s(2),p=s(264);var m=c.c.div.withConfig({displayName:"BlogPost__BlogPostContainer",componentId:"gyfnna-0"})(["padding:60px 0;margin:0 auto;width:90%;@media all and (min-width:600px){max-width:",";margin:auto;}@media all and (max-width:600px){width:100%;padding:20px 0;","}"],function(e){return e.isCompressed?"700px":"1600px"},function(e){return e.darkened&&Object(c.b)(["background-color:#f6f6f6;@media (prefers-color-scheme:dark){background-color:inherit;}"])}),b=c.c.div.withConfig({displayName:"BlogPost__TitleContainer",componentId:"gyfnna-1"})(["width:100%;margin-bottom:40px;"]),i=c.c.h1.withConfig({displayName:"BlogPost__Heading",componentId:"gyfnna-2"})(['width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:34px;margin-bottom:10px;line-height:1.2em;@media (prefers-color-scheme:dark){color:#fff;}']),l=c.c.p.withConfig({displayName:"BlogPost__DateContainer",componentId:"gyfnna-3"})(['font-family:"Gentium Book Basic",times,serif;font-style:italic;font-size:16px;color:#999;']),r=function(e){return n.a.createElement("div",null,n.a.createElement(p.Helmet,null,n.a.createElement("title",null,e.title)),n.a.createElement(b,null,n.a.createElement(i,null,e.title),n.a.createElement(l,null,e.date)))};n.a.Component},271:function(e,a,s){"use strict";s.d(a,"a",function(){return p});var t=s(0),n=s.n(t);var c=s(2).c.div.withConfig({displayName:"MarkdownContent__Container",componentId:"zl3v0s-0"})(['p,li{margin:0;padding:0;font-family:"Gentium Book Basic",times,serif;font-size:21px;line-height:29px;color:#333;padding-bottom:15px;margin-top:15px;@media all and (max-width:600px){width:90%;margin:15px auto 0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}blockquote{background-color:#faf9f7;border-left:4px solid #e5e4e1;padding:20px;font-style:italic;@media (prefers-color-scheme:dark){background-color:#3f3f3f;}p{margin:0;padding:0;color:#555;@media (prefers-color-scheme:dark){color:#fff;}}}a{color:#1A3F4B;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;@media (prefers-color-scheme:dark){color:#60b5d1;}}a:hover{color:#47656E;@media (prefers-color-scheme:dark){color:#6bcfef;}}code{font-family:monospace;font-size:16px;padding:3px 5px;margin:0px 2px;@media (prefers-color-scheme:dark){color:#fff;}}code:not(.vscode-highlight-code){font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:first-child{margin-left:0;}pre{display:block;margin:0;padding:0;margin-top:10px;border:1px solid #e5e4e1;border-radius:2px;@media all and (max-width:600px){width:100%;margin:10px auto 0 auto;border-left:none;border-right:none;border-radius:0;overflow-x:scroll;}}pre > code{display:block;margin:0;padding:10px;font-family:monospace;font-size:14px;line-height:17px;white-space:pre-wrap;@media all and (max-width:600px){font-size:15px;white-space:pre;padding:15px 5% 15px 5%;width:100%;}}pre + p{margin-top:30px;}ol{margin-left:30px;@media all and (max-width:600px){width:90%;margin:0 auto 0 30px;}@media (prefers-color-scheme:dark){color:#fff;}}ol li{list-style-type:decimal;}ul li{list-style-type:square;margin-left:40px;@media all and (max-width:600px){width:90%;margin:0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1,h2,h3,h4,h5,h6{width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;margin-bottom:10px;margin-top:40px;@media all and (max-width:600px){width:90%;margin:40px auto 10px auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1{font-size:28px;}h2{font-size:24px;}h3{font-size:20px;}em{font-style:italic;}strong{font-weight:bold;}']),p=function(e){var a,s;function t(){return e.apply(this,arguments)||this}return s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s,t.prototype.render=function(){return n.a.createElement(c,null,this.props.children)},t}(n.a.Component)},272:function(e,a,s){"use strict";function t(e){return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}s.d(a,"a",function(){return t})},275:function(e,a,s){"use strict";s(114);var t=s(0),n=s.n(t),c=s(264),p=s(263),m=s(269),b=s(2),i=s(273),l=s(274),r=s(66);var o=b.c.div.withConfig({displayName:"EndButtons__Container",componentId:"sc-2ta1su-0"})(["width:100%;display:flex;flex-direction:horizontal;align-items:center;justify-content:center;margin-top:40px;"]),j=b.c.div.withConfig({displayName:"EndButtons__ButtonStyle",componentId:"sc-2ta1su-1"})(["background-color:",";-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{background-color:",";}width:100px;padding:10px 20px;text-align:center;display:flex;flex-direction:vertical;align-items:center;justify-content:center;border-radius:4px;",";"],r.a,r.b,function(e){return e.margin&&Object(b.b)(["margin-right:20px;"])}),O=function(e){return n.a.createElement(p.a,{href:e.url,target:e.newTab?"_blank":null,"aria-label":e.label},n.a.createElement(j,{margin:e.margin},e.children))},N=function(e){var a,s;function t(){return e.apply(this,arguments)||this}return s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s,t.prototype.render=function(){var e,a=(e="Post by @noahsark769: "+this.props.tweetTitle+" "+this.props.tweetUrl,"https://twitter.com/intent/tweet?text="+encodeURIComponent(e));return n.a.createElement(o,null,n.a.createElement(O,{label:"Twitter",url:a,newTab:!0,margin:!0},n.a.createElement(l.a,{size:24,color:"white"})),n.a.createElement(O,{label:"Blog homepage",url:"/blog"},n.a.createElement(i.b,{size:24,color:"white"})))},t}(n.a.Component),g=s(270),d=s(271),h=s(272),k=s(29);var u=b.c.div.withConfig({displayName:"Disqus__Wrapper",componentId:"sc-1jjeqqj-0"})(["margin-top:80px;"]),f=function(e){var a,s;function t(){return e.apply(this,arguments)||this}s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s;var c=t.prototype;return c.render=function(){return n.a.createElement(u,null,n.a.createElement("div",{id:"disqus_thread"}))},c.componentDidMount=function(){var e,a;e=document,(a=e.createElement("script")).src="//noahgilmore-com.disqus.com/embed.js",a.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(a)},t}(n.a.Component),v=s(115),y=s.n(v);s.d(a,"a",function(){return E});var w=b.c.div.withConfig({displayName:"BlogPageLayout__Container",componentId:"sc-118ribu-0"})(["@media (prefers-color-scheme:dark){background-color:#2b2c2f;}"]),C=b.c.div.withConfig({displayName:"BlogPageLayout__NonContent",componentId:"sc-118ribu-1"})(["@media all and (max-width:600px){padding-right:5%;padding-left:5%;}"]),x=(b.c.div.withConfig({displayName:"BlogPageLayout__InstabugContainer",componentId:"sc-118ribu-2"})(["min-width:430px;margin-left:60px;@media all and (max-width:1200px){display:none;}"]),b.c.div.withConfig({displayName:"BlogPageLayout__InstabugInner",componentId:"sc-118ribu-3"})([""]),b.c.div.withConfig({displayName:"BlogPageLayout__PostContainerOuter",componentId:"sc-118ribu-4"})(["display:flex;flex-direction:row;padding:",";@media all and (max-width:1200px){padding:0;}"],function(e){return e.hasPadding?"20px":"0"})),A=b.c.div.withConfig({displayName:"BlogPageLayout__PostContainerInner",componentId:"sc-118ribu-5"})(["display:block;flex-direction:column;width:100%;"]),E=function(e){var a,s;function t(a){var s;return(s=e.call(this,a)||this).state={isShowingInstabug:!0},s}s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s;var b=t.prototype;return b.handleInstabugHide=function(){this.setState({isShowingInstabug:!1})},b.render=function(){var e="undefined"!=typeof window&&window.matchMedia("(prefers-color-scheme: dark)").matches;return n.a.createElement(w,null,n.a.createElement(p.b,null),n.a.createElement(c.Helmet,null,n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Roboto:700",rel:"stylesheet",type:"text/css"}),n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Gentium+Book+Basic",rel:"stylesheet"}),!e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/atom-one-light.min.css"}),e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/zenburn.min.css"}),n.a.createElement("meta",{name:"twitter:card",content:"summary"}),n.a.createElement("meta",{name:"twitter:creator",content:"@noahsark769"}),n.a.createElement("meta",{property:"og:url",content:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement("meta",{property:"og:title",content:this.props.pageContext.frontmatter.title}),n.a.createElement("meta",{property:"og:description",content:this.props.pageContext.frontmatter.staticPreview}),n.a.createElement("meta",{name:"description",content:this.props.pageContext.frontmatter.staticPreview})),n.a.createElement(m.a,{blog:!0}),n.a.createElement(g.a,{isCompressed:!0},n.a.createElement(x,{hasPadding:!1},n.a.createElement(A,null,n.a.createElement(C,null,n.a.createElement(g.b,{title:this.props.pageContext.frontmatter.title,date:Object(h.a)(this.props.pageContext.frontmatter.date)})),n.a.createElement(d.a,null,this.props.children,this.props.pageContext.frontmatter.instabugEnabled&&n.a.createElement("p",null,"If you enjoyed this post, consider checking out Instabug - checking them out helps ",n.a.createElement("a",{href:"/blog/advertising"},"support")," my writing and open source projects.")),this.props.pageContext.frontmatter.instabugEnabled&&n.a.createElement(k.a,null),n.a.createElement(C,null,n.a.createElement(N,{tweetTitle:this.props.pageContext.frontmatter.title,tweetUrl:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement(f,null))))))},b.componentDidMount=function(){y.a.initialize("UA-35325391-1"),y.a.pageview(window.location.pathname+window.location.search)},t}(n.a.Component)}}]);
//# sourceMappingURL=component---src-pages-blog-coreanimation-metal-mdx-e989667e2b8d1e520135.js.map