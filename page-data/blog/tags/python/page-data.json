{"componentChunkName":"component---src-templates-mdx-blog-posts-template-jsx","path":"/blog/tags/python/","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"edges":[{"node":{"parent":{"name":"catalina-importerror-no-module-named-zlib","relativePath":"blog/catalina-importerror-no-module-named-zlib.mdx"},"id":"ba22edb7-2c29-59a4-a2cd-fa98d32d9113","frontmatter":{"title":"ImportError: No module named zlib on macOS Catalina","date":"2019-11-23T00:00:00.000Z","mdxPreview":"A few times now, I've had to get around an issue that happens on macOS Catalina where you try to run a Python script and it fails with an import error...\n","tags":"macOS, catalina, python"}}},{"node":{"parent":{"name":"pyparsing-trees","relativePath":"blog/pyparsing-trees.mdx"},"id":"0164965f-3aac-5da1-b7db-846082729a29","frontmatter":{"title":"Syntax trees with Pyparsing","date":"2016-10-23T00:00:00.000Z","mdxPreview":"Let's talk about [syntax trees](https://en.wikipedia.org/wiki/Abstract_syntax_tree). In static analysis, a common operation is to take a character string (e.g. \"x = 1\") and transform it into well structured data.\nLet's try to do this in python. We'll use [Pyparsing](http://pyparsing.wikispaces.com/) as our tokenization tool.\n","tags":"programming, python, pyparsing"}}}],"tag":"python"}}}