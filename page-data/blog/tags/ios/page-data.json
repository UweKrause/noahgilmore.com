{"componentChunkName":"component---src-templates-mdx-blog-posts-jsx","path":"/blog/tags/ios/","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"edges":[{"node":{"parent":{"name":"nesting-property-wrappers","relativePath":"blog/nesting-property-wrappers.mdx"},"id":"55e7c55e-8b2f-5550-9687-3f98f324a94e","frontmatter":{"title":"Nested Property Wrappers in Swift","date":"2020-05-11T00:00:00.000Z","mdxPreview":"You can nest [property wrapers](https://www.swiftbysundell.com/articles/property-wrappers-in-swift/) in Swift, but it's difficult. NSHipster has a [great article](https://nshipster.com/propertywrapper/) about all things property wrappers, and the summary of trying to compose them (which others have echoed) is that it's hard and prone to compiler errors...\n","tags":"swift, ios"}}},{"node":{"parent":{"name":"userdefaults-editor-swiftui","relativePath":"blog/userdefaults-editor-swiftui.mdx"},"id":"eac9f592-8c74-5a05-84a7-81807aaf3921","frontmatter":{"title":"Writing a UserDefaults editor with SwiftUI and property wrappers","date":"2020-05-05T00:00:00.000Z","mdxPreview":"I've been talking a lot online about how useful SwiftUI has been in building debug components for [Fluency](https://getfluency.io?utm_source=noahgilmore.com&utm_campaign=userdefaultseditor&utm_content=0) - debug menus are one of the places where you can start using SwiftUI right now..\n","tags":"swift, ios, macos, swiftui"}}},{"node":{"parent":{"name":"coreanimation-metal","relativePath":"blog/coreanimation-metal.mdx"},"id":"b400341c-73ae-5d77-b711-dd1dca72cdae","frontmatter":{"title":"Animating Metal Content with CoreAnimation","date":"2019-12-10T00:00:00.000Z","mdxPreview":"Recently, I've been learning more about Metal - I'm still working through the basics, but I've written a couple of [posts](/blog/gpu-capture-flickering) and [tweets](https://twitter.com/noahsark769/status/1197599674917515264) about it, and I'm about halfway through [Metal By Example](https://github.com/noahsark769/MetalByExampleExamples). Up until now I've mostly been coding sample projects, but I recently had the opportunity to prototype a Metal implementation integrated into our production app at work...","tags":"ios, swift, metal, apple"}}},{"node":{"parent":{"name":"gpu-capture-flickering","relativePath":"blog/gpu-capture-flickering.mdx"},"id":"1a828ef9-e6d4-5893-8e32-03ce09dc5cb6","frontmatter":{"title":"GPU Capture Button Flickering","date":"2019-10-28T00:00:00.000Z","mdxPreview":"One of the \"[Things I Don't Know](https://overreacted.io/things-i-dont-know-as-of-2018/)\" in the iOS ecosystem is Metal. As such, I've been working through [Metal By Example](https://metalbyexample.com/) recently, which still stands as a great introduction to Metal...\n","tags":"ios, metal, swift, apple"}}},{"node":{"parent":{"name":"swiftui-relativedatetimeformatter","relativePath":"blog/swiftui-relativedatetimeformatter.mdx"},"id":"57af249a-429c-51ca-9311-41e5a1eb877f","frontmatter":{"title":"Relative date time formatting in SwiftUI","date":"2019-10-19T00:00:00.000Z","mdxPreview":"In the wild world of 2019 SwiftUI development, lots of things aren't documented. One such thing I ran into recently was the usage of `RelativeDateTimeFormatter` in a `Text` view...\n","tags":"ios, swift, swiftui, apple"}}},{"node":{"parent":{"name":"color-compatibility-pod","relativePath":"blog/color-compatibility-pod.mdx"},"id":"cc313f00-7e8b-5947-b987-dd5ee774c8da","frontmatter":{"title":"ColorCompatibility Library","date":"2019-10-05T00:00:00.000Z","mdxPreview":"I [wrote previously](/blog/dark-mode-uicolor-compatibility) about a technique I use in [Trestle](https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8) and [CIFilter.io](https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8) to support iOS 12 and lower while still using system provided, dark-mode accessible colors...\n","tags":"ios, swift, uikit, apple"}}},{"node":{"parent":{"name":"uiwindowscene-black-screen","relativePath":"blog/uiwindowscene-black-screen.mdx"},"id":"8ad62ee7-45bc-59ce-810b-98806d343f39","frontmatter":{"title":"iOS 13 UIWindowScene Black Screen","date":"2019-09-21T00:00:00.000Z","mdxPreview":"I've encountered this bug enough times that I figured it was time to write a quick post about it. If you've looked into [multiple window support](https://developer.apple.com/documentation/uikit/app_and_environment/scenes) for your app in iOS 13, you might know that a lot of the setup you used to have to do in the app delegate now lives in the scene delegate instead...\n","tags":"ios, swift, uikit, apple"}}},{"node":{"parent":{"name":"popover-uinavigationcontroller-preferredcontentsize","relativePath":"blog/popover-uinavigationcontroller-preferredcontentsize.mdx"},"id":"37096f3a-5c00-5c1c-a2d0-6c17eefca088","frontmatter":{"title":"Popovers, UINavigationController, and preferredContentSize","date":"2019-08-26T00:00:00.000Z","mdxPreview":"In this post we'll look at a very specific but tricky interaction in UIKit, one which took me multiple days to work out how to implement.\nIt's two view controllers of different sizes, pushed on a `UINavigationController`, which is presented as a popover. The view controllers...\n","tags":"ios, swift, popover, uinavigationcontroller, preferredcontentsize, apple"}}},{"node":{"parent":{"name":"cfbundleversion-invalid","relativePath":"blog/cfbundleversion-invalid.mdx"},"id":"5c048dc4-d8be-5e1f-9a95-f6a10d330fde","frontmatter":{"title":"The application's CFBundleVersion is invalid","date":"2019-08-22T00:00:00.000Z","mdxPreview":"For some reason lately, I've been having a lot of trouble installing apps and running tests in the iOS simulator on Xcode 10 (non-beta). The error message looks like this...\n","tags":"ios, swift, xcode, apple"}}},{"node":{"parent":{"name":"taking-down-sfsymbols","relativePath":"blog/taking-down-sfsymbols.mdx"},"id":"89b24104-0c0c-5724-b7e0-d2d379642de8","frontmatter":{"title":"Taking Down Assets from SFSymbols.com","date":"2019-08-20T00:00:00.000Z","mdxPreview":"At the beginning of June, I [launched](https://twitter.com/noahsark769/status/1136324324552396800) [sfsymbols.com](https://sfsymbols.com) since there wasn't a reference available on the web for searching and filtering the list of 1500+ system icons included in...\n","tags":"apple, ios"}}},{"node":{"parent":{"name":"dark-mode-uicolor-compatibility","relativePath":"blog/dark-mode-uicolor-compatibility.mdx"},"id":"3bd0ac46-7ff8-5b58-8a9f-d6e76a970663","frontmatter":{"title":"Backwards compatibility for iOS 13 system colors","date":"2019-06-09T00:00:00.000Z","mdxPreview":"At WWDC 2019, Apple announced that Dark Mode would be supported on iOS 13. There are some significant changes to UIKit in order to support this - many of them are detailed in the talk [Implementing Dark Mode on iOS](https://developer.apple.com/videos/play/wwdc2019/214/) which I'd highly recommend watching...\n","tags":"ios, swift, ios 13, darkmode, uicolor, apple"}}},{"node":{"parent":{"name":"uibutton-padding","relativePath":"blog/uibutton-padding.mdx"},"id":"853bedf7-015c-51b4-8dd5-6ff73d43d014","frontmatter":{"title":"UIButton: Padding Between Image and Text","date":"2019-05-06T00:00:00.000Z","mdxPreview":"Pop quiz: in a `UIButton`, how do you set a padding of 10pt between the image and the title? I had to do this at work recently, and I was surprised at how hard it was to reason about. There are several posts talking about this topic (including [this one](https://medium.com/short-swift-stories/using-uiedgeinsets-to-layout-a-uibutton-44ba04dd085c) which uses edge insets to flip the title and image!), but the answer for my use case was pretty hard to find...\n","tags":"ios, swift, uikit, uibutton, apple"}}},{"node":{"parent":{"name":"data-over-the-app-store","relativePath":"blog/data-over-the-app-store.mdx"},"id":"dc7ddd65-8966-5571-9e6d-edcbff42cab1","frontmatter":{"title":"Passing data through the App Store with UIPasteboard","date":"2019-04-15T00:00:00.000Z","mdxPreview":"About a year ago I wrote a puzzle game called Trestle. If you download it using any of the links in this post (by clicking on them on your iOS device), you'll get a nice Easter egg and two of the (normally paid) level sets enabled for free...","tags":"ios, swift, apple"}}},{"node":{"parent":{"name":"cifilterio","relativePath":"blog/cifilterio.mdx"},"id":"07b83d20-d1ed-59f1-a4b4-358c484c71ee","frontmatter":{"title":"CIFilter.io (Core Image Filter Reference)","date":"2019-03-31T00:00:00.000Z","mdxPreview":"Today I'm launching [CIFilter.io](https://cifilter.io) ðŸŽ‰ CIFilter.io is a project I've been working on for the last few months, and today it's [open source](https://github.com/noahsark769/cifilter.io/). It has two parts...\n","tags":"ios, swift, coreimage, apple"}}},{"node":{"parent":{"name":"civector-codable","relativePath":"blog/civector-codable.mdx"},"id":"16cb5ce3-367d-52c6-b386-10eead7efa15","frontmatter":{"title":"CIVector Codable","date":"2019-03-05T00:00:00.000Z","mdxPreview":"For my current [side project](https://twitter.com/noahsark769/status/1102318232025718785), I have to export CIFilter parameters to json, and I've been running into issues with various CoreImage types not conforming to Swift's `Codable`...","tags":"ios, swift, coreimage, apple"}}},{"node":{"parent":{"name":"swift-dependency-injection","relativePath":"blog/swift-dependency-injection.mdx"},"id":"001fd602-de7f-5c32-8d99-20ef3e67e68b","frontmatter":{"title":"Dead Simple Dependency Injection in Swift","date":"2019-02-15T00:00:00.000Z","mdxPreview":"At the most recent [Swift Language User Group](https://www.meetup.com/swift-language/) meetup, [Patrick Barry](https://twitter.com/patbarry) presented a [great talk](https://www.youtube.com/watch?v=dA9rGQRwHGs) about how Lyft implements dependency injection. I'd highly recommend watching the video - I was impressed by how clean and...","tags":"ios, swift, apple"}}},{"node":{"parent":{"name":"cifilter-colorwheel","relativePath":"blog/cifilter-colorwheel.mdx"},"id":"2ddc34c3-c80b-5d58-b236-9c339105a81d","frontmatter":{"title":"iOS Color Wheel Using CIFilter","date":"2019-01-28T00:00:00.000Z","mdxPreview":"After struggling for some time with CIFilter documentation at work, I've been [working on an app](https://twitter.com/noahsark769/status/1080580341973348352) which can apply filters interactively for various inputs...","tags":"ios, swift, coreimage, apple"}}},{"node":{"parent":{"name":"rxswift-multiple-subscribers","relativePath":"blog/rxswift-multiple-subscribers.mdx"},"id":"22354e72-23a9-568a-af90-ce002f843c09","frontmatter":{"title":"RxSwift: Multiple subscribers for a unit of work","date":"2018-12-08T00:00:00.000Z","mdxPreview":"I've been working on a side project for [better CIFilter documentation](https://twitter.com/noahsark769/status/1066878101907419137) lately, and I decided this was as good of a time as any to try out [RxSwift](https://github.com/ReactiveX/RxSwift). We use reactive programming at work, but I haven't really been able to dig into it yet...\n","tags":"ios, swift, rx, rxswift, apple"}}},{"node":{"parent":{"name":"install-nokogiri-macos-mojave","relativePath":"blog/install-nokogiri-macos-mojave.mdx"},"id":"2b4cdbda-6386-50f6-86e7-4322086b2188","frontmatter":{"title":"Installing Nokogiri from a Gemfile on Mojave","date":"2018-11-14T00:00:00.000Z","mdxPreview":"Another MacOS and another struggle through installing nokogiri. Most places online recommend using...","tags":"ios, swift, apple"}}},{"node":{"parent":{"name":"userdefaults-set-nil","relativePath":"blog/userdefaults-set-nil.mdx"},"id":"8433acc5-88f8-54a7-a970-d7bce52a0743","frontmatter":{"title":"How NOT to set nil in UserDefaults","date":"2018-10-22T00:00:00.000Z","mdxPreview":"To clear a value from UserDefaults, I previously thought it was fine to do something like this:\n```swift\nUserDefaults.standard.set(nil, forKey: \"myKey\")\n```\nTurns out that this works differently in different iOS versions. Starting in iOS 11, setting nil for a key works as I expected.\n","tags":"ios, swift, apple"}}},{"node":{"parent":{"name":"swift-pointer-uint","relativePath":"blog/swift-pointer-uint.mdx"},"id":"d779668d-0bde-56fc-9809-e500a0d60cb6","frontmatter":{"title":"Casting a pointer to UInt in Swift","date":"2018-10-16T00:00:00.000Z","mdxPreview":"There are some times in Swift, like when using [System Trace](https://developer.apple.com/videos/play/wwdc2016/411/), that you want to get the pointer value of an object directly as a `UInt` (passing the pointer to `kdebug_signpost` is one). I was surprised at how hard it was to find documentation on how to get a Swift referenceâ€™s pointer value as a `UInt`.\n","tags":"ios, swift, apple"}}},{"node":{"parent":{"name":"nsobject-equatable","relativePath":"blog/nsobject-equatable.mdx"},"id":"3d26cec4-5830-572a-b624-053f8d6989b4","frontmatter":{"title":"NSObject Equality is Tricky","date":"2016-11-13T00:00:00.000Z","mdxPreview":"Swift can be tricky sometimes. For example, what does the following print?\n```swift\nclass A: NSObject {\n  let x: Int\n\n  init(x: Int) {\n    self.x = x\n  }\n}\nfunc ==(left: A, right: A) -> Bool {\n  return left.x == right.x\n}\nprint(A(x: 1) == A(x: 1))\nprint([A(x: 1)] == [A(x: 1)])\n","tags":"ios, swift, objc, apple"}}}],"tag":"ios"}}}