{"componentChunkName":"component---src-pages-blog-pyparsing-trees-mdx","path":"/blog/pyparsing-trees/","webpackCompilationHash":"afc5fee171f837b08022","result":{"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{"title":"Syntax trees with Pyparsing","date":"2016-10-23T00:00:00.000Z","tags":"programming, python, pyparsing","staticPreview":"Let's talk about syntax trees. In static analysis, a common operation is to take a character string (e.g. \"x = 1\") and transform it into well structured data.","mdxPreview":"Let's talk about [syntax trees](https://en.wikipedia.org/wiki/Abstract_syntax_tree). In static analysis, a common operation is to take a character string (e.g. \"x = 1\") and transform it into well structured data.\nLet's try to do this in python. We'll use [Pyparsing](http://pyparsing.wikispaces.com/) as our tokenization tool.\n"}}}}