{"version":3,"sources":["webpack:///./src/pages/examples/ios-copy-to-clipboard/index.jsx"],"names":["Container","styled","div","TrackingLink","handleOnClick","toAppend","element","document","createElement","data","timestamp","Date","now","this","props","json","JSON","stringify","encoded","btoa","href","includes","value","style","body","appendChild","el","oldContentEditable","contentEditable","oldReadOnly","readOnly","range","createRange","selectNodeContents","s","window","getSelection","removeAllRanges","addRange","setSelectionRange","execCommand","iosCopyToClipboard","render","onClick","bind","children","React","Component","IndexPage","componentDidMount","ReactGA","initialize","pageview","location","pathname","search"],"mappings":"mqBAyBA,IAAMA,EAAYC,IAAOC,IAAV,uFAAGD,CAAH,6CAMTE,E,gGACFC,cAAA,WACI,IAOIC,EAPAC,EAAUC,SAASC,cAAc,SACjCC,E,+VAAI,EACJC,UAAWC,KAAKC,OACbC,KAAKC,MAAML,MAEdM,EAAOC,KAAKC,UAAUR,GACtBS,EAAUC,KAAKJ,GAGfV,EADAQ,KAAKC,MAAMM,KAAKC,SAAS,KACd,OAASH,EAET,OAASA,EAExBZ,EAAQgB,MAAQT,KAAKC,MAAMM,KAAOf,EAClCC,EAAQiB,MAAQ,mCAChBhB,SAASiB,KAAKC,YAAYnB,GA5ClC,SAA4BoB,GACxB,IAAIC,EAAqBD,EAAGE,gBACxBC,EAAcH,EAAGI,SACjBC,EAAQxB,SAASyB,cAErBN,EAAGE,iBAAkB,EACrBF,EAAGI,UAAW,EACdC,EAAME,mBAAmBP,GAEzB,IAAIQ,EAAIC,OAAOC,eACfF,EAAEG,kBACFH,EAAEI,SAASP,GAEXL,EAAGa,kBAAkB,EAAG,QAExBb,EAAGE,gBAAkBD,EACrBD,EAAGI,SAAWD,EAEPtB,SAASiC,YAAY,QA2BxBC,CAAmBnC,I,EAGvBoC,OAAA,WACI,OACI,uBAAGtB,KAAMP,KAAKC,MAAMM,KAAMuB,QAAS9B,KAAKT,cAAcwC,KAAK/B,OAAQA,KAAKC,MAAM+B,W,GAvB/DC,IAAMC,WA4B3BC,E,gGACFN,OAAA,WACI,OAAO,kBAAC1C,EAAD,KACH,kBAACG,EAAD,CAAcM,KAAM,CAAC,SAAY,wBAAyBW,KAAK,4EAA/D,sB,EAIR6B,kBAAA,WACIC,IAAQC,WAAW,iBACnBD,IAAQE,SAASjB,OAAOkB,SAASC,SAAWnB,OAAOkB,SAASE,S,GAT5CT,IAAMC,WAafC","file":"component---src-pages-examples-ios-copy-to-clipboard-index-jsx-bfd49998ba030b043ea9.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport ReactGA from 'react-ga';\n\nfunction iosCopyToClipboard(el) {\n    var oldContentEditable = el.contentEditable,\n        oldReadOnly = el.readOnly,\n        range = document.createRange();\n\n    el.contentEditable = true;\n    el.readOnly = false;\n    range.selectNodeContents(el);\n\n    var s = window.getSelection();\n    s.removeAllRanges();\n    s.addRange(range);\n\n    el.setSelectionRange(0, 999999); // A big number, to cover anything that could be inside the element.\n\n    el.contentEditable = oldContentEditable;\n    el.readOnly = oldReadOnly;\n\n    return document.execCommand('copy');\n}\n\nconst Container = styled.div`\n    width: 960px;\n    height: 100vh;\n    margin: 0 auto;\n`;\n\nclass TrackingLink extends React.Component {\n    handleOnClick() {\n        let element = document.createElement(\"input\");\n        let data = {\n            timestamp: Date.now(),\n            ...this.props.data\n        }\n        let json = JSON.stringify(data);\n        let encoded = btoa(json)\n        let toAppend;\n        if (this.props.href.includes(\"?\")) {\n            toAppend = \"&ed=\" + encoded\n        } else {\n            toAppend = \"?ed=\" + encoded\n        }\n        element.value = this.props.href + toAppend;\n        element.style = \"position: absolute; opacity: 0.0\"\n        document.body.appendChild(element);\n        iosCopyToClipboard(element);\n    }\n\n    render() {\n        return (\n            <a href={this.props.href} onClick={this.handleOnClick.bind(this)}>{this.props.children}</a>\n        );\n    }\n};\n\nclass IndexPage extends React.Component {\n    render() {\n        return <Container>\n            <TrackingLink data={{\"referrer\": \"pasteboard-blog-post\"}} href=\"https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8\">This is the link</TrackingLink>\n        </Container>\n    }\n\n    componentDidMount() {\n        ReactGA.initialize('UA-35325391-1');\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n}\n\nexport default IndexPage;\n"],"sourceRoot":""}