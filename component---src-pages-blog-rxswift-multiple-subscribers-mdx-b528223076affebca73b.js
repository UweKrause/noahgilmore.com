(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{234:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",function(){return r}),n.d(t,"default",function(){return l});n(11),n(12),n(6),n(19),n(21),n(0);var a=n(79),o=n(258);var r={},i={_frontmatter:r},s=o.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(s,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,'Or, "how to not make unnecessary requests with a URLSession subscriber".'),Object(a.b)("p",null,"I've been working on a side project for ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769/status/1066878101907419137"}),"better CIFilter documentation")," lately, and I decided this was as good of a time as any to try out ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/ReactiveX/RxSwift"}),"RxSwift"),". Even though reactive programming is becoming more and more common in native app development, I've never had a chance to really dig into it, so I started by going through RxSwift's ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/ReactiveX/RxSwift/blob/master/Documentation/GettingStarted.md"}),"intro documentation"),"."),Object(a.b)("h2",null,"Multiple Subscribers"),Object(a.b)("p",null,"One thing that wasn't immediately intuitive to me about Observables is that any time ",Object(a.b)("inlineCode",{parentName:"p"},"subscribe")," is called, the observable's creation block gets called again, even for Observables which perform asynchronous work. Take a simple observable that generates integers as an example:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'func generateRandomIntAfterDelay() -> Observable<Int> {\n    return Observable.create { observer in\n        print("Processing request...")\n        DispatchQueue.main.asyncAfter(deadline: DispatchTime.now() + 2) {\n            print("Generating random int...")\n            observer.onNext(Int.random(in: 0 ..< 10))\n            observer.onCompleted()\n        }\n        return Disposables.create()\n    }\n}\n')),Object(a.b)("p",null,"If you have multiple subscribers to this observable, that means multiple units of work will get enqueued, and multiple random ints will get returned. I.e., if our subscription code looks like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'let observable = generateRandomIntAfterDelay()\nobservable.subscribe(onNext: { randInt in\n    print("1: Got \\\\(randInt)")\n})\nobservable.subscribe(onNext: { randInt in\n    print("2: Got \\\\(randInt)")\n})\n')),Object(a.b)("p",null,"Then the output will look like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-nohighlight"}),"Processing request...\nProcessing request...\nGenerating random int...\n1: Got 7\nGenerating random int...\n2: Got 2\n")),Object(a.b)("p",null,"For some reason, I assumed that for async observables, two subscriptions would result in two outputs, but for the same async result - this is just not how observable subscriptions work."),Object(a.b)("h2",null,"Observable URLSession Tasks"),Object(a.b)("p",null,"This situation gets a little trickier when you have an observable which performs real work, like making http requests:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'extension Reactive where Base: URLSession {\n    public func response(urlString: String) -> Observable<Data> {\n        return Observable.create { observer in\n            let task = self.base.dataTask(\n                with: URLRequest(url: URL(string: urlString)!)\n            ) { (data, response, error) in\n                guard let data = data else {\n                    return\n                }\n                observer.onNext(data)\n                observer.onCompleted()\n            }\n            task.resume()\n            return Disposables.create {\n                task.cancel()\n            }\n        }\n    }\n}\n\nfunc makeRequest() {\n    let observable = URLSession.shared.rx.response(\n        urlString: "https://noahgilmore.com"\n    )\n    observable.subscribe(onNext: { data in\n        print("Got the data!")\n    })\n    observable.subscribe(onNext: { data in\n        print("Got the data again!")\n    })\n}\n')),Object(a.b)("p",null,"One call to ",Object(a.b)("inlineCode",{parentName:"p"},"makeRequest()")," will make ",Object(a.b)("em",{parentName:"p"},"two")," HTTP requests and get back two separate data objects. I started to wonder about how you would correctly implement multiple subscribers for a single HTTP request - it turns out an easy way is to use ",Object(a.b)("inlineCode",{parentName:"p"},"ConnectableObservable"),', an "observable sequence that shares a single subscription to the underlying sequence"',Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/ReactiveX/RxSwift/blob/53cd723d40d05177e790c8c34c36cec7092a6106/RxSwift/Observables/Multicast.swift#L54"}),"[1]"),". Calling ",Object(a.b)("inlineCode",{parentName:"p"},"publish()")," on any observable returns a ",Object(a.b)("inlineCode",{parentName:"p"},"ConnectableObservable")," which mirrors it, and you can start the sequence with ",Object(a.b)("inlineCode",{parentName:"p"},".connect()"),". This means you can implement multiple subscriptions for a single unit of work like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'func makeRequest() {\n    let observable = URLSession.shared.rx.response(\n        urlString: "https://noahgilmore.com"\n    )\n    let connectableObservable = observable.publish()\n    connectableObservable.subscribe(onNext: { data in\n        print("Got the data!")\n    })\n    connectableObservable.subscribe(onNext: { data in\n        print("Got the data again!")\n    })\n\n    // Start the request\n    connectableObservable.connect()\n}\n')),Object(a.b)("p",null,"This code correctly only makes one HTTP request with two callbacks. ðŸ‘Œ"),Object(a.b)("p",null,"This isn't the only time ",Object(a.b)("inlineCode",{parentName:"p"},".publish()")," is useful though - like ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://stackoverflow.com/questions/40052529/in-rxjs-5-is-there-a-way-to-trigger-an-observable-before-subscribing-to-it?rq=1"}),"asked in this Stackoverflow"),", you sometimes want to kick off a long-running piece of work before you actually subscribe to an observable. For example:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),"func longRunningTask() -> Observable<Result> {\n    return Observable.create { observer in\n        doSomeLongRunningWork { result in\n            observer.onNext(result)\n            observer.onCompleted()\n        }\n    }\n}\n\nfunc startTask() {\n    let connectable = longRunningTask().publish()\n    connectable.connect() // start the task\n\n    // Do more setup...\n\n    connectable.subscribe(onNext: { result in\n        // process the result\n    })\n}\n")),Object(a.b)("p",null,"Hopefully this helps explain an unintuitive concept for others who are starting out with reactive programming. If you know a better way or a best practice to do this sort of thing, ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769"}),"let me know"),"! For reference, I've implemented these examples on ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/RxSwift-practice/blob/ca092d91791e40a98980607c0d72caa774d1a509/rxswift-practice/Tests.swift#L85"}),"Github"),"."))}l.isMDXComponent=!0},245:function(e,t,n){"use strict";n.d(t,"c",function(){return u}),n.d(t,"b",function(){return b}),n.d(t,"f",function(){return f}),n.d(t,"d",function(){return h}),n.d(t,"e",function(){return g}),n.d(t,"a",function(){return w});var a=n(10),o=n(248),r=n.n(o),i=n(249),s=n.n(i),l=n(250),c=n.n(l),p=n(251),d=n.n(p);function m(){var e=function(e,t){t||(t=e.slice(0));return e.raw=t,e}(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n             url('","') format('woff'),\n             url('","') format('truetype'),\n             url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n"]);return m=function(){return e},e}var u=Object(a.a)(m(),r.a,r.a,s.a,c.a,d.a),b=a.c.div.withConfig({displayName:"default__Div",componentId:"d4l1a1-0"})([""]),f=(a.c.nav.withConfig({displayName:"default__Nav",componentId:"d4l1a1-1"})([""]),a.c.ul.withConfig({displayName:"default__UL",componentId:"d4l1a1-2"})(["margin:0;padding:0;"])),h=a.c.li.withConfig({displayName:"default__LI",componentId:"d4l1a1-3"})(["margin:0;padding:0;"]),g=a.c.p.withConfig({displayName:"default__P",componentId:"d4l1a1-4"})(["margin:0;padding:0;"]),w=a.c.a.withConfig({displayName:"default__A",componentId:"d4l1a1-5"})(["&,&:hover,&:focus{outline:none;color:inherit;text-decoration:none;}"])},246:function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return o});var a="rgba(128, 165, 177, 1)",o="rgba(151, 195, 210, 1)"},248:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot"},249:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff"},250:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf"},251:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg"},252:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(245),i=n(246),s=n(10),l=n(256),c=n(257),p=s.c.nav.withConfig({displayName:"Nav__StyledNav",componentId:"sc-1cm9dpf-0"})(["display:flex;flex-direction:row;flex-wrap:wrap;padding:20px 60px;border-bottom:1px solid #ddd;@media all and (max-width:600px){padding:20px;}@media (prefers-color-scheme:dark){border-color:#777;}"]),d=s.c.div.withConfig({displayName:"Nav__Title",componentId:"sc-1cm9dpf-1"})(['flex:2;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:28px;font-display:swap;@media (prefers-color-scheme:dark){color:#fff;}']),m=Object(s.c)(r.f).withConfig({displayName:"Nav__NavLinks",componentId:"sc-1cm9dpf-2"})(["flex:10;display:flex;flex-direction:horizontal;flex-wrap:wrap;justify-content:flex-end;height:100%;align-self:center;"]),u=Object(s.c)(r.d).withConfig({displayName:"Nav__NavLink",componentId:"sc-1cm9dpf-3"})(['display:flex;flex-direction:vertical;align-items:center;text-align:center;font-family:"Bariol","Helvetica Neue","Helvetica",sans-serif;font-size:16px;padding:0px 20px;']),b=Object(s.c)(r.a).withConfig({displayName:"Nav__StyledA",componentId:"sc-1cm9dpf-4"})(["height:auto;color:",";display:flex;flex-direction:vertical;align-items:center;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{color:",";}"],i.a,i.b);t.a=function(e){return o.a.createElement(p,null,o.a.createElement(d,null,o.a.createElement(b,{href:e.blog?"/blog":"/"},"NOAH GILMORE")),o.a.createElement(m,null,o.a.createElement(u,null,o.a.createElement(b,{"aria-label":"Blog Home",href:"/blog"},o.a.createElement(l.b,{color:i.a,size:"24"}))),o.a.createElement(u,null,o.a.createElement(b,{"aria-label":"Twitter",href:"https://twitter.com/noahsark769"},o.a.createElement(c.a,{color:i.a,size:"24"}))),o.a.createElement(u,null,o.a.createElement(b,{"aria-label":"App Store",href:"https://appstore.com/trestle"},o.a.createElement(l.a,{color:i.a,size:"24"})))))}},253:function(e,t,n){"use strict";n.d(t,"a",function(){return s}),n.d(t,"b",function(){return d});var a=n(0),o=n.n(a),r=n(10),i=n(247);var s=r.c.div.withConfig({displayName:"BlogPost__BlogPostContainer",componentId:"gyfnna-0"})(["padding:60px 0;margin:0 auto;width:90%;@media all and (min-width:600px){max-width:700px;margin:auto;}@media all and (max-width:600px){width:100%;padding:20px 0;","}"],function(e){return e.darkened&&Object(r.b)(["background-color:#f6f6f6;@media (prefers-color-scheme:dark){background-color:inherit;}"])}),l=r.c.div.withConfig({displayName:"BlogPost__TitleContainer",componentId:"gyfnna-1"})(["width:100%;margin-bottom:40px;"]),c=r.c.h1.withConfig({displayName:"BlogPost__Heading",componentId:"gyfnna-2"})(['width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:34px;margin-bottom:10px;@media (prefers-color-scheme:dark){color:#fff;}']),p=r.c.p.withConfig({displayName:"BlogPost__DateContainer",componentId:"gyfnna-3"})(['font-family:"Gentium Book Basic",times,serif;font-style:italic;font-size:16px;color:#999;']),d=function(e){return o.a.createElement("div",null,o.a.createElement(i.Helmet,null,o.a.createElement("title",null,e.title)),o.a.createElement(l,null,o.a.createElement(c,null,e.title),o.a.createElement(p,null,e.date)))};o.a.Component},254:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var a=n(0),o=n.n(a),r=n(50),i=n.n(r);var s=n(10).c.div.withConfig({displayName:"MarkdownContent__Container",componentId:"zl3v0s-0"})(['p,li{margin:0;padding:0;font-family:"Gentium Book Basic",times,serif;font-size:21px;line-height:29px;color:#333;padding-bottom:15px;margin-top:15px;@media all and (max-width:600px){width:90%;margin:15px auto 0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}blockquote{background-color:#faf9f7;border-left:4px solid #e5e4e1;padding:20px;font-style:italic;@media (prefers-color-scheme:dark){background-color:#3f3f3f;}p{margin:0;padding:0;color:#555;@media (prefers-color-scheme:dark){color:#fff;}}}a{color:#1A3F4B;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;@media (prefers-color-scheme:dark){color:#60b5d1;}}a:hover{color:#47656E;@media (prefers-color-scheme:dark){color:#6bcfef;}}code{font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:not(pre code){font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:first-child{margin-left:0;}pre{display:block;margin:0;padding:0;background:none;@media all and (max-width:600px){width:100%;margin:0 auto;}}pre > code{display:block;margin:0;padding:0;border:1px solid #e5e4e1;border-radius:2px;padding:10px;margin-top:10px;font-family:monospace;font-size:14px;line-height:17px;white-space:pre-wrap;@media all and (max-width:600px){font-size:15px;white-space:pre;border-left:none;border-right:none;padding:15px 5% 15px 5%;width:100%;}}pre > code.language-nohighlight{@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}pre + p{margin-top:30px;}ol{margin-left:30px;@media all and (max-width:600px){width:90%;margin:0 auto 0 30px;}@media (prefers-color-scheme:dark){color:#fff;}}ol li{list-style-type:decimal;}ul li{list-style-type:square;margin-left:40px;@media all and (max-width:600px){width:90%;margin:0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1,h2,h3,h4,h5,h6{width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;margin-bottom:10px;margin-top:40px;@media all and (max-width:600px){width:90%;margin:40px auto 10px auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1{font-size:28px;}h2{font-size:24px;}h3{font-size:20px;}em{font-style:italic;}strong{font-weight:bold;}']),l=function(e){var t,n;function a(){return e.apply(this,arguments)||this}n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var r=a.prototype;return r.render=function(){return o.a.createElement(s,null,this.props.children)},r.componentDidMount=function(){for(var e=i.a.findDOMNode(this).querySelectorAll("pre code"),t=0;t<e.length;t++)window.hljs&&window.hljs.highlightBlock(e[t])},a}(o.a.Component)},255:function(e,t,n){"use strict";function a(e){return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}n.d(t,"a",function(){return a})},258:function(e,t,n){"use strict";n(157);var a=n(0),o=n.n(a),r=n(247),i=n(245),s=n(252),l=n(10),c=n(256),p=n(257),d=n(246);var m=l.c.div.withConfig({displayName:"EndButtons__Container",componentId:"sc-2ta1su-0"})(["width:100%;display:flex;flex-direction:horizontal;align-items:center;justify-content:center;margin-top:40px;"]),u=l.c.div.withConfig({displayName:"EndButtons__ButtonStyle",componentId:"sc-2ta1su-1"})(["background-color:",";-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{background-color:",";}width:100px;padding:10px 20px;text-align:center;display:flex;flex-direction:vertical;align-items:center;justify-content:center;border-radius:4px;",";"],d.a,d.b,function(e){return e.margin&&Object(l.b)(["margin-right:20px;"])}),b=function(e){return o.a.createElement(i.a,{href:e.url,target:e.newTab?"_blank":null,"aria-label":e.label},o.a.createElement(u,{margin:e.margin},e.children))},f=function(e){var t,n;function a(){return e.apply(this,arguments)||this}return n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,a.prototype.render=function(){var e,t=(e="Post by @noahsark769: "+this.props.tweetTitle+" "+this.props.tweetUrl,"https://twitter.com/intent/tweet?text="+encodeURIComponent(e));return o.a.createElement(m,null,o.a.createElement(b,{label:"Twitter",url:t,newTab:!0,margin:!0},o.a.createElement(p.a,{size:24,color:"white"})),o.a.createElement(b,{label:"Blog homepage",url:"/blog"},o.a.createElement(c.b,{size:24,color:"white"})))},a}(o.a.Component),h=n(253),g=n(254),w=n(255);var x=l.c.div.withConfig({displayName:"Disqus__Wrapper",componentId:"sc-1jjeqqj-0"})(["margin-top:80px;"]),y=function(e){var t,n;function a(){return e.apply(this,arguments)||this}n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var r=a.prototype;return r.render=function(){return o.a.createElement(x,null,o.a.createElement("div",{id:"disqus_thread"}))},r.componentDidMount=function(){var e,t;e=document,(t=e.createElement("script")).src="//noahgilmore-com.disqus.com/embed.js",t.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(t)},a}(o.a.Component),v=n(259),k=n.n(v);n.d(t,"a",function(){return N});var O=l.c.div.withConfig({displayName:"BlogPageLayout__Container",componentId:"sc-118ribu-0"})(["@media (prefers-color-scheme:dark){background-color:#2b2c2f;}"]),j=l.c.div.withConfig({displayName:"BlogPageLayout__NonContent",componentId:"sc-118ribu-1"})(["@media all and (max-width:600px){padding-right:5%;padding-left:5%;}"]),N=function(e){var t,n;function a(){return e.apply(this,arguments)||this}n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var l=a.prototype;return l.render=function(){var e="undefined"!=typeof window&&window.matchMedia("(prefers-color-scheme: dark)").matches;return o.a.createElement(O,null,o.a.createElement(i.c,null),o.a.createElement(r.Helmet,null,o.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Roboto:700",rel:"stylesheet",type:"text/css"}),o.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Gentium+Book+Basic",rel:"stylesheet"}),!e&&o.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/atom-one-light.min.css"}),e&&o.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/zenburn.min.css"}),o.a.createElement("meta",{name:"twitter:card",content:"summary"}),o.a.createElement("meta",{name:"twitter:creator",content:"@noahsark769"}),o.a.createElement("meta",{property:"og:url",content:"https://noahgilmore.com"+this.props.location.pathname}),o.a.createElement("meta",{property:"og:title",content:this.props.pageContext.frontmatter.title}),o.a.createElement("meta",{property:"og:description",content:this.props.pageContext.frontmatter.staticPreview}),o.a.createElement("meta",{name:"description",content:this.props.pageContext.frontmatter.staticPreview})),o.a.createElement(s.a,{blog:!0}),o.a.createElement(h.a,null,o.a.createElement(j,null,o.a.createElement(h.b,{title:this.props.pageContext.frontmatter.title,date:Object(w.a)(this.props.pageContext.frontmatter.date)})),o.a.createElement(g.a,null,this.props.children),o.a.createElement(j,null,o.a.createElement(f,{tweetTitle:this.props.pageContext.frontmatter.title,tweetUrl:"https://noahgilmore.com"+this.props.location.pathname}),o.a.createElement(y,null))))},l.componentDidMount=function(){k.a.initialize("UA-35325391-1"),k.a.pageview(window.location.pathname+window.location.search)},a}(o.a.Component)}}]);
//# sourceMappingURL=component---src-pages-blog-rxswift-multiple-subscribers-mdx-b528223076affebca73b.js.map