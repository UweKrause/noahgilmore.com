{"version":3,"sources":["webpack:///./src/pages/blog/automatic-preview-updating-paused.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","tweetId","max","filename","caption","alt","isMDXComponent"],"mappings":"uSAQO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,qDAAoC,+BAAGC,WAAW,KAAQ,CACtD,KAAQ,kEADwB,eAApC,wSAGA,8BACE,iBAAGA,WAAW,cAAd,uIAEF,6XACA,iBAAQ,CACN,GAAM,SADR,SAGA,uEAAsD,+BAAGA,WAAW,KAAQ,CACxE,KAAQ,mCAD0C,eAAtD,gBAGA,YAAC,IAAD,CAAOC,QAAQ,sBAAsBF,QAAQ,UAC7C,qDAAoC,kBAAIC,WAAW,KAAf,OAApC,cAAkF,+BAAGA,WAAW,KAAQ,CACpG,KAAQ,4IADsE,gBAAlF,6KAEuM,0BAAYA,WAAW,KAAvB,cAFvM,wMAGA,4BAAW,+BAAGA,WAAW,KAAQ,CAC7B,KAAQ,kEADD,mBAAX,uIAEoK,0BAAYA,WAAW,KAAvB,yBAFpK,2JAGA,uEAAsD,kBAAIA,WAAW,KAAf,iEAAtD,sJACA,iBAAQ,CACN,GAAM,WADR,WAGA,iDAAgC,+BAAGA,WAAW,KAAQ,CAClD,KAAQ,mEADoB,kBAAhC,6PAGA,0OAAyN,+BAAGA,WAAW,KAAQ,CAC3O,KAAQ,oEAD6M,kCAAzN,uKAGA,YAAC,IAAD,CAAgBE,IAAK,IAAKC,SAAS,uBAAuBC,QAAQ,+CAA+CC,IAAI,qFAAqFN,QAAQ,mBAClN,oXAAmW,+BAAGC,WAAW,KAAQ,CACrX,KAAQ,oCADuV,aAAnW,OAGA,8BACE,iBAAGA,WAAW,cAAd,4EAAwG,+BAAGA,WAAW,KAAQ,CAC1H,KAAQ,mEAD4F,mCAAxG,OAQNJ,EAAWU,gBAAiB","file":"component---src-pages-blog-automatic-preview-updating-paused-mdx-d1615e4f90af4eb46d49.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/noahgilmore.com/noahgilmore.com/src/components/BlogPageLayout.jsx\";\nimport Tweet from \"../../components/Tweet\";\nimport CaptionedImage from '../../components/CaptionedImage';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`I've been rewriting parts of `}<a parentName=\"p\" {...{\n        \"href\": \"https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8\"\n      }}>{`CIFilter.io`}</a>{` in SwiftUI, and one issue I ran into recently was that SwiftUI previews didn't seem to work as advertised. When I opened the preview, it would trigger an app build, eventually show up, but there would always be a banner telling me that previewing had been paused, with the following message:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Automatic preview updating pauses when the the previewed file is edited in a way which causes the containing module to be rebuilt.`}</p>\n    </blockquote>\n    <p>{`Every time I clicked the \"Resume\" button, the app would build again, and the banner would come up again. Initially, I wrote it off as SwiftUI previews just not working - since each preview triggered an app build, I just defaulted to building the app each time I changed something. Eventually though, I realized that other people weren't having this issue.`}</p>\n    <h2 {...{\n      \"id\": \"clues\"\n    }}>{`Clues`}</h2>\n    <p>{`A clue to what might be happening came up from `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/paulcolton\"\n      }}>{`Paul Colton`}</a>{` on Twitter:`}</p>\n    <Tweet tweetId=\"1279072572471050240\" mdxType=\"Tweet\" />\n    <p>{`As it turned out, I actually `}<em parentName=\"p\">{`did`}</em>{` have some `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/noahsark769/cifilter.io/blob/97734a91559267bcf9c2b5e85c4e6e00d04c1230/iOS/CIFilter.io.xcodeproj/project.pbxproj#L605\"\n      }}>{`build phases`}</a>{` running as part of the project's build - various normal ones like copying bundle resources, embedding Pods frameworks, etc, and also some custom ones to write data into `}<inlineCode parentName=\"p\">{`Info.plist`}</inlineCode>{` and upload dSYMs to Sentry for crash reporting. It seemed weird to me that these scripts could cause preview updating to fail, but then I realized that one of the scripts was not like the others.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8\"\n      }}>{`CIFilter.io app`}</a>{` has a build phase which looks at various data (like the current git sha and number of commits) and writes it to a json file called `}<inlineCode parentName=\"p\">{`buildInformation.json`}</inlineCode>{`. This file is included in the Xcode project, and the app reads it at runtime to figure out what version, sha, etc it's running for analytics purposes.`}</p>\n    <p>{`The important thing about this script was that `}<em parentName=\"p\">{`running it modified a file that was part of the Xcode project`}</em>{`. Because this script ran every preview build, it would modify a file in the project every time, which caused Xcode to pause automatic previewing.`}</p>\n    <h2 {...{\n      \"id\": \"the-fix\"\n    }}>{`The Fix`}</h2>\n    <p>{`To prove it, I created a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/noahsark769/NGSwiftUIPreviewBuildPhaseIssue\"\n      }}>{`sample project`}</a>{` which is a pared down version of this situation. A build script writes the current date to a file every build, and that file is included in the project (though not used). The same thing happens - endless loop of \"Automatic preview updating paused\".`}</p>\n    <p>{`One option would be moving away from using that file entirely, but I found out a better way to resolve the issue - Xcode has an option to only run build phase scripts \"on install\", which really means that they `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/noahsark769/status/1279816240874188800?s=20\"\n      }}>{`only get run on Archive builds`}</a>{`. If you check this option in the sample project, the script doesn't get run on preview builds, the file doesn't get updated, and previews work magically again. ðŸ™Œ`}</p>\n    <CaptionedImage max={250} filename=\"preview-updating.png\" caption=\"This green indicator is what you want to see\" alt=\"Image of the green circle indicating that automatic previewing in Xcode is enabled\" mdxType=\"CaptionedImage\" />\n    <p>{`Checking this option worked great for my use case, and completely resolved the issue. It seems this is pretty much the only way to get around this, though - I tried to look into whether you could detect whether a build was for previews only and not update the file, but I wasn't able to figure out if it's possible. If you know differently, please `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/noahsark769\"\n      }}>{`reach out`}</a>{` ðŸ‘‹`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The sample code demonstrating the preview updating issue is available at `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/noahsark769/NGSwiftUIPreviewBuildPhaseIssue\"\n        }}>{`NGSwiftUIPreviewBuildPhaseIssue`}</a>{`.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}