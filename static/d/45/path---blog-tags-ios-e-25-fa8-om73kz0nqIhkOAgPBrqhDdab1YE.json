{"pageContext":{"edges":[{"node":{"parent":{"name":"uibutton-padding","relativePath":"blog/uibutton-padding.mdx"},"id":"8c18d497-ee99-5aa3-9d47-a53184661c9f","frontmatter":{"title":"UIButton: Padding Between Image and Text","date":"2019-04-30T00:00:00.000Z","mdxPreview":"Today I'm launching [CIFilter.io](https://cifilter.io) ðŸŽ‰ CIFilter.io is a project I've been working on for the last few months, and today it's [open source](https://github.com/noahsark769/cifilter.io/). It has two parts...\n","tags":"ios, swift, uikit"}}},{"node":{"parent":{"name":"data-over-the-app-store","relativePath":"blog/data-over-the-app-store.mdx"},"id":"cbbdf048-6950-5e4f-b8c4-ac24f7933185","frontmatter":{"title":"Passing data through the App Store with UIPasteboard","date":"2019-04-15T00:00:00.000Z","mdxPreview":"About a year ago I wrote a puzzle game called Trestle. If you download it using any of the links in this post (by clicking on them on your iOS device), you'll get a nice Easter egg and two of the (normally paid) level sets enabled for free...","tags":"ios, swift"}}},{"node":{"parent":{"name":"cifilterio","relativePath":"blog/cifilterio.mdx"},"id":"1aa2fa0f-0308-5827-b88f-9d48e7c689d3","frontmatter":{"title":"CIFilter.io (Core Image Filter Reference)","date":"2019-03-31T00:00:00.000Z","mdxPreview":"Today I'm launching [CIFilter.io](https://cifilter.io) ðŸŽ‰ CIFilter.io is a project I've been working on for the last few months, and today it's [open source](https://github.com/noahsark769/cifilter.io/). It has two parts...\n","tags":"ios, swift, coreimage"}}},{"node":{"parent":{"name":"civector-codable","relativePath":"blog/civector-codable.mdx"},"id":"fedf58e1-4298-5e53-a50b-8e15fb1612e9","frontmatter":{"title":"CIVector Codable","date":"2019-03-05T00:00:00.000Z","mdxPreview":"For my current [side project](https://twitter.com/noahsark769/status/1102318232025718785), I have to export CIFilter parameters to json, and I've been running into issues with various CoreImage types not conforming to Swift's `Codable`...","tags":"ios, swift, coreimage"}}},{"node":{"parent":{"name":"swift-dependency-injection","relativePath":"blog/swift-dependency-injection.mdx"},"id":"8e57c9a9-4b2b-5971-9f9d-b69c2d505b71","frontmatter":{"title":"Dead Simple Dependency Injection in Swift","date":"2019-02-15T00:00:00.000Z","mdxPreview":"At the most recent [Swift Language User Group](https://www.meetup.com/swift-language/) meetup, [Patrick Barry](https://twitter.com/patbarry) presented a [great talk](https://www.youtube.com/watch?v=dA9rGQRwHGs) about how Lyft implements dependency injection. I'd highly recommend watching the video - I was impressed by how clean and...","tags":"ios, swift"}}},{"node":{"parent":{"name":"cifilter-colorwheel","relativePath":"blog/cifilter-colorwheel.mdx"},"id":"1c741a19-ba67-5766-9981-bc02b9566781","frontmatter":{"title":"iOS Color Wheel Using CIFilter","date":"2019-01-28T00:00:00.000Z","mdxPreview":"After struggling for some time with CIFilter documentation at work, I've been [working on an app](https://twitter.com/noahsark769/status/1080580341973348352) which can apply filters interactively for various inputs...","tags":"ios, swift, coreimage"}}},{"node":{"parent":{"name":"rxswift-multiple-subscribers","relativePath":"blog/rxswift-multiple-subscribers.mdx"},"id":"1f41edb2-6a48-582b-9092-65cbd3fcd65e","frontmatter":{"title":"RxSwift: Multiple subscribers for a unit of work","date":"2018-12-08T00:00:00.000Z","mdxPreview":"I've been working on a side project for [better CIFilter documentation](https://twitter.com/noahsark769/status/1066878101907419137) lately, and I decided this was as good of a time as any to try out [RxSwift](https://github.com/ReactiveX/RxSwift). We use reactive programming at work, but I haven't really been able to dig into it yet...\n","tags":"ios, swift, rx, rxswift"}}},{"node":{"parent":{"name":"install-nokogiri-macos-mojave","relativePath":"blog/install-nokogiri-macos-mojave.mdx"},"id":"b9a184b5-ab51-547f-993b-6422e5416473","frontmatter":{"title":"Installing Nokogiri from a Gemfile on Mojave","date":"2018-11-14T00:00:00.000Z","mdxPreview":"Another MacOS and another struggle through installing nokogiri. Most places online recommend using...","tags":"ios, swift"}}},{"node":{"parent":{"name":"userdefaults-set-nil","relativePath":"blog/userdefaults-set-nil.mdx"},"id":"b8318387-70d5-59f6-9eca-a6da26291cbc","frontmatter":{"title":"How NOT to set nil in UserDefaults","date":"2018-10-22T00:00:00.000Z","mdxPreview":"To clear a value from UserDefaults, I previously thought it was fine to do something like this:\n```swift\nUserDefaults.standard.set(nil, forKey: \"myKey\")\n```\nTurns out that this works differently in different iOS versions. Starting in iOS 11, setting nil for a key works as I expected.\n","tags":"ios, swift"}}},{"node":{"parent":{"name":"swift-pointer-uint","relativePath":"blog/swift-pointer-uint.mdx"},"id":"38a8cf81-a653-5a77-bd0c-e4004149d347","frontmatter":{"title":"Casting a pointer to UInt in Swift","date":"2018-10-16T00:00:00.000Z","mdxPreview":"There are some times in Swift, like when using [System Trace](https://developer.apple.com/videos/play/wwdc2016/411/), that you want to get the pointer value of an object directly as a `UInt` (passing the pointer to `kdebug_signpost` is one). I was surprised at how hard it was to find documentation on how to get a Swift referenceâ€™s pointer value as a `UInt`.\n","tags":"ios, swift"}}},{"node":{"parent":{"name":"nsobject-equatable","relativePath":"blog/nsobject-equatable.mdx"},"id":"436d50bd-bf20-5441-a870-3227f8662238","frontmatter":{"title":"NSObject Equality is Tricky","date":"2016-11-13T00:00:00.000Z","mdxPreview":"Swift can be tricky sometimes. For example, what does the following print?\n```swift\nclass A: NSObject {\n  let x: Int\n\n  init(x: Int) {\n    self.x = x\n  }\n}\nfunc ==(left: A, right: A) -> Bool {\n  return left.x == right.x\n}\nprint(A(x: 1) == A(x: 1))\nprint([A(x: 1)] == [A(x: 1)])\n","tags":"ios, swift, objc"}}}],"tag":"ios"}}