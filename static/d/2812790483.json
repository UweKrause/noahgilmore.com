{"data":{"allMdx":{"edges":[{"node":{"parent":{"__typename":"File","name":"gpu-capture-flickering","relativePath":"blog/gpu-capture-flickering.mdx"},"id":"019b8be9-f5fb-5946-b4b2-759bb498d2bd","frontmatter":{"title":"GPU Capture Button Flickering","date":"2019-10-28T00:00:00.000Z","mdxPreview":"One of the \"[Things I Don't Know](https://overreacted.io/things-i-dont-know-as-of-2018/)\" in the iOS ecosystem is Metal. As such, I've been working through [Metal By Example](https://metalbyexample.com/) recently, which still stands as a great introduction to Metal...\n"}}},{"node":{"parent":{"__typename":"File","name":"swiftui-relativedatetimeformatter","relativePath":"blog/swiftui-relativedatetimeformatter.mdx"},"id":"54a016d3-92d4-5166-8605-bbe95ceec744","frontmatter":{"title":"Relative date time formatting in SwiftUI","date":"2019-10-19T00:00:00.000Z","mdxPreview":"In the wild world of 2019 SwiftUI development, lots of things aren't documented. One such thing I ran into recently was the usage of `RelativeDateTimeFormatter` in a `Text` view...\n"}}},{"node":{"parent":{"__typename":"File","name":"color-compatibility-pod","relativePath":"blog/color-compatibility-pod.mdx"},"id":"884c5f21-3d6a-5d61-a20b-ca1026248246","frontmatter":{"title":"ColorCompatibility Library","date":"2019-10-05T00:00:00.000Z","mdxPreview":"I [wrote previously](/blog/dark-mode-uicolor-compatibility) about a technique I use in [Trestle](https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8) and [CIFilter.io](https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8) to support iOS 12 and lower while still using system provided, dark-mode accessible colors...\n"}}},{"node":{"parent":{"__typename":"File","name":"uiwindowscene-black-screen","relativePath":"blog/uiwindowscene-black-screen.mdx"},"id":"3939efec-6ad9-5504-8651-143a9c48c6a4","frontmatter":{"title":"iOS 13 UIWindowScene Black Screen","date":"2019-09-21T00:00:00.000Z","mdxPreview":"I've encountered this bug enough times that I figured it was time to write a quick post about it. If you've looked into [multiple window support](https://developer.apple.com/documentation/uikit/app_and_environment/scenes) for your app in iOS 13, you might know that a lot of the setup you used to have to do in the app delegate now lives in the scene delegate instead...\n"}}},{"node":{"parent":{"__typename":"File","name":"popover-uinavigationcontroller-preferredcontentsize","relativePath":"blog/popover-uinavigationcontroller-preferredcontentsize.mdx"},"id":"41ce1742-d83a-5fc5-96d0-dd140961d1c0","frontmatter":{"title":"Popovers, UINavigationController, and preferredContentSize","date":"2019-08-26T00:00:00.000Z","mdxPreview":"In this post we'll look at a very specific but tricky interaction in UIKit, one which took me multiple days to work out how to implement.\nIt's two view controllers of different sizes, pushed on a `UINavigationController`, which is presented as a popover. The view controllers...\n"}}},{"node":{"parent":{"__typename":"File","name":"cfbundleversion-invalid","relativePath":"blog/cfbundleversion-invalid.mdx"},"id":"0b3e11ae-b4cd-5e1e-b9d5-e362ea73d3fe","frontmatter":{"title":"The application's CFBundleVersion is invalid","date":"2019-08-22T00:00:00.000Z","mdxPreview":"For some reason lately, I've been having a lot of trouble installing apps and running tests in the iOS simulator on Xcode 10 (non-beta). The error message looks like this...\n"}}},{"node":{"parent":{"__typename":"File","name":"taking-down-sfsymbols","relativePath":"blog/taking-down-sfsymbols.mdx"},"id":"275c9514-206c-58e0-ab2c-4be8629785bb","frontmatter":{"title":"Taking Down Assets from SFSymbols.com","date":"2019-08-20T00:00:00.000Z","mdxPreview":"At the beginning of June, I [launched](https://twitter.com/noahsark769/status/1136324324552396800) [sfsymbols.com](https://sfsymbols.com) since there wasn't a reference available on the web for searching and filtering the list of 1500+ system icons included in...\n"}}},{"node":{"parent":{"__typename":"File","name":"docker-commands","relativePath":"blog/docker-commands.mdx"},"id":"5061d0af-2f8a-59a7-8a86-a40b1a578adf","frontmatter":{"title":"Docker Commands I Can Never Remember","date":"2019-06-14T00:00:00.000Z","mdxPreview":"I'm a Docker noob, and for whatever reason, I can never remember the best way to do things with Docker, whether it's checking which containers are running or starting/stopping them. Putting some common commands here mostly for personal reference. List containers...\n"}}},{"node":{"parent":{"__typename":"File","name":"dark-mode-uicolor-compatibility","relativePath":"blog/dark-mode-uicolor-compatibility.mdx"},"id":"ecc28c68-3732-5ae1-9627-a764162b1191","frontmatter":{"title":"Backwards compatibility for iOS 13 system colors","date":"2019-06-09T00:00:00.000Z","mdxPreview":"At WWDC 2019, Apple announced that Dark Mode would be supported on iOS 13. There are some significant changes to UIKit in order to support this - many of them are detailed in the talk [Implementing Dark Mode on iOS](https://developer.apple.com/videos/play/wwdc2019/214/) which I'd highly recommend watching...\n"}}},{"node":{"parent":{"__typename":"File","name":"uibutton-padding","relativePath":"blog/uibutton-padding.mdx"},"id":"3d10c373-8505-52fe-922d-149a6a0a1e55","frontmatter":{"title":"UIButton: Padding Between Image and Text","date":"2019-05-06T00:00:00.000Z","mdxPreview":"Pop quiz: in a `UIButton`, how do you set a padding of 10pt between the image and the title? I had to do this at work recently, and I was surprised at how hard it was to reason about. There are several posts talking about this topic (including [this one](https://medium.com/short-swift-stories/using-uiedgeinsets-to-layout-a-uibutton-44ba04dd085c) which uses edge insets to flip the title and image!), but the answer for my use case was pretty hard to find...\n"}}},{"node":{"parent":{"__typename":"File","name":"data-over-the-app-store","relativePath":"blog/data-over-the-app-store.mdx"},"id":"b9bd3686-c25d-5ad0-9d80-8cf779bf1781","frontmatter":{"title":"Passing data through the App Store with UIPasteboard","date":"2019-04-15T00:00:00.000Z","mdxPreview":"About a year ago I wrote a puzzle game called Trestle. If you download it using any of the links in this post (by clicking on them on your iOS device), you'll get a nice Easter egg and two of the (normally paid) level sets enabled for free..."}}},{"node":{"parent":{"__typename":"File","name":"cifilterio","relativePath":"blog/cifilterio.mdx"},"id":"13a18f97-dee3-5e71-a372-7a2c27a7da5f","frontmatter":{"title":"CIFilter.io (Core Image Filter Reference)","date":"2019-03-31T00:00:00.000Z","mdxPreview":"Today I'm launching [CIFilter.io](https://cifilter.io) ðŸŽ‰ CIFilter.io is a project I've been working on for the last few months, and today it's [open source](https://github.com/noahsark769/cifilter.io/). It has two parts...\n"}}},{"node":{"parent":{"__typename":"File","name":"civector-codable","relativePath":"blog/civector-codable.mdx"},"id":"039552bf-8ac4-5bb4-8df1-581f8370c0a4","frontmatter":{"title":"CIVector Codable","date":"2019-03-05T00:00:00.000Z","mdxPreview":"For my current [side project](https://twitter.com/noahsark769/status/1102318232025718785), I have to export CIFilter parameters to json, and I've been running into issues with various CoreImage types not conforming to Swift's `Codable`..."}}},{"node":{"parent":{"__typename":"File","name":"swift-dependency-injection","relativePath":"blog/swift-dependency-injection.mdx"},"id":"d24d223b-92be-5a81-86ed-bd9f71aa8a01","frontmatter":{"title":"Dead Simple Dependency Injection in Swift","date":"2019-02-15T00:00:00.000Z","mdxPreview":"At the most recent [Swift Language User Group](https://www.meetup.com/swift-language/) meetup, [Patrick Barry](https://twitter.com/patbarry) presented a [great talk](https://www.youtube.com/watch?v=dA9rGQRwHGs) about how Lyft implements dependency injection. I'd highly recommend watching the video - I was impressed by how clean and..."}}},{"node":{"parent":{"__typename":"File","name":"cifilter-colorwheel","relativePath":"blog/cifilter-colorwheel.mdx"},"id":"0b7d4fa5-2412-5582-ab26-bb83f3e813d0","frontmatter":{"title":"iOS Color Wheel Using CIFilter","date":"2019-01-28T00:00:00.000Z","mdxPreview":"After struggling for some time with CIFilter documentation at work, I've been [working on an app](https://twitter.com/noahsark769/status/1080580341973348352) which can apply filters interactively for various inputs..."}}},{"node":{"parent":{"__typename":"File","name":"rxswift-multiple-subscribers","relativePath":"blog/rxswift-multiple-subscribers.mdx"},"id":"0d6c4603-b5ce-58b9-8a81-83509ae2dee8","frontmatter":{"title":"RxSwift: Multiple subscribers for a unit of work","date":"2018-12-08T00:00:00.000Z","mdxPreview":"I've been working on a side project for [better CIFilter documentation](https://twitter.com/noahsark769/status/1066878101907419137) lately, and I decided this was as good of a time as any to try out [RxSwift](https://github.com/ReactiveX/RxSwift). We use reactive programming at work, but I haven't really been able to dig into it yet...\n"}}},{"node":{"parent":{"__typename":"File","name":"install-nokogiri-macos-mojave","relativePath":"blog/install-nokogiri-macos-mojave.mdx"},"id":"8895aef6-ab2e-522f-bc30-d1a370c4c255","frontmatter":{"title":"Installing Nokogiri from a Gemfile on Mojave","date":"2018-11-14T00:00:00.000Z","mdxPreview":"Another MacOS and another struggle through installing nokogiri. Most places online recommend using..."}}},{"node":{"parent":{"__typename":"File","name":"gatsby-mdx-frontmatter","relativePath":"blog/gatsby-mdx-frontmatter.mdx"},"id":"47bbf032-6070-5e1c-9370-3896ff2a054e","frontmatter":{"title":"Accessing MDX Frontmatter in Gatsby","date":"2018-11-08T00:00:00.000Z","mdxPreview":"While building this site in Gatsby using [MDX](https://github.com/ChristopherBiscardi/gatsby-mdx), I noticed that there wasn't any documentation on how to include data from the frontmatter of an MDX document in the document's page layout...\n"}}},{"node":{"parent":{"__typename":"File","name":"easy-gatsby-image-components","relativePath":"blog/easy-gatsby-image-components.mdx"},"id":"f1b70012-4935-58de-8e1d-790a310b4cb9","frontmatter":{"title":"Easy Gatsby Image Components","date":"2018-11-02T00:00:00.000Z","mdxPreview":"I use [Gatsby](https://gatsbyjs.org) as a static site generator to build this blog using React. As part of this, I wanted a simple component to display a static image, something like this:\n```jsx\n<Image filename=\"myimage.png\" />\n```\nSurprisingly, this is hard to do in Gatsby. The default Image component generated by Gatsby uses `StaticQuery`:\n"}}},{"node":{"parent":{"__typename":"File","name":"userdefaults-set-nil","relativePath":"blog/userdefaults-set-nil.mdx"},"id":"e83e56ee-1f7c-5bc2-86a8-4ac6dffb333b","frontmatter":{"title":"How NOT to set nil in UserDefaults","date":"2018-10-22T00:00:00.000Z","mdxPreview":"To clear a value from UserDefaults, I previously thought it was fine to do something like this:\n```swift\nUserDefaults.standard.set(nil, forKey: \"myKey\")\n```\nTurns out that this works differently in different iOS versions. Starting in iOS 11, setting nil for a key works as I expected.\n"}}},{"node":{"parent":{"__typename":"File","name":"swift-pointer-uint","relativePath":"blog/swift-pointer-uint.mdx"},"id":"a2f39b53-ab4d-518d-823b-90ed7755e5ef","frontmatter":{"title":"Casting a pointer to UInt in Swift","date":"2018-10-16T00:00:00.000Z","mdxPreview":"There are some times in Swift, like when using [System Trace](https://developer.apple.com/videos/play/wwdc2016/411/), that you want to get the pointer value of an object directly as a `UInt` (passing the pointer to `kdebug_signpost` is one). I was surprised at how hard it was to find documentation on how to get a Swift referenceâ€™s pointer value as a `UInt`.\n"}}},{"node":{"parent":{"__typename":"File","name":"nsobject-equatable","relativePath":"blog/nsobject-equatable.mdx"},"id":"aa812424-cdb2-5a07-ae9a-7da3f84ccdda","frontmatter":{"title":"NSObject Equality is Tricky","date":"2016-11-13T00:00:00.000Z","mdxPreview":"Swift can be tricky sometimes. For example, what does the following print?\n```swift\nclass A: NSObject {\n  let x: Int\n\n  init(x: Int) {\n    self.x = x\n  }\n}\nfunc ==(left: A, right: A) -> Bool {\n  return left.x == right.x\n}\nprint(A(x: 1) == A(x: 1))\nprint([A(x: 1)] == [A(x: 1)])\n"}}},{"node":{"parent":{"__typename":"File","name":"pyparsing-trees","relativePath":"blog/pyparsing-trees.mdx"},"id":"4424b17b-6c9a-5638-a408-c9ede4506c5c","frontmatter":{"title":"Syntax trees with Pyparsing","date":"2016-10-23T00:00:00.000Z","mdxPreview":"Let's talk about [syntax trees](https://en.wikipedia.org/wiki/Abstract_syntax_tree). In static analysis, a common operation is to take a character string (e.g. \"x = 1\") and transform it into well structured data.\nLet's try to do this in python. We'll use [Pyparsing](http://pyparsing.wikispaces.com/) as our tokenization tool.\n"}}},{"node":{"parent":{"__typename":"File","name":"my-bucket-list","relativePath":"blog/my-bucket-list.mdx"},"id":"ee301845-db55-58a9-a2ae-2496566e0f65","frontmatter":{"title":"My Bucket List","date":"2014-05-20T00:00:00.000Z","mdxPreview":"Ambitious, subject to change, incomplete, based on [this](https://dcurt.is/bucket-list).\n1. ~~Create something that touches 10,000 people.~~ (January 20th, 2013) 2. ~~Create something that touches 100,000 people.~~ (January 14th, 2015) 3. Create something that touches 1,000,000 people.\n"}}},{"node":{"parent":{"__typename":"File","name":"tables-are-hard","relativePath":"blog/tables-are-hard.mdx"},"id":"784c39b6-569d-5b29-903f-d960418c0f10","frontmatter":{"title":"Tables are hard","date":"2014-04-03T00:00:00.000Z","mdxPreview":"Letâ€™s talk about HTML tables.\nHereâ€™s some code:\n```html\n<table class=\"main\">\n  <colgroup><col class=\"votes\"><col></colgroup>\n  <tr>\n    <td>Votes</td>\n    <td>Comments</td>\n  </tr>\n  <tr>\n    <td>\n      <p class=\"vote-desc\">Some long name, really long, like really super long</p>\n      <p class=\"vote-desc\">Another long name, really long</p>\n    </td>\n    <td>\n      <p class=\"comment\">A really, really, really, really, really really really really really, really long comment.</p>\n    </td>\n  </tr>\n</table>\n```\n"}}}]}}}