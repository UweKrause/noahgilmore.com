(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{142:function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",function(){return s});var t=a(156),o=a.n(t),m=a(0),r=a.n(m),i=a(157),l=a(158);n.default=function(e){var n=e.components,a=o()(e,["components"]);return r.a.createElement(i.MDXTag,{name:"wrapper",Layout:l.a,layoutProps:a,components:n},r.a.createElement(i.MDXTag,{name:"p",components:n},"Another MacOS and another struggle through installing nokogiri. Most places online recommend using ",r.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"--with-xml2-include")," and ",r.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"--use-system-libraries")," during ",r.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"gem install"),", but if you're installing from a Gemfile using ",r.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"bundle install"),", it can sometimes be a little trickier."),r.a.createElement(i.MDXTag,{name:"p",components:n},"To enable passing args like this to a gem installed from a Gemfile, we can use ",r.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://bundler.io/v1.16/bundle_config.html"}},"Bundler Config"),". The magic command to run before ",r.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"bundle install")," on Mojave is:"),r.a.createElement(i.MDXTag,{name:"pre",components:n},r.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},"bundle config build.nokogiri --with-xml2-include=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2   --use-system-libraries\n")))};var s={}}}]);
//# sourceMappingURL=component---src-pages-blog-install-nokogiri-macos-mojave-mdx-3494632f24ed7438e409.js.map