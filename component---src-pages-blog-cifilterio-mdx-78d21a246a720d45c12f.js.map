{"version":3,"sources":["webpack:///./src/pages/blog/cifilterio.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","filename","alt","caption","max","isMDXComponent"],"mappings":"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","file":"component---src-pages-blog-cifilterio-mdx-78d21a246a720d45c12f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/noahgilmore.com/noahgilmore.com/src/components/BlogPageLayout.jsx\";\nimport CaptionedImage from '../../components/CaptionedImage';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Today I'm launching `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io\"\n      }}>{`CIFilter.io`}</a>{` ðŸŽ‰`}</p>\n    <CaptionedImage filename=\"cifilterio.png\" alt=\"Screenshot of the CIFilter.io website\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <p>{`CIFilter.io is a project I've been working on for the last few months, and today it's `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/noahsark769/cifilter.io/\"\n      }}>{`open source`}</a>{`. It has two parts:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A website, `}<a parentName=\"li\" {...{\n          \"href\": \"https://cifilter.io\"\n        }}>{`https://cifilter.io`}</a>{`, which lists all the available `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.apple.com/documentation/coreimage/cifilter\"\n        }}>{`CIFilters`}</a>{`, their information and examples of applying them`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8\"\n        }}>{`An app`}</a>{` which allows you to apply each CIFilter to various inputs, tune their parameters, and apply them to camera and photo library images`}</li>\n    </ol>\n    <p>{`The website is completely free and I intend to keep it updated with each new release of iOS and macOS. The app is not free, but your purchase helps support this project and others like it, and you can build it `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/noahsark769/cifilter.io/tree/master/iOS\"\n      }}>{`from source`}</a>{` if you'd prefer.`}</p>\n    <p>{`In this post I'll go into a bit of detail about the project, how it works, and why I built it.`}</p>\n    <h1 {...{\n      \"id\": \"background\"\n    }}>{`Background`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/coreimage/cifilter\"\n      }}>{`CIFilter`}</a>{` is a powerful part of `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/coreimage\"\n      }}>{`Core Image`}</a>{` that every app developer can take advantage of. There are many (207, as of iOS 12) CIFilters available in Core Image - everything from doing image compositing to photobooth effects.`}</p>\n    <CaptionedImage max=\"400\" filename=\"cithermal.jpeg\" alt=\"Application of the CIThermal filter\" caption=\"The CIThermal filter\" mdxType=\"CaptionedImage\" />\n    <p>{`However, it's hard to find documentation on what filters are available or how they work. Apple has `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/library/archive/documentation/GraphicsImaging/Reference/CoreImageFilterReference/index.html#//apple_ref/doc/uid/TP40004346\"\n      }}>{`a page`}</a>{` listing about 85% of the available filters, but it's \"no longer being updated\", and no new filters which were made available in iOS 10, 11, or 12 are listed there. If you Google `}<inlineCode parentName=\"p\">{`CIThermal`}</inlineCode>{`, for example, most of what you'll find is iOS header dumps.`}</p>\n    <p>{`For the filters which are listed, many have incomplete documentation - for example, the `}<inlineCode parentName=\"p\">{`inputSharpness`}</inlineCode>{` parameter to `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io#CICheckerboardGenerator\"\n      }}>{`CICheckerboardGenerator`}</a>{` says:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.`}</p>\n    </blockquote>\n    <p>{`Good info, but doesn't tell you what the parameter actually does. The examples on this page are also limited - for example, `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io#CISourceOutCompositing\"\n      }}>{`CISourceOutCompositing`}</a>{` takes an `}<inlineCode parentName=\"p\">{`inputImgage`}</inlineCode>{` and a `}<inlineCode parentName=\"p\">{`backgroundImage`}</inlineCode>{`. The page shows two images being composited, but doesn't specify which image is which:`}</p>\n    <CaptionedImage max=\"400\" filename=\"old-cisourceoutcompositing.png\" alt=\"Image of CISourceOutCompositing from Apple's documentation\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <h1 {...{\n      \"id\": \"problem\"\n    }}>{`Problem`}</h1>\n    <p>{`I ran into this documentation issue at work (in fact, I recently gave `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/noahsark769/status/1111148213921153024\"\n      }}>{`a talk`}</a>{` detailing more background on what issues I ran into), and I thought that there must be a better way. Turns out, it's possible to get info about every filter and their parameters by using `}<inlineCode parentName=\"p\">{`CIFilter`}</inlineCode>{`'s `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/coreimage/cifilter/1437661-attributes\"\n      }}>{`attributes var`}</a>{`.`}</p>\n    <p>{`The CIFilter.io `}<a parentName=\"p\" {...{\n        \"href\": \"https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8\"\n      }}>{`app`}</a>{` takes this filter attributes data, parses and normalizes it, and renders it to a json (which you can view `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/noahsark769/cifilter.io/blob/master/web/src/data/filters.json\"\n      }}>{`here`}</a>{`). The CIFilter.io `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io\"\n      }}>{`website`}</a>{` parses this json and renders it using `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/\"\n      }}>{`Gatsby`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"the-website\"\n    }}>{`The Website`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io\"\n      }}>{`CIFilter.io website`}</a>{` lists all filters and allows searching through the list:`}</p>\n    <CaptionedImage max=\"300\" filename=\"cifilterio-search.gif\" alt=\"Gif showing CIFilter.io's search bar\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <p>{`Each filter lists the description and parameters, pulled directly from the filter's `}<inlineCode parentName=\"p\">{`attributes`}</inlineCode>{` dict, which are generally more descriptive. For example, the `}<inlineCode parentName=\"p\">{`inputSharpness`}</inlineCode>{` parameter discussed above has the following description on CIFilter.io:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The sharpness of the edges in pattern. The smaller the value, the more blurry the pattern. Values range from 0.0 to 1.0.`}</p>\n    </blockquote>\n    <p>{`And the example for `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io#CISourceOutCompositing\"\n      }}>{`CISourceOutCompositing`}</a>{` shows the input parameter names:`}</p>\n    <CaptionedImage filename=\"cisourceoutcompositing.png\" alt=\"Example of applying the CISourceOutCompositing filter\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <h1 {...{\n      \"id\": \"the-app\"\n    }}>{`The App`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8\"\n      }}>{`CIFilter.io app`}</a>{` also shows documentation for all filters, but allows you to interactively apply them as well. Here's a gif of applying `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io#CICheckerboardGenerator\"\n      }}>{`CICheckerboardGenerator`}</a>{`:`}</p>\n    <CaptionedImage max=\"300\" filename=\"cicheckerboardgenerator.gif\" alt=\"Gif showing CICheckerboardGenerator in the CIFilter.io app\" caption=\"The color wheels don't transfer very well to GIFs\" mdxType=\"CaptionedImage\" />\n    <p>{`You can also apply filters to photos from your camera or photo library (this is how the examples on the website are generated, and how I generated the cat thermal from earlier in this post). Here's `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io#CIComicEffect\"\n      }}>{`CIComicEffect`}</a>{`, for example:`}</p>\n    <CaptionedImage max=\"300\" filename=\"cicomiceffect.gif\" alt=\"Gif showing CICheckerboardGenerator in the CIFilter.io app\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <h1 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next Steps`}</h1>\n    <p>{`There are several improvements `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/noahsark769/cifilter.io/issues\"\n      }}>{`tracked on GitHub`}</a>{` that would be good to implement:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Compatibility for `}<a parentName=\"li\" {...{\n          \"href\": \"https://kapeli.com/dash\"\n        }}>{`Dash`}</a>{` docsets`}</li>\n      <li parentName=\"ol\">{`More examples for more filters`}</li>\n      <li parentName=\"ol\">{`Use filters.json to generate a Swift library for applying CIFilters in a type-safe manner`}</li>\n    </ol>\n    <p>{`I'll be working on some of these going forward, but I'm hoping the community can get involved too ðŸ™‚`}</p>\n    <p>{`Until then, you can check out CIFilter.io on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://cifilter.io\"\n      }}>{`website`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://itunes.apple.com/us/app/cifilter-io/id1457458557?mt=8\"\n      }}>{`app`}</a>{`, and on `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/cifilterio\"\n      }}>{`Twitter`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}