{"version":3,"sources":["webpack:///./src/pages/blog/pyparsing-trees.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","filename","alt","caption","isMDXComponent"],"mappings":"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","file":"component---src-pages-blog-pyparsing-trees-mdx-9c3ddd5a1014988f9d49.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/noahgilmore.com/noahgilmore.com/src/components/BlogPageLayout.jsx\";\nimport CaptionedImage from '../../components/CaptionedImage';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Let's talk about `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Abstract_syntax_tree\"\n      }}>{`syntax trees`}</a>{`. In static analysis, a common operation is to take a character string (e.g. \"x = 1\") and transform it into well structured data:`}</p>\n    <CaptionedImage filename=\"pyparsing-trees-1.png\" alt=\"Simple syntax tree\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <p>{`Let's try to do this in python. We'll use `}<a parentName=\"p\" {...{\n        \"href\": \"http://pyparsing.wikispaces.com/\"\n      }}>{`Pyparsing`}</a>{` as our tokenization tool - you can use pyparsing's rules to build a grammar, from which you can get back a list of token data.`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"python\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`from`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` pyparsing `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` alphas, Word, Literal, nums`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar = Literal(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"var\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + Word(alphas) + Literal(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"=\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + Word(nums)`}</span></span></code></pre>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`>>> print(grammar.parseString(\"var x = 1\"))`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`['var', 'x', '=', '1']`}</span></code></pre>\n    <p>{`This is great, but what if we need a tree instead of an array of tokens?`}</p>\n    <p>{`For example, let's say we have a language that describes a tree, where each node in the tree can have a number. Each node is represented by a pair of parentheses, and inside is the value followed by the child nodes:`}</p>\n    <CaptionedImage filename=\"pyparsing-trees-2.png\" alt=\"Simple syntax tree\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <p>{`How could we write a parser for this? It differs in a couple of ways from the first example:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`It's inherently recursive, since after the value in each node, zero or more child nodes can follow:`}<pre parentName=\"li\" {...{\n          \"className\": \"dark-default-dark vscode-highlight\",\n          \"data-language\": \"nohighlight\"\n        }}><code parentName=\"pre\" {...{\n            \"className\": \"vscode-highlight-code\"\n          }}><span parentName=\"code\" {...{\n              \"className\": \"vscode-highlight-line\"\n            }}>{`node := (value[, node, node, node, ...])`}</span></code></pre></li>\n      <li parentName=\"ol\">{`If we parse the string as a list, we won't be able to preserve the tree structure.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"recursive-grammars-with-pyparsing\"\n    }}>{`Recursive grammars with pyparsing`}</h3>\n    <p>{`Pyparsing supports recursive grammars using a grammar component called `}<inlineCode parentName=\"p\">{`Forward`}</inlineCode>{`. To define a recursive grammar, you create a `}<inlineCode parentName=\"p\">{`pyparsing.Forward()`}</inlineCode>{`, then use the shift left operator to set its content:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"python\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar = pyparsing.Forward()`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar << pyparsing.Suppress(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"(\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + pyparsing.Word(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"0123456789\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + pyparsing.ZeroOrMore(grammar) + pyparsing.Suppress(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\")\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`query = `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"(1 (2 (3)) (4 (5 (6) (7) (8)))\"`}</span></span></code></pre>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`>>> print(grammar.parseString(query))`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`['5', '6', '7', '9', '9', '5', '6', '7', '8', '9', '7', '8', '9']`}</span></code></pre>\n    <p>{`This parses the grammar, but we still don't have the tree structure.`}</p>\n    <h3 {...{\n      \"id\": \"parse-actions\"\n    }}>{`Parse actions`}</h3>\n    <p>{`Pyparsing allows a \"parse action\" to be defined:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"python\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`def`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`action`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`string`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`location`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`tokens`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`):`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`return`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` tokens`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar.setParseAction(action)`}</span></span></code></pre>\n    <p>{`The parse action is a function which will be applied every time a parse element generates output. It takes three arguments:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The full input string being parsed.`}</li>\n      <li parentName=\"ol\">{`The location of the parse element as an index into the full string.`}</li>\n      <li parentName=\"ol\">{`The list generated tokens, as strings.`}</li>\n    </ol>\n    <p>{`The value returned from the parse action function will replace the string tokens, and the default implementation does nothing with the tokens and just returns them the way they are. The parse action is our chance to hook into pyparsing and output structured data instead of strings.`}</p>\n    <p>{`As an example:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"python\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` pyparsing`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`class`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Item`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`:`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`def`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`__init__`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`self`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`value`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`):`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`        `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`self`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`.value = value`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`def`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`__repr__`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`self`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`):`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`        `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`return`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`{Item: %s}`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` % `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`self`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`.value`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`def`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`transform`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`string`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`location`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`tokens`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`):`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`return`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` [Item(token) `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`for`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` token `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`in`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` tokens]`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar = Literal(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"var\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + Word(alphas) + Literal(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"=\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + Word(nums)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar.setParseAction(transform)`}</span></span></code></pre>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`>>> print(grammar.parseString(\"var x = 1\"))`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`[{Item: var}, {Item: x}, {Item: =}, {Item: 1}]`}</span></code></pre>\n    <p>{`Now we have items instead of strings.`}</p>\n    <h3 {...{\n      \"id\": \"building-a-tree\"\n    }}>{`Building a tree`}</h3>\n    <p>{`Let's apply this to the tree grammar to build a tree. We'll define a simple node class:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"python\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`from`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` collections `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` namedtuple`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`Node = namedtuple(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"Node\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, [`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"value\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"children\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`])`}</span></span></code></pre>\n    <p>{`And define the recursive grammar:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"python\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`from`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` pyparsing `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` Forward, Suppress, Word, ZeroOrMore`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar = Forward()`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar << Suppress(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"(\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + Word(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"0123456789\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) + ZeroOrMore(grammar) + Suppress(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\")\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`def`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`parseAction`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`string`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`location`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`tokens`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`):`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`return`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` Node(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`value`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`=tokens[`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`0`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`], `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`children`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`=tokens[`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`:])`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`grammar.setParseAction(parseAction)`}</span></span></code></pre>\n    <p>{`And a way to print it out and see if it worked:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"python\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`def`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`pprint`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`node`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`tab`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`=`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`):`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`   `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`print`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` tab + `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`u`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"┗━ \"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` + `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`str`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(node.value)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`   `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`for`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` child `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`in`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` node.children:`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`      pprint(child, tab + `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"    \"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span></code></pre>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`>>> pprint(grammar.parseString(\"(1 (2 (3)) (4 (5 (6) (7) (8))))\"))`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`┗━ 1`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    ┗━ 2`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        ┗━ 3`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`    ┗━ 4`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`        ┗━ 5`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            ┗━ 6`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            ┗━ 7`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`            ┗━ 8`}</span></code></pre>\n    <p>{`Not bad: a simple parser in 9 lines of code.`}</p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  \n  .dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }\n`}</style>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}