{"version":3,"sources":["webpack:///./src/pages/blog/userdefaults-set-nil.mdx"],"names":["__webpack_exports__","_ref","components","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_2__","name","Layout","DefaultLayout","layoutProps","parentName","className","metaString","href","_frontmatter"],"mappings":"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","file":"component---src-pages-blog-userdefaults-set-nil-mdx-cb4d2c064960039d9766.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/noahgilmore/code/noahgilmore.com/src/components/BlogPageLayout.jsx\"\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\" Layout={DefaultLayout} layoutProps={props} components={components}>\n\n<MDXTag name=\"p\" components={components}>{`To clear a value from UserDefaults, I previously thought it was fine to do something like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\",\"metaString\":\"\"}}>{`UserDefaults.standard.set(nil, forKey: \"myKey\")\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Turns out that this works differently in different iOS versions. Starting in iOS 11, setting nil for a key works as I expected and the following prints nil:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\",\"metaString\":\"\"}}>{`UserDefaults.standard.set(nil, forKey: \"myKey\")\nprint(UserDefaults.standard.data(forKey: \"myKey\"))\n// nil\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`However, in iOS 10, UserDefaults actually tries to serialize nil into a Data:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\",\"metaString\":\"\"}}>{`UserDefaults.standard.set(nil, forKey: \"myKey\")\nprint(UserDefaults.standard.data(forKey: \"myKey\"))\n// 135 bytes\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we look at this data, it seems like it might be a plist:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\",\"metaString\":\"\"}}>{`print(String(\n    data: UserDefaults.standard.data(forKey: \"myKey\")!,\n    encoding: .ascii\n))\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-nohighlight\",\"metaString\":\"\"}}>{`Optional(\"bplist00Ã”\\u{01}\\u{02}\\u{03}\\u{04}\\u{05}\\u{08}\\n\\u{0B}T\\$topX\\$objectsX\\$versionY\\$archiverÃ‘\\u{06}\\u{07}TrootÂ€\\0Â¡\\tU\\$null\\u{12}\\0\\u{01}Â† _\\u{10}\\u{0F}NSKeyedArchiver\\u{08}\\u{11}\\u{16}\\u{1F}(25:<>DI\\0\\0\\0\\0\\0\\0\\u{01}\\u{01}\\0\\0\\0\\0\\0\\0\\0\\u{0C}\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0[\")\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Turns out that we can use PropertyListSerialization to actually print the serialized value of nil:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\",\"metaString\":\"\"}}>{`let data = UserDefaults.standard.data(forKey: \"myKey\")!\nlet propertyList = try! PropertyListSerialization.propertyList(\n   from: data,\n   options: [],\n   format: nil\n)\nprint(propertyList)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-nohighlight\",\"metaString\":\"\"}}>{`{\n    \"\\$archiver\" = NSKeyedArchiver;\n    \"\\$objects\" =     (\n        \"\\$null\"\n    );\n    \"\\$top\" =     {\n        root = \"<CFKeyedArchiverUID 0x79e7c420 [0xf126e8]>{value = 0}\";\n    };\n    \"\\$version\" = 100000;\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`For whatever reason, this was totally unexpected to me. Itâ€™s particularly tricky when youâ€™re trying to interpret the value of a previously cleared UserDefaults key as JSON:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\",\"metaString\":\"\"}}>{`if let data = UserDefaults.standard.data(forKey: \"myKey\") {\n    let json = try JSONDecoder().decode(MyClass.self, from: data)\n    print(json)\n} else {\n    print(\"No data found\")\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will work just fine on iOS 11+, but throw an error on iOS 10.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Hereâ€™s an `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/noahsark769/userdefaults-set-nil-example\"}}>{`example project`}</MDXTag>{` which demonstrates this behavior. I ended up finding one stackoverflow post about it, but as far as I can tell this isnâ€™t documented anywhere. If you have any more info about it, `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://twitter.com/noahsark769\"}}>{`let me know`}</MDXTag>{` ðŸ‘‹`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Lesson learnedâ€Šâ€”â€Šsetting nil isnâ€™t a good way to clear a UserDefaults value. Instead, just use the recommended approach:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\",\"metaString\":\"\"}}>{`UserDefaults.standard.removeObject(forKey: \"myKey\")\n`}</MDXTag></MDXTag></MDXTag>\n\nexport const _frontmatter = {};\n\n  "],"sourceRoot":""}