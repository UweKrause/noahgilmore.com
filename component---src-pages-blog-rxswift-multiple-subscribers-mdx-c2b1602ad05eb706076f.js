(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{251:function(e,a,s){"use strict";s.r(a),s.d(a,"_frontmatter",function(){return c}),s.d(a,"default",function(){return m});s(9),s(10),s(5),s(13),s(22),s(0);var t=s(84),n=s(273);var c={},p={_frontmatter:c},b=n.a;function m(e){var a=e.components,s=function(e,a){if(null==e)return{};var s,t,n={},c=Object.keys(e);for(t=0;t<c.length;t++)s=c[t],a.indexOf(s)>=0||(n[s]=e[s]);return n}(e,["components"]);return Object(t.b)(b,Object.assign({},p,s,{components:a,mdxType:"MDXLayout"}),Object(t.b)("p",null,'Or, "how to not make unnecessary requests with a URLSession subscriber".'),Object(t.b)("p",null,"I've been working on a side project for ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769/status/1066878101907419137"}),"better CIFilter documentation")," lately, and I decided this was as good of a time as any to try out ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/ReactiveX/RxSwift"}),"RxSwift"),". Even though reactive programming is becoming more and more common in native app development, I've never had a chance to really dig into it, so I started by going through RxSwift's ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/ReactiveX/RxSwift/blob/master/Documentation/GettingStarted.md"}),"intro documentation"),"."),Object(t.b)("h2",null,"Multiple Subscribers"),Object(t.b)("p",null,"One thing that wasn't immediately intuitive to me about Observables is that any time ",Object(t.b)("inlineCode",{parentName:"p"},"subscribe")," is called, the observable's creation block gets called again, even for Observables which perform asynchronous work. Take a simple observable that generates integers as an example:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"generateRandomIntAfterDelay"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() -> Observable<"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Int"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"> {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"create"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," { observer "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"Processing request..."'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        DispatchQueue."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"main"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"asyncAfter"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"deadline"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": DispatchTime."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"now"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() + "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"2"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"Generating random int..."'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            observer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Int"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"random"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"in"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," ..< "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"10"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"))")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            observer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onCompleted"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Disposables."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"create"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"If you have multiple subscribers to this observable, that means multiple units of work will get enqueued, and multiple random ints will get returned. I.e., if our subscription code looks like this:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," observable = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"generateRandomIntAfterDelay"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"subscribe"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": { randInt "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"1: Got '),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk6"}),"\\\\"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'(randInt)"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"})")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"subscribe"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": { randInt "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"2: Got '),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk6"}),"\\\\"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'(randInt)"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"})")))),Object(t.b)("p",null,"Then the output will look like this:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"nohighlight"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"Processing request..."),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"Processing request..."),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"Generating random int..."),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"1: Got 7"),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"Generating random int..."),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"2: Got 2"))),Object(t.b)("p",null,"For some reason, I assumed that for async observables, two subscriptions would result in two outputs, but for the same async result - this is just not how observable subscriptions work."),Object(t.b)("h2",null,"Observable URLSession Tasks"),Object(t.b)("p",null,"This situation gets a little trickier when you have an observable which performs real work, like making http requests:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"extension"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Reactive"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"where"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Base: URLSession {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"public"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"response"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"urlString"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"String"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") -> Observable<Data> {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"create"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," { observer "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," task = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"base"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"dataTask"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"                "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"with"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"URLRequest"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"url"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"URL"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"string"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": urlString)!)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            ) { (data, response, error) "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"                "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"guard"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," data = data "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"else"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"                    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"                }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"                observer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(data)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"                observer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onCompleted"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            task."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"resume"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Disposables."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"create"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"                task."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"cancel"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"makeRequest"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," observable = URLSession."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"shared"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"rx"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"response"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"urlString"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"https://noahgilmore.com"')),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"subscribe"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": { data "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"Got the data!"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    })")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"subscribe"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": { data "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"Got the data again!"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    })")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"One call to ",Object(t.b)("inlineCode",{parentName:"p"},"makeRequest()")," will make ",Object(t.b)("em",{parentName:"p"},"two")," HTTP requests and get back two separate data objects. I started to wonder about how you would correctly implement multiple subscribers for a single HTTP request - it turns out an easy way is to use ",Object(t.b)("inlineCode",{parentName:"p"},"ConnectableObservable"),', an "observable sequence that shares a single subscription to the underlying sequence"',Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/ReactiveX/RxSwift/blob/53cd723d40d05177e790c8c34c36cec7092a6106/RxSwift/Observables/Multicast.swift#L54"}),"[1]"),". Calling ",Object(t.b)("inlineCode",{parentName:"p"},"publish()")," on any observable returns a ",Object(t.b)("inlineCode",{parentName:"p"},"ConnectableObservable")," which mirrors it, and you can start the sequence with ",Object(t.b)("inlineCode",{parentName:"p"},".connect()"),". This means you can implement multiple subscriptions for a single unit of work like this:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"makeRequest"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," observable = URLSession."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"shared"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"rx"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"response"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"urlString"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"https://noahgilmore.com"')),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," connectableObservable = observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"publish"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    connectableObservable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"subscribe"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": { data "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"Got the data!"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    })")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    connectableObservable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"subscribe"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": { data "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"Got the data again!"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    })")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// Start the request")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    connectableObservable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"connect"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"This code correctly only makes one HTTP request with two callbacks. 👌"),Object(t.b)("p",null,"This isn't the only time ",Object(t.b)("inlineCode",{parentName:"p"},".publish()")," is useful though - like ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://stackoverflow.com/questions/40052529/in-rxjs-5-is-there-a-way-to-trigger-an-observable-before-subscribing-to-it?rq=1"}),"asked in this Stackoverflow"),", you sometimes want to kick off a long-running piece of work before you actually subscribe to an observable. For example:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"longRunningTask"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() -> Observable<Result> {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Observable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"create"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," { observer "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        doSomeLongRunningWork { result "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            observer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(result)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            observer."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onCompleted"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"startTask"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," connectable = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"longRunningTask"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"publish"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    connectable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"connect"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// start the task")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// Do more setup...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    connectable."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"subscribe"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"onNext"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": { result "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"in")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// process the result")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    })")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"Hopefully this helps explain an unintuitive concept for others who are starting out with reactive programming. If you know a better way or a best practice to do this sort of thing, ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769"}),"let me know"),"! For reference, I've implemented these examples on ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/RxSwift-practice/blob/ca092d91791e40a98980607c0d72caa774d1a509/rxswift-practice/Tests.swift#L85"}),"Github"),"."),Object(t.b)("style",{className:"vscode-highlight-styles"},".dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }"))}m.isMDXComponent=!0},261:function(e,a,s){"use strict";s.d(a,"d",function(){return N}),s.d(a,"b",function(){return g}),s.d(a,"c",function(){return d}),s.d(a,"g",function(){return h}),s.d(a,"e",function(){return k}),s.d(a,"f",function(){return u}),s.d(a,"a",function(){return f});var t=s(2),n=s(263),c=s.n(n),p=s(264),b=s.n(p),m=s(265),i=s.n(m),r=s(266),l=s.n(r);function o(){var e=j(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n            url('","') format('woff'),\n            url('","') format('truetype'),\n            url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n\n    @media (prefers-color-scheme: dark) {\n        html, body {\n            background-color: #2b2c2f;\n        }\n    }\n"]);return o=function(){return e},e}function O(){var e=j(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n             url('","') format('woff'),\n             url('","') format('truetype'),\n             url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n"]);return O=function(){return e},e}function j(e,a){return a||(a=e.slice(0)),e.raw=a,e}var N=Object(t.a)(O(),c.a,c.a,b.a,i.a,l.a),g=Object(t.a)(o(),c.a,c.a,b.a,i.a,l.a),d=t.c.div.withConfig({displayName:"default__Div",componentId:"d4l1a1-0"})([""]),h=(t.c.nav.withConfig({displayName:"default__Nav",componentId:"d4l1a1-1"})([""]),t.c.ul.withConfig({displayName:"default__UL",componentId:"d4l1a1-2"})(["margin:0;padding:0;"])),k=t.c.li.withConfig({displayName:"default__LI",componentId:"d4l1a1-3"})(["margin:0;padding:0;"]),u=t.c.p.withConfig({displayName:"default__P",componentId:"d4l1a1-4"})(["margin:0;padding:0;"]),f=t.c.a.withConfig({displayName:"default__A",componentId:"d4l1a1-5"})(["&,&:hover,&:focus{outline:none;color:inherit;text-decoration:none;}"])},263:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot"},264:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff"},265:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf"},266:function(e,a,s){e.exports=s.p+"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg"},267:function(e,a,s){"use strict";var t=s(0),n=s.n(t),c=s(261),p=s(66),b=s(2),m=s(271),i=s(272),r=b.c.nav.withConfig({displayName:"Nav__StyledNav",componentId:"sc-1cm9dpf-0"})(["display:flex;flex-direction:row;flex-wrap:wrap;padding:20px 60px;border-bottom:1px solid #ddd;@media all and (max-width:600px){padding:20px;}@media (prefers-color-scheme:dark){border-color:#777;}"]),l=b.c.div.withConfig({displayName:"Nav__Title",componentId:"sc-1cm9dpf-1"})(['flex:2;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:28px;font-display:swap;@media (prefers-color-scheme:dark){color:#fff;}']),o=Object(b.c)(c.g).withConfig({displayName:"Nav__NavLinks",componentId:"sc-1cm9dpf-2"})(["flex:10;display:flex;flex-direction:horizontal;flex-wrap:wrap;justify-content:flex-end;height:100%;align-self:center;"]),O=Object(b.c)(c.e).withConfig({displayName:"Nav__NavLink",componentId:"sc-1cm9dpf-3"})(['display:flex;flex-direction:vertical;align-items:center;text-align:center;font-family:"Bariol","Helvetica Neue","Helvetica",sans-serif;font-size:16px;padding:0px 20px;']),j=Object(b.c)(c.a).withConfig({displayName:"Nav__StyledA",componentId:"sc-1cm9dpf-4"})(["height:auto;color:",";display:flex;flex-direction:vertical;align-items:center;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{color:",";}"],p.a,p.b);a.a=function(e){return n.a.createElement(r,null,n.a.createElement(l,null,n.a.createElement(j,{href:e.blog?"/blog":"/"},"NOAH GILMORE")),n.a.createElement(o,null,n.a.createElement(O,null,n.a.createElement(j,{"aria-label":"Blog Home",href:"/blog"},n.a.createElement(m.b,{color:p.a,size:"24"}))),n.a.createElement(O,null,n.a.createElement(j,{"aria-label":"Twitter",href:"https://twitter.com/noahsark769"},n.a.createElement(i.a,{color:p.a,size:"24"}))),n.a.createElement(O,null,n.a.createElement(j,{"aria-label":"App Store",href:"https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8"},n.a.createElement(m.a,{color:p.a,size:"24"})))))}},268:function(e,a,s){"use strict";s.d(a,"a",function(){return b}),s.d(a,"b",function(){return l});var t=s(0),n=s.n(t),c=s(2),p=s(262);var b=c.c.div.withConfig({displayName:"BlogPost__BlogPostContainer",componentId:"gyfnna-0"})(["padding:60px 0;margin:0 auto;width:90%;@media all and (min-width:600px){max-width:700px;margin:auto;}@media all and (max-width:600px){width:100%;padding:20px 0;","}"],function(e){return e.darkened&&Object(c.b)(["background-color:#f6f6f6;@media (prefers-color-scheme:dark){background-color:inherit;}"])}),m=c.c.div.withConfig({displayName:"BlogPost__TitleContainer",componentId:"gyfnna-1"})(["width:100%;margin-bottom:40px;"]),i=c.c.h1.withConfig({displayName:"BlogPost__Heading",componentId:"gyfnna-2"})(['width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:34px;margin-bottom:10px;line-height:1.2em;@media (prefers-color-scheme:dark){color:#fff;}']),r=c.c.p.withConfig({displayName:"BlogPost__DateContainer",componentId:"gyfnna-3"})(['font-family:"Gentium Book Basic",times,serif;font-style:italic;font-size:16px;color:#999;']),l=function(e){return n.a.createElement("div",null,n.a.createElement(p.Helmet,null,n.a.createElement("title",null,e.title)),n.a.createElement(m,null,n.a.createElement(i,null,e.title),n.a.createElement(r,null,e.date)))};n.a.Component},269:function(e,a,s){"use strict";s.d(a,"a",function(){return p});var t=s(0),n=s.n(t);var c=s(2).c.div.withConfig({displayName:"MarkdownContent__Container",componentId:"zl3v0s-0"})(['p,li{margin:0;padding:0;font-family:"Gentium Book Basic",times,serif;font-size:21px;line-height:29px;color:#333;padding-bottom:15px;margin-top:15px;@media all and (max-width:600px){width:90%;margin:15px auto 0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}blockquote{background-color:#faf9f7;border-left:4px solid #e5e4e1;padding:20px;font-style:italic;@media (prefers-color-scheme:dark){background-color:#3f3f3f;}p{margin:0;padding:0;color:#555;@media (prefers-color-scheme:dark){color:#fff;}}}a{color:#1A3F4B;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;@media (prefers-color-scheme:dark){color:#60b5d1;}}a:hover{color:#47656E;@media (prefers-color-scheme:dark){color:#6bcfef;}}code{font-family:monospace;font-size:16px;padding:3px 5px;margin:0px 2px;@media (prefers-color-scheme:dark){color:#fff;}}code:not(.vscode-highlight-code){font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:first-child{margin-left:0;}pre{display:block;margin:0;padding:0;margin-top:10px;border:1px solid #e5e4e1;border-radius:2px;@media all and (max-width:600px){width:100%;margin:10px auto 0 auto;border-left:none;border-right:none;border-radius:0;overflow-x:scroll;}}pre > code{display:block;margin:0;padding:10px;font-family:monospace;font-size:14px;line-height:17px;white-space:pre-wrap;@media all and (max-width:600px){font-size:15px;white-space:pre;padding:15px 5% 15px 5%;width:100%;}}pre + p{margin-top:30px;}ol{margin-left:30px;@media all and (max-width:600px){width:90%;margin:0 auto 0 30px;}@media (prefers-color-scheme:dark){color:#fff;}}ol li{list-style-type:decimal;}ul li{list-style-type:square;margin-left:40px;@media all and (max-width:600px){width:90%;margin:0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1,h2,h3,h4,h5,h6{width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;margin-bottom:10px;margin-top:40px;@media all and (max-width:600px){width:90%;margin:40px auto 10px auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1{font-size:28px;}h2{font-size:24px;}h3{font-size:20px;}em{font-style:italic;}strong{font-weight:bold;}']),p=function(e){var a,s;function t(){return e.apply(this,arguments)||this}return s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s,t.prototype.render=function(){return n.a.createElement(c,null,this.props.children)},t}(n.a.Component)},270:function(e,a,s){"use strict";function t(e){return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}s.d(a,"a",function(){return t})},273:function(e,a,s){"use strict";s(114);var t=s(0),n=s.n(t),c=s(262),p=s(261),b=s(267),m=s(2),i=s(271),r=s(272),l=s(66);var o=m.c.div.withConfig({displayName:"EndButtons__Container",componentId:"sc-2ta1su-0"})(["width:100%;display:flex;flex-direction:horizontal;align-items:center;justify-content:center;margin-top:40px;"]),O=m.c.div.withConfig({displayName:"EndButtons__ButtonStyle",componentId:"sc-2ta1su-1"})(["background-color:",";-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{background-color:",";}width:100px;padding:10px 20px;text-align:center;display:flex;flex-direction:vertical;align-items:center;justify-content:center;border-radius:4px;",";"],l.a,l.b,function(e){return e.margin&&Object(m.b)(["margin-right:20px;"])}),j=function(e){return n.a.createElement(p.a,{href:e.url,target:e.newTab?"_blank":null,"aria-label":e.label},n.a.createElement(O,{margin:e.margin},e.children))},N=function(e){var a,s;function t(){return e.apply(this,arguments)||this}return s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s,t.prototype.render=function(){var e,a=(e="Post by @noahsark769: "+this.props.tweetTitle+" "+this.props.tweetUrl,"https://twitter.com/intent/tweet?text="+encodeURIComponent(e));return n.a.createElement(o,null,n.a.createElement(j,{label:"Twitter",url:a,newTab:!0,margin:!0},n.a.createElement(r.a,{size:24,color:"white"})),n.a.createElement(j,{label:"Blog homepage",url:"/blog"},n.a.createElement(i.b,{size:24,color:"white"})))},t}(n.a.Component),g=s(268),d=s(269),h=s(270);var k=m.c.div.withConfig({displayName:"Disqus__Wrapper",componentId:"sc-1jjeqqj-0"})(["margin-top:80px;"]),u=function(e){var a,s;function t(){return e.apply(this,arguments)||this}s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s;var c=t.prototype;return c.render=function(){return n.a.createElement(k,null,n.a.createElement("div",{id:"disqus_thread"}))},c.componentDidMount=function(){var e,a;e=document,(a=e.createElement("script")).src="//noahgilmore-com.disqus.com/embed.js",a.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(a)},t}(n.a.Component),f=s(115),v=s.n(f);s.d(a,"a",function(){return y});var w=m.c.div.withConfig({displayName:"BlogPageLayout__Container",componentId:"sc-118ribu-0"})(["@media (prefers-color-scheme:dark){background-color:#2b2c2f;}"]),x=m.c.div.withConfig({displayName:"BlogPageLayout__NonContent",componentId:"sc-118ribu-1"})(["@media all and (max-width:600px){padding-right:5%;padding-left:5%;}"]),y=function(e){var a,s;function t(){return e.apply(this,arguments)||this}s=e,(a=t).prototype=Object.create(s.prototype),a.prototype.constructor=a,a.__proto__=s;var m=t.prototype;return m.render=function(){var e="undefined"!=typeof window&&window.matchMedia("(prefers-color-scheme: dark)").matches;return n.a.createElement(w,null,n.a.createElement(p.b,null),n.a.createElement(c.Helmet,null,n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Roboto:700",rel:"stylesheet",type:"text/css"}),n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Gentium+Book+Basic",rel:"stylesheet"}),!e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/atom-one-light.min.css"}),e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/zenburn.min.css"}),n.a.createElement("meta",{name:"twitter:card",content:"summary"}),n.a.createElement("meta",{name:"twitter:creator",content:"@noahsark769"}),n.a.createElement("meta",{property:"og:url",content:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement("meta",{property:"og:title",content:this.props.pageContext.frontmatter.title}),n.a.createElement("meta",{property:"og:description",content:this.props.pageContext.frontmatter.staticPreview}),n.a.createElement("meta",{name:"description",content:this.props.pageContext.frontmatter.staticPreview})),n.a.createElement(b.a,{blog:!0}),n.a.createElement(g.a,null,n.a.createElement(x,null,n.a.createElement(g.b,{title:this.props.pageContext.frontmatter.title,date:Object(h.a)(this.props.pageContext.frontmatter.date)})),n.a.createElement(d.a,null,this.props.children),n.a.createElement(x,null,n.a.createElement(N,{tweetTitle:this.props.pageContext.frontmatter.title,tweetUrl:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement(u,null))))},m.componentDidMount=function(){v.a.initialize("UA-35325391-1"),v.a.pageview(window.location.pathname+window.location.search)},t}(n.a.Component)}}]);
//# sourceMappingURL=component---src-pages-blog-rxswift-multiple-subscribers-mdx-c2b1602ad05eb706076f.js.map