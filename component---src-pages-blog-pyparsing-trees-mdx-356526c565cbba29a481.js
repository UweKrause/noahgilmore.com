(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{249:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",function(){return r}),t.d(a,"default",function(){return m});t(9),t(10),t(5),t(13),t(21),t(0);var s=t(84),n=t(272),c=t(23);var r={},i={_frontmatter:r},p=n.a;function m(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,s,n={},c=Object.keys(e);for(s=0;s<c.length;s++)t=c[s],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,["components"]);return Object(s.b)(p,Object.assign({},i,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Let's talk about ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Abstract_syntax_tree"}),"syntax trees"),'. In static analysis, a common operation is to take a character string (e.g. "x = 1") and transform it into well structured data:'),Object(s.b)(c.a,{filename:"pyparsing-trees-1.png",alt:"Simple syntax tree",caption:"",mdxType:"CaptionedImage"}),Object(s.b)("p",null,"Let's try to do this in python. We'll use ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"http://pyparsing.wikispaces.com/"}),"Pyparsing")," as our tokenization tool - you can use pyparsing's rules to build a grammar, from which you can get back a list of token data."),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"python"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"from"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," pyparsing "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"import"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," alphas, Word, Literal, nums")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar = Literal("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"var"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + Word(alphas) + Literal("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"="'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + Word(nums)")))),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":""},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),'>>> print(grammar.parseString("var x = 1"))'),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"['var', 'x', '=', '1']"))),Object(s.b)("p",null,"This is great, but what if we need a tree instead of an array of tokens?"),Object(s.b)("p",null,"For example, let's say we have a language that describes a tree, where each node in the tree can have a number. Each node is represented by a pair of parentheses, and inside is the value followed by the child nodes:"),Object(s.b)(c.a,{filename:"pyparsing-trees-2.png",alt:"Simple syntax tree",caption:"",mdxType:"CaptionedImage"}),Object(s.b)("p",null,"How could we write a parser for this? It differs in a couple of ways from the first example:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"It's inherently recursive, since after the value in each node, zero or more child nodes can follow:",Object(s.b)("pre",Object.assign({parentName:"li"},{className:"dark-default-dark vscode-highlight","data-language":"nohighlight"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"node := (value[, node, node, node, ...])")))),Object(s.b)("li",{parentName:"ol"},"If we parse the string as a list, we won't be able to preserve the tree structure.")),Object(s.b)("h3",null,"Recursive grammars with pyparsing"),Object(s.b)("p",null,"Pyparsing supports recursive grammars using a grammar component called ",Object(s.b)("inlineCode",{parentName:"p"},"Forward"),". To define a recursive grammar, you create a ",Object(s.b)("inlineCode",{parentName:"p"},"pyparsing.Forward()"),", then use the shift left operator to set its content:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"python"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar = pyparsing.Forward()")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar << pyparsing.Suppress("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"("'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + pyparsing.Word("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"0123456789"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + pyparsing.ZeroOrMore(grammar) + pyparsing.Suppress("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'")"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"query = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"(1 (2 (3)) (4 (5 (6) (7) (8)))"')))),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":""},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),">>> print(grammar.parseString(query))"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"['5', '6', '7', '9', '9', '5', '6', '7', '8', '9', '7', '8', '9']"))),Object(s.b)("p",null,"This parses the grammar, but we still don't have the tree structure."),Object(s.b)("h3",null,"Parse actions"),Object(s.b)("p",null,'Pyparsing allows a "parse action" to be defined:'),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"python"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"def"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"action"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"string"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"location"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"tokens"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"):")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," tokens")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar.setParseAction(action)")))),Object(s.b)("p",null,"The parse action is a function which will be applied every time a parse element generates output. It takes three arguments:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"The full input string being parsed."),Object(s.b)("li",{parentName:"ol"},"The location of the parse element as an index into the full string."),Object(s.b)("li",{parentName:"ol"},"The list generated tokens, as strings.")),Object(s.b)("p",null,"The value returned from the parse action function will replace the string tokens, and the default implementation does nothing with the tokens and just returns them the way they are. The parse action is our chance to hook into pyparsing and output structured data instead of strings."),Object(s.b)("p",null,"As an example:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"python"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"import"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," pyparsing")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Item"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),":")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"def"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"__init__"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"value"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"):")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),".value = value")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"def"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"__repr__"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"):")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"{Item: %s}"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," % "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),".value")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"def"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"transform"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"string"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"location"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"tokens"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"):")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," [Item(token) "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"for"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," token "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"in"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," tokens]")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar = Literal("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"var"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + Word(alphas) + Literal("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"="'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + Word(nums)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar.setParseAction(transform)")))),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":""},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),'>>> print(grammar.parseString("var x = 1"))'),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"[{Item: var}, {Item: x}, {Item: =}, {Item: 1}]"))),Object(s.b)("p",null,"Now we have items instead of strings."),Object(s.b)("h3",null,"Building a tree"),Object(s.b)("p",null,"Let's apply this to the tree grammar to build a tree. We'll define a simple node class:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"python"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"from"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," collections "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"import"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," namedtuple")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"Node = namedtuple("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"Node"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", ["),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"value"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"children"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"])")))),Object(s.b)("p",null,"And define the recursive grammar:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"python"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"from"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," pyparsing "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"import"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Forward, Suppress, Word, ZeroOrMore")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar = Forward()")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar << Suppress("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"("'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + Word("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"0123456789"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") + ZeroOrMore(grammar) + Suppress("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'")"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"def"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"parseAction"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"string"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"location"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"tokens"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"):")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"return"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," Node("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"value"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"=tokens["),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"], "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"children"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"=tokens["),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"1"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),":])")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"grammar.setParseAction(parseAction)")))),Object(s.b)("p",null,"And a way to print it out and see if it worked:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"python"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"def"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"pprint"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"node"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"tab"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"="),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'""'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"):")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"   "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"print"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," tab + "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"u"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"┗━ "'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," + "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"str"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(node.value)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"   "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk15"}),"for"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," child "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"in"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," node.children:")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"      pprint(child, tab + "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"    "'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":""},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),'>>> pprint(grammar.parseString("(1 (2 (3)) (4 (5 (6) (7) (8))))"))'),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"┗━ 1"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"    ┗━ 2"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"        ┗━ 3"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"    ┗━ 4"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"        ┗━ 5"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"            ┗━ 6"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"            ┗━ 7"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),"            ┗━ 8"))),Object(s.b)("p",null,"Not bad: a simple parser in 9 lines of code."),Object(s.b)("style",{className:"vscode-highlight-styles"},".dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }"))}m.isMDXComponent=!0},260:function(e,a,t){"use strict";t.d(a,"d",function(){return j}),t.d(a,"b",function(){return O}),t.d(a,"c",function(){return N}),t.d(a,"g",function(){return h}),t.d(a,"e",function(){return u}),t.d(a,"f",function(){return f}),t.d(a,"a",function(){return k});var s=t(2),n=t(262),c=t.n(n),r=t(263),i=t.n(r),p=t(264),m=t.n(p),l=t(265),o=t.n(l);function b(){var e=g(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n            url('","') format('woff'),\n            url('","') format('truetype'),\n            url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n\n    @media (prefers-color-scheme: dark) {\n        html, body {\n            background-color: #2b2c2f;\n        }\n    }\n"]);return b=function(){return e},e}function d(){var e=g(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n             url('","') format('woff'),\n             url('","') format('truetype'),\n             url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n"]);return d=function(){return e},e}function g(e,a){return a||(a=e.slice(0)),e.raw=a,e}var j=Object(s.a)(d(),c.a,c.a,i.a,m.a,o.a),O=Object(s.a)(b(),c.a,c.a,i.a,m.a,o.a),N=s.c.div.withConfig({displayName:"default__Div",componentId:"d4l1a1-0"})([""]),h=(s.c.nav.withConfig({displayName:"default__Nav",componentId:"d4l1a1-1"})([""]),s.c.ul.withConfig({displayName:"default__UL",componentId:"d4l1a1-2"})(["margin:0;padding:0;"])),u=s.c.li.withConfig({displayName:"default__LI",componentId:"d4l1a1-3"})(["margin:0;padding:0;"]),f=s.c.p.withConfig({displayName:"default__P",componentId:"d4l1a1-4"})(["margin:0;padding:0;"]),k=s.c.a.withConfig({displayName:"default__A",componentId:"d4l1a1-5"})(["&,&:hover,&:focus{outline:none;color:inherit;text-decoration:none;}"])},262:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot"},263:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff"},264:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf"},265:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg"},266:function(e,a,t){"use strict";var s=t(0),n=t.n(s),c=t(260),r=t(65),i=t(2),p=t(270),m=t(271),l=i.c.nav.withConfig({displayName:"Nav__StyledNav",componentId:"sc-1cm9dpf-0"})(["display:flex;flex-direction:row;flex-wrap:wrap;padding:20px 60px;border-bottom:1px solid #ddd;@media all and (max-width:600px){padding:20px;}@media (prefers-color-scheme:dark){border-color:#777;}"]),o=i.c.div.withConfig({displayName:"Nav__Title",componentId:"sc-1cm9dpf-1"})(['flex:2;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:28px;font-display:swap;@media (prefers-color-scheme:dark){color:#fff;}']),b=Object(i.c)(c.g).withConfig({displayName:"Nav__NavLinks",componentId:"sc-1cm9dpf-2"})(["flex:10;display:flex;flex-direction:horizontal;flex-wrap:wrap;justify-content:flex-end;height:100%;align-self:center;"]),d=Object(i.c)(c.e).withConfig({displayName:"Nav__NavLink",componentId:"sc-1cm9dpf-3"})(['display:flex;flex-direction:vertical;align-items:center;text-align:center;font-family:"Bariol","Helvetica Neue","Helvetica",sans-serif;font-size:16px;padding:0px 20px;']),g=Object(i.c)(c.a).withConfig({displayName:"Nav__StyledA",componentId:"sc-1cm9dpf-4"})(["height:auto;color:",";display:flex;flex-direction:vertical;align-items:center;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{color:",";}"],r.a,r.b);a.a=function(e){return n.a.createElement(l,null,n.a.createElement(o,null,n.a.createElement(g,{href:e.blog?"/blog":"/"},"NOAH GILMORE")),n.a.createElement(b,null,n.a.createElement(d,null,n.a.createElement(g,{"aria-label":"Blog Home",href:"/blog"},n.a.createElement(p.b,{color:r.a,size:"24"}))),n.a.createElement(d,null,n.a.createElement(g,{"aria-label":"Twitter",href:"https://twitter.com/noahsark769"},n.a.createElement(m.a,{color:r.a,size:"24"}))),n.a.createElement(d,null,n.a.createElement(g,{"aria-label":"App Store",href:"https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8"},n.a.createElement(p.a,{color:r.a,size:"24"})))))}},267:function(e,a,t){"use strict";t.d(a,"a",function(){return i}),t.d(a,"b",function(){return o});var s=t(0),n=t.n(s),c=t(2),r=t(261);var i=c.c.div.withConfig({displayName:"BlogPost__BlogPostContainer",componentId:"gyfnna-0"})(["padding:60px 0;margin:0 auto;width:90%;@media all and (min-width:600px){max-width:700px;margin:auto;}@media all and (max-width:600px){width:100%;padding:20px 0;","}"],function(e){return e.darkened&&Object(c.b)(["background-color:#f6f6f6;@media (prefers-color-scheme:dark){background-color:inherit;}"])}),p=c.c.div.withConfig({displayName:"BlogPost__TitleContainer",componentId:"gyfnna-1"})(["width:100%;margin-bottom:40px;"]),m=c.c.h1.withConfig({displayName:"BlogPost__Heading",componentId:"gyfnna-2"})(['width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:34px;margin-bottom:10px;line-height:1.2em;@media (prefers-color-scheme:dark){color:#fff;}']),l=c.c.p.withConfig({displayName:"BlogPost__DateContainer",componentId:"gyfnna-3"})(['font-family:"Gentium Book Basic",times,serif;font-style:italic;font-size:16px;color:#999;']),o=function(e){return n.a.createElement("div",null,n.a.createElement(r.Helmet,null,n.a.createElement("title",null,e.title)),n.a.createElement(p,null,n.a.createElement(m,null,e.title),n.a.createElement(l,null,e.date)))};n.a.Component},268:function(e,a,t){"use strict";t.d(a,"a",function(){return r});var s=t(0),n=t.n(s);var c=t(2).c.div.withConfig({displayName:"MarkdownContent__Container",componentId:"zl3v0s-0"})(['p,li{margin:0;padding:0;font-family:"Gentium Book Basic",times,serif;font-size:21px;line-height:29px;color:#333;padding-bottom:15px;margin-top:15px;@media all and (max-width:600px){width:90%;margin:15px auto 0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}blockquote{background-color:#faf9f7;border-left:4px solid #e5e4e1;padding:20px;font-style:italic;@media (prefers-color-scheme:dark){background-color:#3f3f3f;}p{margin:0;padding:0;color:#555;@media (prefers-color-scheme:dark){color:#fff;}}}a{color:#1A3F4B;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;@media (prefers-color-scheme:dark){color:#60b5d1;}}a:hover{color:#47656E;@media (prefers-color-scheme:dark){color:#6bcfef;}}code{font-family:monospace;font-size:16px;padding:3px 5px;margin:0px 2px;@media (prefers-color-scheme:dark){color:#fff;}}code:not(.vscode-highlight-code){font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:first-child{margin-left:0;}pre{display:block;margin:0;padding:0;margin-top:10px;border:1px solid #e5e4e1;border-radius:2px;@media all and (max-width:600px){width:100%;margin:10px auto 0 auto;border-left:none;border-right:none;border-radius:0;overflow-x:scroll;}}pre > code{display:block;margin:0;padding:10px;font-family:monospace;font-size:14px;line-height:17px;white-space:pre-wrap;@media all and (max-width:600px){font-size:15px;white-space:pre;padding:15px 5% 15px 5%;width:100%;}}pre + p{margin-top:30px;}ol{margin-left:30px;@media all and (max-width:600px){width:90%;margin:0 auto 0 30px;}@media (prefers-color-scheme:dark){color:#fff;}}ol li{list-style-type:decimal;}ul li{list-style-type:square;margin-left:40px;@media all and (max-width:600px){width:90%;margin:0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1,h2,h3,h4,h5,h6{width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;margin-bottom:10px;margin-top:40px;@media all and (max-width:600px){width:90%;margin:40px auto 10px auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1{font-size:28px;}h2{font-size:24px;}h3{font-size:20px;}em{font-style:italic;}strong{font-weight:bold;}']),r=function(e){var a,t;function s(){return e.apply(this,arguments)||this}return t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t,s.prototype.render=function(){return n.a.createElement(c,null,this.props.children)},s}(n.a.Component)},269:function(e,a,t){"use strict";function s(e){return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}t.d(a,"a",function(){return s})},272:function(e,a,t){"use strict";t(114);var s=t(0),n=t.n(s),c=t(261),r=t(260),i=t(266),p=t(2),m=t(270),l=t(271),o=t(65);var b=p.c.div.withConfig({displayName:"EndButtons__Container",componentId:"sc-2ta1su-0"})(["width:100%;display:flex;flex-direction:horizontal;align-items:center;justify-content:center;margin-top:40px;"]),d=p.c.div.withConfig({displayName:"EndButtons__ButtonStyle",componentId:"sc-2ta1su-1"})(["background-color:",";-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{background-color:",";}width:100px;padding:10px 20px;text-align:center;display:flex;flex-direction:vertical;align-items:center;justify-content:center;border-radius:4px;",";"],o.a,o.b,function(e){return e.margin&&Object(p.b)(["margin-right:20px;"])}),g=function(e){return n.a.createElement(r.a,{href:e.url,target:e.newTab?"_blank":null,"aria-label":e.label},n.a.createElement(d,{margin:e.margin},e.children))},j=function(e){var a,t;function s(){return e.apply(this,arguments)||this}return t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t,s.prototype.render=function(){var e,a=(e="Post by @noahsark769: "+this.props.tweetTitle+" "+this.props.tweetUrl,"https://twitter.com/intent/tweet?text="+encodeURIComponent(e));return n.a.createElement(b,null,n.a.createElement(g,{label:"Twitter",url:a,newTab:!0,margin:!0},n.a.createElement(l.a,{size:24,color:"white"})),n.a.createElement(g,{label:"Blog homepage",url:"/blog"},n.a.createElement(m.b,{size:24,color:"white"})))},s}(n.a.Component),O=t(267),N=t(268),h=t(269);var u=p.c.div.withConfig({displayName:"Disqus__Wrapper",componentId:"sc-1jjeqqj-0"})(["margin-top:80px;"]),f=function(e){var a,t;function s(){return e.apply(this,arguments)||this}t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t;var c=s.prototype;return c.render=function(){return n.a.createElement(u,null,n.a.createElement("div",{id:"disqus_thread"}))},c.componentDidMount=function(){var e,a;e=document,(a=e.createElement("script")).src="//noahgilmore-com.disqus.com/embed.js",a.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(a)},s}(n.a.Component),k=t(115),v=t.n(k);t.d(a,"a",function(){return w});var y=p.c.div.withConfig({displayName:"BlogPageLayout__Container",componentId:"sc-118ribu-0"})(["@media (prefers-color-scheme:dark){background-color:#2b2c2f;}"]),x=p.c.div.withConfig({displayName:"BlogPageLayout__NonContent",componentId:"sc-118ribu-1"})(["@media all and (max-width:600px){padding-right:5%;padding-left:5%;}"]),w=function(e){var a,t;function s(){return e.apply(this,arguments)||this}t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t;var p=s.prototype;return p.render=function(){var e="undefined"!=typeof window&&window.matchMedia("(prefers-color-scheme: dark)").matches;return n.a.createElement(y,null,n.a.createElement(r.b,null),n.a.createElement(c.Helmet,null,n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Roboto:700",rel:"stylesheet",type:"text/css"}),n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Gentium+Book+Basic",rel:"stylesheet"}),!e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/atom-one-light.min.css"}),e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/zenburn.min.css"}),n.a.createElement("meta",{name:"twitter:card",content:"summary"}),n.a.createElement("meta",{name:"twitter:creator",content:"@noahsark769"}),n.a.createElement("meta",{property:"og:url",content:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement("meta",{property:"og:title",content:this.props.pageContext.frontmatter.title}),n.a.createElement("meta",{property:"og:description",content:this.props.pageContext.frontmatter.staticPreview}),n.a.createElement("meta",{name:"description",content:this.props.pageContext.frontmatter.staticPreview})),n.a.createElement(i.a,{blog:!0}),n.a.createElement(O.a,null,n.a.createElement(x,null,n.a.createElement(O.b,{title:this.props.pageContext.frontmatter.title,date:Object(h.a)(this.props.pageContext.frontmatter.date)})),n.a.createElement(N.a,null,this.props.children),n.a.createElement(x,null,n.a.createElement(j,{tweetTitle:this.props.pageContext.frontmatter.title,tweetUrl:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement(f,null))))},p.componentDidMount=function(){v.a.initialize("UA-35325391-1"),v.a.pageview(window.location.pathname+window.location.search)},s}(n.a.Component)}}]);
//# sourceMappingURL=component---src-pages-blog-pyparsing-trees-mdx-356526c565cbba29a481.js.map