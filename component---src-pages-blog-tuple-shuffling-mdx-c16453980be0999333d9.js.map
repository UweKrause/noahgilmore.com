{"version":3,"sources":["webpack:///./src/pages/blog/tuple-shuffling.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-blog-tuple-shuffling-mdx-c16453980be0999333d9.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/noahgilmore.com/noahgilmore.com/src/components/BlogPageLayout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Whenever a new major version of Xcode is released, one of the first things I do is download it and run it with the various codebases I'm working on. Usually the new version of Swift is smarter and can surface more warnings and diagnostics, and the Xcode 12 beta release earlier this week (with Swift 5.3) is no exception.`}</p>\n    <p>{`However, there was one new warning message the confused me:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`expression shuffles the elements of this tuple; this behavior is deprecated`}</p>\n    </blockquote>\n    <p>{`tl;dr: If you see this message it probably means you're passing a tuple to a method with the named elements in the wrong order, e.g.:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`func`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`myMethod`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`tuple`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: (a: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, b: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)) {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`print`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(tuple)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`myMethod`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`tuple`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: (`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`b`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`a`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)) `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk3\"\n          }}>{`// should be myMethod(tuple: (a: 2, b: 1))`}</span></span></code></pre>\n    <h1 {...{\n      \"id\": \"tuple-shuffling\"\n    }}>{`Tuple Shuffling`}</h1>\n    <p>{`Tuple Shuffling is a deprecated feature of Swift which basically amounts to \"you can switch the order of named tuple elements during assignment\". If you declare a tuple with named elements in a certain order, you don't have to pass them in the same order.`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`func`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`myMethod`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`tuple`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: (a: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, b: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)) {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`print`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(tuple)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk3\"\n          }}>{`// This is perfectly legal, even though b comes before a`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`myMethod`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`tuple`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: (`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`b`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`a`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`))`}</span></span></code></pre>\n    <p>{`However, Tuple Shuffling is generally something that you shouldn't do, because it can have subtle and confusing side effects. For example, consider the following code:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`var`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` a: (`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`y`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) = (`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`var`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` b: (`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`y`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Int`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`) = (`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk7\"\n          }}>{`2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`a = b`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`print`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(a == b) `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk3\"\n          }}>{`// prints \"false\"`}</span></span></code></pre>\n    <p>{`This is also perfectly legal code, but it's weird that the two tuples aren't equal, even after you assigned one to the other!`}</p>\n    <p>{`This example works because `}<inlineCode parentName=\"p\">{`a = b`}</inlineCode>{` does an implicit Tuple Shuffle - the `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{`th element of `}<inlineCode parentName=\"p\">{`b`}</inlineCode>{` is assigned to the `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{`th element of `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{`, and the first non-named element of `}<inlineCode parentName=\"p\">{`b`}</inlineCode>{` is assigned to the first non-named element of `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{`. Because `}<inlineCode parentName=\"p\">{`a.y`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`b.y`}</inlineCode>{` were already the same and the first non-named element of each tuple (`}<inlineCode parentName=\"p\">{`a.0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`b.1`}</inlineCode>{`) was also the same, the assignment is effectively a no-op.`}</p>\n    <p>{`The standard library implementation of `}<inlineCode parentName=\"p\">{`==`}</inlineCode>{` for tuples compares them index-wise (it's equivalent to `}<inlineCode parentName=\"p\">{`a.0 == b.0 && a.1 == b.1`}</inlineCode>{` in this case), and these tuples were never index-wise equal, so `}<inlineCode parentName=\"p\">{`a == b`}</inlineCode>{` returns false.`}</p>\n    <p>{`As `}<a parentName=\"p\" {...{\n        \"href\": \"https://forums.swift.org/t/deprecating-tuple-shuffles-round-2/16884\"\n      }}>{`the folks who proposed the Tuple Shuffling deprecation in the forums said`}</a>{`, Tuple Shuffling allows inconsistencies between how Swift works as a language and how the standard library methods work.`}</p>\n    <h1 {...{\n      \"id\": \"fixing-the-warning\"\n    }}>{`Fixing the warning`}</h1>\n    <p>{`The proposal to deprecate Tuple Shuffling has been around since 2018 - it appears that in Swift 5.3, the warning against shuffling is finally there.`}</p>\n    <p>{`The usually warning comes up in practice when you try to pass a tuple of the form `}<inlineCode parentName=\"p\">{`(a: 1, b: 1)`}</inlineCode>{` to an argument that expects a different ordering of names (`}<inlineCode parentName=\"p\">{`(b: Int, a: Int)`}</inlineCode>{`). The fix for this is almost always to pass your named tuple elements in the order they're defined (`}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` first, then `}<inlineCode parentName=\"p\">{`b`}</inlineCode>{`).`}</p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  \n  .dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }\n`}</style>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}