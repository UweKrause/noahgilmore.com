(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{xTaF:function(e,a,s){"use strict";s.r(a),s.d(a,"_frontmatter",(function(){return p})),s.d(a,"default",(function(){return i}));s("rGqo"),s("yt8O"),s("Btvt"),s("RW0V"),s("91GP"),s("q1tI");var t=s("E/Ix"),n=s("1zrH"),c=s("Qjvx");s("D+Sk");var p={},b={_frontmatter:p},m=n.a;function i(e){var a=e.components,s=function(e,a){if(null==e)return{};var s,t,n={},c=Object.keys(e);for(t=0;t<c.length;t++)s=c[t],a.indexOf(s)>=0||(n[s]=e[s]);return n}(e,["components"]);return Object(t.b)(m,Object.assign({},b,s,{components:a,mdxType:"MDXLayout"}),Object(t.b)("p",null,"In this post we'll look at a very specific but tricky interaction in UIKit, one which took me multiple days to work out how to implement."),Object(t.b)("p",null,"It's two view controllers of different sizes, pushed on a ",Object(t.b)("inlineCode",{parentName:"p"},"UINavigationController"),", which is presented as a popover. The interaction has a few unique qualities:"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"The view controllers have different sizes (defined by autolayout)"),Object(t.b)("li",{parentName:"ol"},"Only one of them displays a nav bar"),Object(t.b)("li",{parentName:"ol"},"The popover animates when their autolayout-defined sizes change"),Object(t.b)("li",{parentName:"ol"},"Including when they get pushed onto the nav stack, where the resize animation happens at the same time as the push animation")),Object(t.b)(c.a,{max:500,filename:"popover-finished.gif",alt:"Finished presentation of UIViewControllers with different content sizes inside a popover",caption:"",mdxType:"CaptionedImage"}),Object(t.b)("p",null,"Surprisingly this is very tricky to implement in UIKit, and it ties together a lot of concepts that I wasn't really familiar with until I ran into this case."),Object(t.b)("blockquote",null,Object(t.b)("p",{parentName:"blockquote"},"The finished code for this interaction is available at ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/NGPopoverForceResizeTest"}),"NGPopoverForceResizeTest"),". There's also a summary at the bottom of this post.")),Object(t.b)("h1",{id:"motivation"},"Motivation"),Object(t.b)("p",null,"At work, we do a fair amount of presenting view controllers as popovers to add context or more data to our existing iPad view. A common flow is the following:"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"Present a small popover to add more context to something the user tapped."),Object(t.b)("li",{parentName:"ol"},"When the user taps on a button in that popover, push on a new view controller with more information.")),Object(t.b)("p",null,"UIKit provides the building blocks for this out of the box, but the kicker is when ",Object(t.b)("em",{parentName:"p"},"the two view controllers are different sizes"),"."),Object(t.b)("p",null,"Let's assume we have two view controllers to present: one 300x300 with a red background and no navigation bar content, and one 600x400 with a green background and a nav bar title. Here's what we want them to look like:"),Object(t.b)(c.a,{max:300,filename:"red-controller.png",alt:"Red view controller",caption:"SmallViewControllerNoNavBar",mdxType:"CaptionedImage"}),Object(t.b)(c.a,{max:500,filename:"green-controller.png",alt:"Green view controller",caption:"LargeViewControllerWithNavBar",mdxType:"CaptionedImage"}),Object(t.b)("h1",{id:"preferredcontentsize"},"preferredContentSize"),Object(t.b)("p",null,"Let's start with the red controller."),Object(t.b)("p",null,"Setting up the width and height is doable with autolayout:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"widthAnchor"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"constraint"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"equalToConstant"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"300")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isActive"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"heightAnchor"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"constraint"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"equalToConstant"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"300")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isActive"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"We'll set the navigation bar hidden in ",Object(t.b)("inlineCode",{parentName:"p"},"viewWillAppear"),":"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"_"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"animated"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(animated)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"navigationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"?."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setNavigationBarHidden"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"animated"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"false"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"And, from the main controller, present our red view as a popover:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," containerController = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"UINavigationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": firstVC)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"containerController."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"modalPresentationStyle"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popover")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ... set the sourceView, sourceRect, etc")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"present"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(containerController, "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"animated"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(t.b)("p",null,"Unfortunately, this doesn't exactly produce the effect we're going for:"),Object(t.b)(c.a,{max:500,filename:"red-controller-1.png",alt:"Red view controller displaying in a popover with the wrong height and width",caption:"Interesting",mdxType:"CaptionedImage"}),Object(t.b)("h2",{id:"preferredcontentsize--autolayout"},"preferredContentSize + autolayout"),Object(t.b)("p",null,"Our red view controller doesn't have the right size because when ",Object(t.b)("inlineCode",{parentName:"p"},"UIViewController"),"s are presented as popovers, the popover's size is ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/uikit/uiviewcontroller/1621476-preferredcontentsize"}),"determined by the controller's ",Object(t.b)("inlineCode",{parentName:"a"},"preferredContentSize")),". Since we haven't set ",Object(t.b)("inlineCode",{parentName:"p"},"self.preferredContentSize")," in our controller, the system uses the default: on iOS 12 with a 12.9 inch iPad, this is 375x636 points."),Object(t.b)("p",null,"To fix this, we have to trigger a layout pass to determine our autolayout-defined size, and we can set that as our preferred size, as many posts online ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://useyourloaf.com/blog/self-sizing-child-views/"}),"have")," ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://stackoverflow.com/questions/29128271/autolayout-and-uipopovercontroller"}),"detailed"),":"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"_"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"animated"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"Assuming we've implemented the same thing in our green view controller (with different height and width), we now get our controllers displaying their correct sizes! "),Object(t.b)("p",null,"Unfortunately, the animation is a little weird - our green controller starts out 300x300, ",Object(t.b)("em",{parentName:"p"},"then")," transitions to 600x400:"),Object(t.b)(c.a,{max:500,filename:"popover-animation-1.gif",alt:"Red view controller with the right size, pushing on a green view controller, whose size starts the same as the red controller but expands when finished pushing.",caption:"Also interesting",mdxType:"CaptionedImage"}),Object(t.b)("h1",{id:"uinavigationcontroller-animations"},"UINavigationController animations"),Object(t.b)("p",null,"Apparently, ",Object(t.b)("inlineCode",{parentName:"p"},"UINavigationController")," queues the animations for pushing on a new view controller and setting its own ",Object(t.b)("inlineCode",{parentName:"p"},"preferredContentSize")," based on the controller being pushed, so the push animation and the resize animation happen in series. Ideally, we'd like these animations to happen simultaneously."),Object(t.b)("p",null,"After quite a bit of spelunking online, I realized that ",Object(t.b)("inlineCode",{parentName:"p"},"UINavigationController")," just doesn't support this use case. However, I stumbled across ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/fatuhoku/Resize-Popover-with-embedded-UINavigationController"}),"this example")," by ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"http://hokshunpoon.me/"}),"Hok Shun Poon"),", which noted that you can get the resize to happen at the same time if you encapsulate the ",Object(t.b)("inlineCode",{parentName:"p"},"UINavigationController")," in a parent view controller!"),Object(t.b)("p",null,"The flow looks like this:"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"We have a parent ",Object(t.b)("inlineCode",{parentName:"li"},"UIViewController")," ",Object(t.b)("a",Object.assign({parentName:"li"},{href:"https://useyourloaf.com/blog/container-view-controllers/"}),"wrapping")," our ",Object(t.b)("inlineCode",{parentName:"li"},"UINavigationController"),"."),Object(t.b)("li",{parentName:"ol"},"When the new controller appears, we'll set the wrapper view controller's ",Object(t.b)("inlineCode",{parentName:"li"},"preferredContentSize")," to mirror the child's ",Object(t.b)("inlineCode",{parentName:"li"},"preferredContentSize")," using ",Object(t.b)("inlineCode",{parentName:"li"},"popoverPresentationController"),".")),Object(t.b)("h2",{id:"wrapping-the-nav-controller"},"Wrapping the nav controller"),Object(t.b)("p",null,"Our wrapper controller looks like this:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"final"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"PopoverPushController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," wrappedNavigationController: PopoverPushNavigationController")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController) {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"wrappedNavigationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"PopoverPushNavigationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": rootViewController")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        )")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"nibName"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"bundle"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"wrappedNavigationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"delegate"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        wrappedNavigationController."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"willMove"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"toParent"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addChild"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addSubview"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"When our container controller's view loads, we add the navigation controller's view as a subview, after using ",Object(t.b)("inlineCode",{parentName:"p"},"willMove(toParent:)")," and ",Object(t.b)("inlineCode",{parentName:"p"},"addChild()")," to ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/uikit/uiviewcontroller/1621381-willmove"}),"add the navigation controller as a child view controller"),"."),Object(t.b)("p",null,"We also need the implementation of ",Object(t.b)("inlineCode",{parentName:"p"},"viewWillAppear")," to set the wrapper controller's content size. Luckily we can access the wrapper controller using ",Object(t.b)("inlineCode",{parentName:"p"},"popoverPresentationController"),"'s ",Object(t.b)("inlineCode",{parentName:"p"},"presentedViewController"),", even though it's two levels up:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"_"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"animated"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," contentSize = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popoverPresentationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"?")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"presentedViewController")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"And finally, we'll change our presentation code to present the ",Object(t.b)("inlineCode",{parentName:"p"},"PopoverPushController")," wrapper instead of the regular navigation controller:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," containerController = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"PopoverPushController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": firstVC)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"containerController."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"modalPresentationStyle"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popover")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ... set the sourceView, sourceRect, etc")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"present"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(containerController, "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"animated"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(t.b)("p",null,"No we have the simultaneous animation we want!"),Object(t.b)(c.a,{max:500,filename:"popover-animation-2.gif",alt:"Red view controller transitioning to green view controller with size animating at the same time as the push animation.",caption:"🎉",mdxType:"CaptionedImage"}),Object(t.b)("h2",{id:"updating-the-size"},"Updating the size"),Object(t.b)("p",null,"Everything's well and good now, so we can implement the last part of the interaction: resizing the green controller on button tap. Our code isn't particularly complicated, but we'll use the same autolayout technique from the red controller:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setPreferredContentSizeFromAutolayout"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"var"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," isExpanded: "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"false"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"didSet"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," constant = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isExpanded"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," ? "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"600"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," : "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"400")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"heightConstraint"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"constant"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = constant")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setPreferredContentSizeFromAutolayout"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"@objc"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"didTap"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isExpanded"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = !"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isExpanded")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"But now we've got a new problem: the popover size doesn't animate!"),Object(t.b)(c.a,{max:500,filename:"popover-animation-3.gif",alt:"Green view controller updating height, but without animation.",caption:"We were expecting a smooth animation",mdxType:"CaptionedImage"}),Object(t.b)("h2",{id:"informing-the-presented-view-controller"},"Informing the presented view controller"),Object(t.b)("p",null,"The issue we have here is that our green view controller is changing its ",Object(t.b)("inlineCode",{parentName:"p"},"preferredContentSize"),", but ",Object(t.b)("em",{parentName:"p"},"the popover view controller doesn't know it changed"),". We'll use the same technique that we used for setting the popover view controller's content size when the green view initially appeared (using ",Object(t.b)("inlineCode",{parentName:"p"},"popoverPresentationController"),"):"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setPreferredContentSizeFromAutolayout"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," contentSize = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popoverPresentationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"?")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"presentedViewController")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("p",null,"Now our interaction finally works as expected!"),Object(t.b)(c.a,{max:500,filename:"popover-finished.gif",alt:"Finished presentation of UIViewControllers with different content sizes inside a popover",caption:"🎉🎉",mdxType:"CaptionedImage"}),Object(t.b)("h1",{id:"conclusion"},"Conclusion"),Object(t.b)("p",null,"Hopefully this was a helpful look into the world of ",Object(t.b)("inlineCode",{parentName:"p"},"preferredContentSize"),", view controller wrapping, and UIKit popovers. Here's a tl;dr:"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"To define the size of your popover with autolayout, set ",Object(t.b)("inlineCode",{parentName:"li"},"preferredContentSize")," to the result of ",Object(t.b)("inlineCode",{parentName:"li"},"systemLayoutSizeFitting")),Object(t.b)("li",{parentName:"ol"},"To animate popover size updates at the same time as navigation controller animations, wrap your ",Object(t.b)("inlineCode",{parentName:"li"},"UINavigationController")," in a ",Object(t.b)("inlineCode",{parentName:"li"},"PopoverPushController")," (see code below)"),Object(t.b)("li",{parentName:"ol"},"When you change your controller's ",Object(t.b)("inlineCode",{parentName:"li"},"preferredContentSize"),", be sure to change the ",Object(t.b)("inlineCode",{parentName:"li"},"preferredContentSize")," of your controller's ",Object(t.b)("inlineCode",{parentName:"li"},"popoverPresentationController"),"'s ",Object(t.b)("inlineCode",{parentName:"li"},"presentedViewController")," as well")),Object(t.b)("p",null,"Though this solution takes some time to explain, I think it ends up being pretty clean:"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"No ",Object(t.b)("inlineCode",{parentName:"li"},"UINavigationController")," subclass 🎉"),Object(t.b)("li",{parentName:"ol"},"No need to implement ",Object(t.b)("inlineCode",{parentName:"li"},"UINavigationControllerDelegate")," - you can even modify ",Object(t.b)("inlineCode",{parentName:"li"},"PopoverPushController")," to accept your own navigation controller, along with your own delegate 😮"),Object(t.b)("li",{parentName:"ol"},"No need to set ",Object(t.b)("inlineCode",{parentName:"li"},"preferredContentSize")," except when the size actually changes ✅"),Object(t.b)("li",{parentName:"ol"},"If you make the width and height constraints have ",Object(t.b)("inlineCode",{parentName:"li"},"priority = .defaultHigh"),", no unsatisfiable constraint warnings clogging your logs 💪")),Object(t.b)("p",null,"With more plumbing, it's possible to implement the same interaction without having to call into ",Object(t.b)("inlineCode",{parentName:"p"},"self.popoverPresentationController")," - you can have a ",Object(t.b)("inlineCode",{parentName:"p"},"UINavigationController")," subclass implement ",Object(t.b)("inlineCode",{parentName:"p"},"preferredContentSizeWillChange"),", and have it set the navgation controller's content size, which will be intercepted by ",Object(t.b)("inlineCode",{parentName:"p"},"PopoverPushController"),"'s ",Object(t.b)("inlineCode",{parentName:"p"},"preferredContentSizeWillChange"),". You can also provide a ",Object(t.b)("inlineCode",{parentName:"p"},"UINavigationControllerDelegate")," to avoid setting the popover controller's content size in ",Object(t.b)("inlineCode",{parentName:"p"},"viewWillAppear"),"."),Object(t.b)("p",null,"Ultimately though, it's better to do whatever feels more workable for your use case. I prefer using the ",Object(t.b)("inlineCode",{parentName:"p"},"popoverPresentationController")," because it feels cleaner to me, but if you think differently, ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769"}),"let me know"),"."),Object(t.b)("h2",{id:"code"},"Code"),Object(t.b)("p",null,"All the code is available at ",Object(t.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/NGPopoverForceResizeTest"}),"NGPopoverForceResizeTest"),"."),Object(t.b)("p",null,"Here's the full implementation of the nav controller wrapper:"),Object(t.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(t.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"final"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"PopoverPushController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," wrappedNavigationController: UINavigationController")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController) {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"wrappedNavigationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"UINavigationController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": rootViewController)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"nibName"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"bundle"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"required"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init?"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"coder"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"aDecoder"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": NSCoder) {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"fatalError"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"init(coder:) has not been implemented"'),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        wrappedNavigationController."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"willMove"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"toParent"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addChild"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController)")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addSubview"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController."),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(t.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(t.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(t.b)("style",{className:"vscode-highlight-styles"},"\n  \n  .dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }\n"))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-blog-popover-uinavigationcontroller-preferredcontentsize-mdx-c19306df7bd24ddefe98.js.map