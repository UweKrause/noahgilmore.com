(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{239:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",function(){return p}),t.d(a,"default",function(){return b});t(8),t(12),t(4),t(16),t(21),t(0);var s=t(79),n=t(266),c=t(26);t(67);var p={},i={_frontmatter:p},m=n.a;function b(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,s,n={},c=Object.keys(e);for(s=0;s<c.length;s++)t=c[s],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,["components"]);return Object(s.b)(m,Object.assign({},i,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,"In this post we'll look at a very specific but tricky interaction in UIKit, one which took me multiple days to work out how to implement."),Object(s.b)("p",null,"It's two view controllers of different sizes, pushed on a ",Object(s.b)("inlineCode",{parentName:"p"},"UINavigationController"),", which is presented as a popover. The interaction has a few unique qualities:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"The view controllers have different sizes (defined by autolayout)"),Object(s.b)("li",{parentName:"ol"},"Only one of them displays a nav bar"),Object(s.b)("li",{parentName:"ol"},"The popover animates when their autolayout-defined sizes change"),Object(s.b)("li",{parentName:"ol"},"Including when they get pushed onto the nav stack, where the resize animation happens at the same time as the push animation")),Object(s.b)(c.a,{max:500,filename:"popover-finished.gif",alt:"Finished presentation of UIViewControllers with different content sizes inside a popover",caption:"",mdxType:"CaptionedImage"}),Object(s.b)("p",null,"Surprisingly this is very tricky to implement in UIKit, and it ties together a lot of concepts that I wasn't really familiar with until I ran into this case."),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"The finished code for this interaction is available at ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/NGPopoverForceResizeTest"}),"NGPopoverForceResizeTest"),". There's also a summary at the bottom of this post.")),Object(s.b)("h1",null,"Motivation"),Object(s.b)("p",null,"At work, we do a fair amount of presenting view controllers as popovers to add context or more data to our existing iPad view. A common flow is the following:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Present a small popover to add more context to something the user tapped."),Object(s.b)("li",{parentName:"ol"},"When the user taps on a button in that popover, push on a new view controller with more information.")),Object(s.b)("p",null,"UIKit provides the building blocks for this out of the box, but the kicker is when ",Object(s.b)("em",{parentName:"p"},"the two view controllers are different sizes"),"."),Object(s.b)("p",null,"Let's assume we have two view controllers to present: one 300x300 with a red background and no navigation bar content, and one 600x400 with a green background and a nav bar title. Here's what we want them to look like:"),Object(s.b)(c.a,{max:300,filename:"red-controller.png",alt:"Red view controller",caption:"SmallViewControllerNoNavBar",mdxType:"CaptionedImage"}),Object(s.b)(c.a,{max:500,filename:"green-controller.png",alt:"Green view controller",caption:"LargeViewControllerWithNavBar",mdxType:"CaptionedImage"}),Object(s.b)("h1",null,"preferredContentSize"),Object(s.b)("p",null,"Let's start with the red controller."),Object(s.b)("p",null,"Setting up the width and height is doable with autolayout:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"widthAnchor"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"constraint"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"equalToConstant"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"300")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isActive"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"heightAnchor"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"constraint"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"equalToConstant"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"300")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isActive"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("p",null,"We'll set the navigation bar hidden in ",Object(s.b)("inlineCode",{parentName:"p"},"viewWillAppear"),":"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"_"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"animated"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(animated)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"navigationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"?."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setNavigationBarHidden"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"animated"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"false"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("p",null,"And, from the main controller, present our red view as a popover:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," containerController = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"UINavigationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": firstVC)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"containerController."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"modalPresentationStyle"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = ."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popover")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ... set the sourceView, sourceRect, etc")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"present"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(containerController, "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"animated"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(s.b)("p",null,"Unfortunately, this doesn't exactly produce the effect we're going for:"),Object(s.b)(c.a,{max:500,filename:"red-controller-1.png",alt:"Red view controller displaying in a popover with the wrong height and width",caption:"Interesting",mdxType:"CaptionedImage"}),Object(s.b)("h2",null,"preferredContentSize + autolayout"),Object(s.b)("p",null,"Our red view controller doesn't have the right size because when ",Object(s.b)("inlineCode",{parentName:"p"},"UIViewController"),"s are presented as popovers, the popover's size is ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/uikit/uiviewcontroller/1621476-preferredcontentsize"}),"determined by the controller's ",Object(s.b)("inlineCode",{parentName:"a"},"preferredContentSize")),". Since we haven't set ",Object(s.b)("inlineCode",{parentName:"p"},"self.preferredContentSize")," in our controller, the system uses the default: on iOS 12 with a 12.9 inch iPad, this is 375x636 points."),Object(s.b)("p",null,"To fix this, we have to trigger a layout pass to determine our autolayout-defined size, and we can set that as our preferred size, as many posts online ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://useyourloaf.com/blog/self-sizing-child-views/"}),"have")," ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://stackoverflow.com/questions/29128271/autolayout-and-uipopovercontroller"}),"detailed"),":"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"_"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"animated"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("p",null,"Assuming we've implemented the same thing in our green view controller (with different height and width), we now get our controllers displaying their correct sizes! "),Object(s.b)("p",null,"Unfortunately, the animation is a little weird - our green controller starts out 300x300, ",Object(s.b)("em",{parentName:"p"},"then")," transitions to 600x400:"),Object(s.b)(c.a,{max:500,filename:"popover-animation-1.gif",alt:"Red view controller with the right size, pushing on a green view controller, whose size starts the same as the red controller but expands when finished pushing.",caption:"Also interesting",mdxType:"CaptionedImage"}),Object(s.b)("h1",null,"UINavigationController animations"),Object(s.b)("p",null,"Apparently, ",Object(s.b)("inlineCode",{parentName:"p"},"UINavigationController")," queues the animations for pushing on a new view controller and setting its own ",Object(s.b)("inlineCode",{parentName:"p"},"preferredContentSize")," based on the controller being pushed, so the push animation and the resize animation happen in series. Ideally, we'd like these animations to happen simultaneously."),Object(s.b)("p",null,"After quite a bit of spelunking online, I realized that ",Object(s.b)("inlineCode",{parentName:"p"},"UINavigationController")," just doesn't support this use case. However, I stumbled across ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/fatuhoku/Resize-Popover-with-embedded-UINavigationController"}),"this example")," by ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"http://hokshunpoon.me/"}),"Hok Shun Poon"),", which noted that you can get the resize to happen at the same time if you encapsulate the ",Object(s.b)("inlineCode",{parentName:"p"},"UINavigationController")," in a parent view controller!"),Object(s.b)("p",null,"The flow looks like this:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"We have a parent ",Object(s.b)("inlineCode",{parentName:"li"},"UIViewController")," ",Object(s.b)("a",Object.assign({parentName:"li"},{href:"https://useyourloaf.com/blog/container-view-controllers/"}),"wrapping")," our ",Object(s.b)("inlineCode",{parentName:"li"},"UINavigationController"),"."),Object(s.b)("li",{parentName:"ol"},"When the new controller appears, we'll set the wrapper view controller's ",Object(s.b)("inlineCode",{parentName:"li"},"preferredContentSize")," to mirror the child's ",Object(s.b)("inlineCode",{parentName:"li"},"preferredContentSize")," using ",Object(s.b)("inlineCode",{parentName:"li"},"popoverPresentationController"),".")),Object(s.b)("h2",null,"Wrapping the nav controller"),Object(s.b)("p",null,"Our wrapper controller looks like this:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"final"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"PopoverPushController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," wrappedNavigationController: PopoverPushNavigationController")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController) {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"wrappedNavigationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"PopoverPushNavigationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": rootViewController")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        )")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"nibName"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"bundle"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"wrappedNavigationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"delegate"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        wrappedNavigationController."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"willMove"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"toParent"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addChild"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addSubview"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("p",null,"When our container controller's view loads, we add the navigation controller's view as a subview, after using ",Object(s.b)("inlineCode",{parentName:"p"},"willMove(toParent:)")," and ",Object(s.b)("inlineCode",{parentName:"p"},"addChild()")," to ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/uikit/uiviewcontroller/1621381-willmove"}),"add the navigation controller as a child view controller"),"."),Object(s.b)("p",null,"We also need the implementation of ",Object(s.b)("inlineCode",{parentName:"p"},"viewWillAppear")," to set the wrapper controller's content size. Luckily we can access the wrapper controller using ",Object(s.b)("inlineCode",{parentName:"p"},"popoverPresentationController"),"'s ",Object(s.b)("inlineCode",{parentName:"p"},"presentedViewController"),", even though it's two levels up:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewWillAppear"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"_"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"animated"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),") {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ...")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," contentSize = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popoverPresentationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"?")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"presentedViewController")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("p",null,"And finally, we'll change our presentation code to present the ",Object(s.b)("inlineCode",{parentName:"p"},"PopoverPushController")," wrapper instead of the regular navigation controller:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," containerController = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"PopoverPushController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": firstVC)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"containerController."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"modalPresentationStyle"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = ."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popover")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk3"}),"// ... set the sourceView, sourceRect, etc")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"present"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(containerController, "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"animated"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"true"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")))),Object(s.b)("p",null,"No we have the simultaneous animation we want!"),Object(s.b)(c.a,{max:500,filename:"popover-animation-2.gif",alt:"Red view controller transitioning to green view controller with size animating at the same time as the push animation.",caption:"🎉",mdxType:"CaptionedImage"}),Object(s.b)("h2",null,"Updating the size"),Object(s.b)("p",null,"Everything's well and good now, so we can implement the last part of the interaction: resizing the green controller on button tap. Our code isn't particularly complicated, but we'll use the same autolayout technique from the red controller:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setPreferredContentSizeFromAutolayout"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"var"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," isExpanded: "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"Bool"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"false"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"didSet"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," constant = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isExpanded"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," ? "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"600"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," : "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"400")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"heightConstraint"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"constant"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = constant")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setPreferredContentSizeFromAutolayout"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"@objc"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"didTap"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isExpanded"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = !"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"isExpanded")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("p",null,"But now we've got a new problem: the popover size doesn't animate!"),Object(s.b)(c.a,{max:500,filename:"popover-animation-3.gif",alt:"Green view controller updating height, but without animation.",caption:"We were expecting a smooth animation",mdxType:"CaptionedImage"}),Object(s.b)("h2",null,"Informing the presented view controller"),Object(s.b)("p",null,"The issue we have here is that our green view controller is changing its ",Object(s.b)("inlineCode",{parentName:"p"},"preferredContentSize"),", but ",Object(s.b)("em",{parentName:"p"},"the popover view controller doesn't know it changed"),". We'll use the same technique that we used for setting the popover view controller's content size when the green view initially appeared (using ",Object(s.b)("inlineCode",{parentName:"p"},"popoverPresentationController"),"):"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setPreferredContentSizeFromAutolayout"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," contentSize = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"systemLayoutSizeFitting"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        UIView."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"layoutFittingCompressedSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    )")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"popoverPresentationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"?")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"presentedViewController")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        ."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"preferredContentSize"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = contentSize")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("p",null,"Now our interaction finally works as expected!"),Object(s.b)(c.a,{max:500,filename:"popover-finished.gif",alt:"Finished presentation of UIViewControllers with different content sizes inside a popover",caption:"🎉🎉",mdxType:"CaptionedImage"}),Object(s.b)("h1",null,"Conclusion"),Object(s.b)("p",null,"Hopefully this was a helpful look into the world of ",Object(s.b)("inlineCode",{parentName:"p"},"preferredContentSize"),", view controller wrapping, and UIKit popovers. Here's a tl;dr:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"To define the size of your popover with autolayout, set ",Object(s.b)("inlineCode",{parentName:"li"},"preferredContentSize")," to the result of ",Object(s.b)("inlineCode",{parentName:"li"},"systemLayoutSizeFitting")),Object(s.b)("li",{parentName:"ol"},"To animate popover size updates at the same time as navigation controller animations, wrap your ",Object(s.b)("inlineCode",{parentName:"li"},"UINavigationController")," in a ",Object(s.b)("inlineCode",{parentName:"li"},"PopoverPushController")," (see code below)"),Object(s.b)("li",{parentName:"ol"},"When you change your controller's ",Object(s.b)("inlineCode",{parentName:"li"},"preferredContentSize"),", be sure to change the ",Object(s.b)("inlineCode",{parentName:"li"},"preferredContentSize")," of your controller's ",Object(s.b)("inlineCode",{parentName:"li"},"popoverPresentationController"),"'s ",Object(s.b)("inlineCode",{parentName:"li"},"presentedViewController")," as well")),Object(s.b)("p",null,"Though this solution takes some time to explain, I think it ends up being pretty clean:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"No ",Object(s.b)("inlineCode",{parentName:"li"},"UINavigationController")," subclass 🎉"),Object(s.b)("li",{parentName:"ol"},"No need to implement ",Object(s.b)("inlineCode",{parentName:"li"},"UINavigationControllerDelegate")," - you can even modify ",Object(s.b)("inlineCode",{parentName:"li"},"PopoverPushController")," to accept your own navigation controller, along with your own delegate 😮"),Object(s.b)("li",{parentName:"ol"},"No need to set ",Object(s.b)("inlineCode",{parentName:"li"},"preferredContentSize")," except when the size actually changes ✅"),Object(s.b)("li",{parentName:"ol"},"If you make the width and height constraints have ",Object(s.b)("inlineCode",{parentName:"li"},"priority = .defaultHigh"),", no unsatisfiable constraint warnings clogging your logs 💪")),Object(s.b)("p",null,"With more plumbing, it's possible to implement the same interaction without having to call into ",Object(s.b)("inlineCode",{parentName:"p"},"self.popoverPresentationController")," - you can have a ",Object(s.b)("inlineCode",{parentName:"p"},"UINavigationController")," subclass implement ",Object(s.b)("inlineCode",{parentName:"p"},"preferredContentSizeWillChange"),", and have it set the navgation controller's content size, which will be intercepted by ",Object(s.b)("inlineCode",{parentName:"p"},"PopoverPushController"),"'s ",Object(s.b)("inlineCode",{parentName:"p"},"preferredContentSizeWillChange"),". You can also provide a ",Object(s.b)("inlineCode",{parentName:"p"},"UINavigationControllerDelegate")," to avoid setting the popover controller's content size in ",Object(s.b)("inlineCode",{parentName:"p"},"viewWillAppear"),"."),Object(s.b)("p",null,"Ultimately though, it's better to do whatever feels more workable for your use case. I prefer using the ",Object(s.b)("inlineCode",{parentName:"p"},"popoverPresentationController")," because it feels cleaner to me, but if you think differently, ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769"}),"let me know"),"."),Object(s.b)("h2",null,"Code"),Object(s.b)("p",null,"All the code is available at ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/NGPopoverForceResizeTest"}),"NGPopoverForceResizeTest"),"."),Object(s.b)("p",null,"Here's the full implementation of the nav controller wrapper:"),Object(s.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(s.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"final"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"class"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"PopoverPushController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"private"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"let"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," wrappedNavigationController: UINavigationController")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIViewController) {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"wrappedNavigationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"UINavigationController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"rootViewController"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": rootViewController)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"nibName"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),", "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"bundle"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"nil"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"required"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"init?"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"coder"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"aDecoder"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": NSCoder) {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"fatalError"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk8"}),'"init(coder:) has not been implemented"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}))),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"override"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"() {")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"super"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"viewDidLoad"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"()")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        wrappedNavigationController."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"willMove"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"toParent"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addChild"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController)")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"addSubview"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(wrappedNavigationController."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"view"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(s.b)("style",{className:"vscode-highlight-styles"},".dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }"))}b.isMDXComponent=!0},253:function(e,a,t){"use strict";t.d(a,"d",function(){return N}),t.d(a,"b",function(){return g}),t.d(a,"c",function(){return d}),t.d(a,"g",function(){return h}),t.d(a,"e",function(){return k}),t.d(a,"f",function(){return u}),t.d(a,"a",function(){return f});var s=t(11),n=t(256),c=t.n(n),p=t(257),i=t.n(p),m=t(258),b=t.n(m),r=t(259),l=t.n(r);function o(){var e=O(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n            url('","') format('woff'),\n            url('","') format('truetype'),\n            url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n\n    @media (prefers-color-scheme: dark) {\n        html, body {\n            background-color: #2b2c2f;\n        }\n    }\n"]);return o=function(){return e},e}function j(){var e=O(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n             url('","') format('woff'),\n             url('","') format('truetype'),\n             url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n"]);return j=function(){return e},e}function O(e,a){return a||(a=e.slice(0)),e.raw=a,e}var N=Object(s.a)(j(),c.a,c.a,i.a,b.a,l.a),g=Object(s.a)(o(),c.a,c.a,i.a,b.a,l.a),d=s.c.div.withConfig({displayName:"default__Div",componentId:"d4l1a1-0"})([""]),h=(s.c.nav.withConfig({displayName:"default__Nav",componentId:"d4l1a1-1"})([""]),s.c.ul.withConfig({displayName:"default__UL",componentId:"d4l1a1-2"})(["margin:0;padding:0;"])),k=s.c.li.withConfig({displayName:"default__LI",componentId:"d4l1a1-3"})(["margin:0;padding:0;"]),u=s.c.p.withConfig({displayName:"default__P",componentId:"d4l1a1-4"})(["margin:0;padding:0;"]),f=s.c.a.withConfig({displayName:"default__A",componentId:"d4l1a1-5"})(["&,&:hover,&:focus{outline:none;color:inherit;text-decoration:none;}"])},254:function(e,a,t){"use strict";t.d(a,"a",function(){return s}),t.d(a,"b",function(){return n});var s="rgba(128, 165, 177, 1)",n="rgba(151, 195, 210, 1)"},256:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot"},257:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff"},258:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf"},259:function(e,a,t){e.exports=t.p+"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg"},260:function(e,a,t){"use strict";var s=t(0),n=t.n(s),c=t(253),p=t(254),i=t(11),m=t(264),b=t(265),r=i.c.nav.withConfig({displayName:"Nav__StyledNav",componentId:"sc-1cm9dpf-0"})(["display:flex;flex-direction:row;flex-wrap:wrap;padding:20px 60px;border-bottom:1px solid #ddd;@media all and (max-width:600px){padding:20px;}@media (prefers-color-scheme:dark){border-color:#777;}"]),l=i.c.div.withConfig({displayName:"Nav__Title",componentId:"sc-1cm9dpf-1"})(['flex:2;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:28px;font-display:swap;@media (prefers-color-scheme:dark){color:#fff;}']),o=Object(i.c)(c.g).withConfig({displayName:"Nav__NavLinks",componentId:"sc-1cm9dpf-2"})(["flex:10;display:flex;flex-direction:horizontal;flex-wrap:wrap;justify-content:flex-end;height:100%;align-self:center;"]),j=Object(i.c)(c.e).withConfig({displayName:"Nav__NavLink",componentId:"sc-1cm9dpf-3"})(['display:flex;flex-direction:vertical;align-items:center;text-align:center;font-family:"Bariol","Helvetica Neue","Helvetica",sans-serif;font-size:16px;padding:0px 20px;']),O=Object(i.c)(c.a).withConfig({displayName:"Nav__StyledA",componentId:"sc-1cm9dpf-4"})(["height:auto;color:",";display:flex;flex-direction:vertical;align-items:center;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{color:",";}"],p.a,p.b);a.a=function(e){return n.a.createElement(r,null,n.a.createElement(l,null,n.a.createElement(O,{href:e.blog?"/blog":"/"},"NOAH GILMORE")),n.a.createElement(o,null,n.a.createElement(j,null,n.a.createElement(O,{"aria-label":"Blog Home",href:"/blog"},n.a.createElement(m.b,{color:p.a,size:"24"}))),n.a.createElement(j,null,n.a.createElement(O,{"aria-label":"Twitter",href:"https://twitter.com/noahsark769"},n.a.createElement(b.a,{color:p.a,size:"24"}))),n.a.createElement(j,null,n.a.createElement(O,{"aria-label":"App Store",href:"https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8"},n.a.createElement(m.a,{color:p.a,size:"24"})))))}},261:function(e,a,t){"use strict";t.d(a,"a",function(){return i}),t.d(a,"b",function(){return l});var s=t(0),n=t.n(s),c=t(11),p=t(255);var i=c.c.div.withConfig({displayName:"BlogPost__BlogPostContainer",componentId:"gyfnna-0"})(["padding:60px 0;margin:0 auto;width:90%;@media all and (min-width:600px){max-width:700px;margin:auto;}@media all and (max-width:600px){width:100%;padding:20px 0;","}"],function(e){return e.darkened&&Object(c.b)(["background-color:#f6f6f6;@media (prefers-color-scheme:dark){background-color:inherit;}"])}),m=c.c.div.withConfig({displayName:"BlogPost__TitleContainer",componentId:"gyfnna-1"})(["width:100%;margin-bottom:40px;"]),b=c.c.h1.withConfig({displayName:"BlogPost__Heading",componentId:"gyfnna-2"})(['width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:34px;margin-bottom:10px;line-height:1.2em;@media (prefers-color-scheme:dark){color:#fff;}']),r=c.c.p.withConfig({displayName:"BlogPost__DateContainer",componentId:"gyfnna-3"})(['font-family:"Gentium Book Basic",times,serif;font-style:italic;font-size:16px;color:#999;']),l=function(e){return n.a.createElement("div",null,n.a.createElement(p.Helmet,null,n.a.createElement("title",null,e.title)),n.a.createElement(m,null,n.a.createElement(b,null,e.title),n.a.createElement(r,null,e.date)))};n.a.Component},262:function(e,a,t){"use strict";t.d(a,"a",function(){return p});var s=t(0),n=t.n(s);var c=t(11).c.div.withConfig({displayName:"MarkdownContent__Container",componentId:"zl3v0s-0"})(['p,li{margin:0;padding:0;font-family:"Gentium Book Basic",times,serif;font-size:21px;line-height:29px;color:#333;padding-bottom:15px;margin-top:15px;@media all and (max-width:600px){width:90%;margin:15px auto 0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}blockquote{background-color:#faf9f7;border-left:4px solid #e5e4e1;padding:20px;font-style:italic;@media (prefers-color-scheme:dark){background-color:#3f3f3f;}p{margin:0;padding:0;color:#555;@media (prefers-color-scheme:dark){color:#fff;}}}a{color:#1A3F4B;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;@media (prefers-color-scheme:dark){color:#60b5d1;}}a:hover{color:#47656E;@media (prefers-color-scheme:dark){color:#6bcfef;}}code{font-family:monospace;font-size:16px;padding:3px 5px;margin:0px 2px;@media (prefers-color-scheme:dark){color:#fff;}}code:not(.vscode-highlight-code){font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:first-child{margin-left:0;}pre{display:block;margin:0;padding:0;margin-top:10px;border:1px solid #e5e4e1;border-radius:2px;@media all and (max-width:600px){width:100%;margin:10px auto 0 auto;border-left:none;border-right:none;border-radius:0;overflow-x:scroll;}}pre > code{display:block;margin:0;padding:10px;font-family:monospace;font-size:14px;line-height:17px;white-space:pre-wrap;@media all and (max-width:600px){font-size:15px;white-space:pre;padding:15px 5% 15px 5%;width:100%;}}pre + p{margin-top:30px;}ol{margin-left:30px;@media all and (max-width:600px){width:90%;margin:0 auto 0 30px;}@media (prefers-color-scheme:dark){color:#fff;}}ol li{list-style-type:decimal;}ul li{list-style-type:square;margin-left:40px;@media all and (max-width:600px){width:90%;margin:0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1,h2,h3,h4,h5,h6{width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;margin-bottom:10px;margin-top:40px;@media all and (max-width:600px){width:90%;margin:40px auto 10px auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1{font-size:28px;}h2{font-size:24px;}h3{font-size:20px;}em{font-style:italic;}strong{font-weight:bold;}']),p=function(e){var a,t;function s(){return e.apply(this,arguments)||this}return t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t,s.prototype.render=function(){return n.a.createElement(c,null,this.props.children)},s}(n.a.Component)},263:function(e,a,t){"use strict";function s(e){return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}t.d(a,"a",function(){return s})},266:function(e,a,t){"use strict";t(161);var s=t(0),n=t.n(s),c=t(255),p=t(253),i=t(260),m=t(11),b=t(264),r=t(265),l=t(254);var o=m.c.div.withConfig({displayName:"EndButtons__Container",componentId:"sc-2ta1su-0"})(["width:100%;display:flex;flex-direction:horizontal;align-items:center;justify-content:center;margin-top:40px;"]),j=m.c.div.withConfig({displayName:"EndButtons__ButtonStyle",componentId:"sc-2ta1su-1"})(["background-color:",";-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{background-color:",";}width:100px;padding:10px 20px;text-align:center;display:flex;flex-direction:vertical;align-items:center;justify-content:center;border-radius:4px;",";"],l.a,l.b,function(e){return e.margin&&Object(m.b)(["margin-right:20px;"])}),O=function(e){return n.a.createElement(p.a,{href:e.url,target:e.newTab?"_blank":null,"aria-label":e.label},n.a.createElement(j,{margin:e.margin},e.children))},N=function(e){var a,t;function s(){return e.apply(this,arguments)||this}return t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t,s.prototype.render=function(){var e,a=(e="Post by @noahsark769: "+this.props.tweetTitle+" "+this.props.tweetUrl,"https://twitter.com/intent/tweet?text="+encodeURIComponent(e));return n.a.createElement(o,null,n.a.createElement(O,{label:"Twitter",url:a,newTab:!0,margin:!0},n.a.createElement(r.a,{size:24,color:"white"})),n.a.createElement(O,{label:"Blog homepage",url:"/blog"},n.a.createElement(b.b,{size:24,color:"white"})))},s}(n.a.Component),g=t(261),d=t(262),h=t(263);var k=m.c.div.withConfig({displayName:"Disqus__Wrapper",componentId:"sc-1jjeqqj-0"})(["margin-top:80px;"]),u=function(e){var a,t;function s(){return e.apply(this,arguments)||this}t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t;var c=s.prototype;return c.render=function(){return n.a.createElement(k,null,n.a.createElement("div",{id:"disqus_thread"}))},c.componentDidMount=function(){var e,a;e=document,(a=e.createElement("script")).src="//noahgilmore-com.disqus.com/embed.js",a.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(a)},s}(n.a.Component),f=t(267),v=t.n(f);t.d(a,"a",function(){return y});var w=m.c.div.withConfig({displayName:"BlogPageLayout__Container",componentId:"sc-118ribu-0"})(["@media (prefers-color-scheme:dark){background-color:#2b2c2f;}"]),C=m.c.div.withConfig({displayName:"BlogPageLayout__NonContent",componentId:"sc-118ribu-1"})(["@media all and (max-width:600px){padding-right:5%;padding-left:5%;}"]),y=function(e){var a,t;function s(){return e.apply(this,arguments)||this}t=e,(a=s).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t;var m=s.prototype;return m.render=function(){var e="undefined"!=typeof window&&window.matchMedia("(prefers-color-scheme: dark)").matches;return n.a.createElement(w,null,n.a.createElement(p.b,null),n.a.createElement(c.Helmet,null,n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Roboto:700",rel:"stylesheet",type:"text/css"}),n.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Gentium+Book+Basic",rel:"stylesheet"}),!e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/atom-one-light.min.css"}),e&&n.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/zenburn.min.css"}),n.a.createElement("meta",{name:"twitter:card",content:"summary"}),n.a.createElement("meta",{name:"twitter:creator",content:"@noahsark769"}),n.a.createElement("meta",{property:"og:url",content:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement("meta",{property:"og:title",content:this.props.pageContext.frontmatter.title}),n.a.createElement("meta",{property:"og:description",content:this.props.pageContext.frontmatter.staticPreview}),n.a.createElement("meta",{name:"description",content:this.props.pageContext.frontmatter.staticPreview})),n.a.createElement(i.a,{blog:!0}),n.a.createElement(g.a,null,n.a.createElement(C,null,n.a.createElement(g.b,{title:this.props.pageContext.frontmatter.title,date:Object(h.a)(this.props.pageContext.frontmatter.date)})),n.a.createElement(d.a,null,this.props.children),n.a.createElement(C,null,n.a.createElement(N,{tweetTitle:this.props.pageContext.frontmatter.title,tweetUrl:"https://noahgilmore.com"+this.props.location.pathname}),n.a.createElement(u,null))))},m.componentDidMount=function(){v.a.initialize("UA-35325391-1"),v.a.pageview(window.location.pathname+window.location.search)},s}(n.a.Component)}}]);
//# sourceMappingURL=component---src-pages-blog-popover-uinavigationcontroller-preferredcontentsize-mdx-01f9f5c49c1ef06de8e2.js.map