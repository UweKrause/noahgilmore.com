{"version":3,"sources":["webpack:///./src/components/Image.jsx","webpack:///./src/components/CaptionedImage.jsx","webpack:///./src/pages/blog/pyparsing-trees.mdx","webpack:///./src/components/default.jsx","webpack:///./src/fonts/Bariol-Regular.eot","webpack:///./src/fonts/Bariol-Regular.woff","webpack:///./src/fonts/Bariol-Regular.ttf","webpack:///./src/fonts/Bariol-Regular.svg","webpack:///./src/components/BlogPost.jsx","webpack:///./src/components/Nav.jsx","webpack:///./src/components/MarkdownContent.jsx","webpack:///./src/components/Disqus.jsx","webpack:///./src/components/BlogPageLayout.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Image","props","react_default","a","createElement","gatsby_browser_entry","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","imageSizes","childImageSharp","sizes","gatsby_image_default","alt","_1345654842","Container","styled","div","withConfig","displayName","componentId","Caption","CaptionedImage","components_Image","this","caption","React","Component","__webpack_exports__","_ref","components","objectWithoutPropertiesLoose_default","dist","name","Layout","DefaultLayout","layoutProps","BlogPost","title","date","parentName","href","CaptionedImage_CaptionedImage","className","metaString","_frontmatter","GlobalStyle","createGlobalStyle","_templateObject","bariol_eot","bariol_woff","bariol_ttf","bariol_svg","Div","UL","nav","ul","LI","li","A","module","exports","__webpack_require__","p","BlogPostContainer","TitleContainer","Heading","h1","DateContainer","BlogPostMeta","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_components_default__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","StyledNav","Title","NavLinks","NavLink","StyledA","Nav","MarkdownContent","children","componentDidMount","elements","ReactDOM","findDOMNode","querySelectorAll","console","log","i","length","window","hljs","highlightBlock","Wrapper","Disqus","id","d","s","document","src","setAttribute","Date","head","body","appendChild","BlogPageLayout","components_default","Helmet","rel","type","MarkdownContent_MarkdownContent","Disqus_Disqus","ReactGA","initialize","pageview","location","pathname","search","r","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape"],"mappings":"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","file":"component---src-pages-blog-pyparsing-trees-mdx-a8a4a5f6950a51e9acae.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst Image = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                sizes(maxWidth: 600) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n\n    render={(data) => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename);\n      });\n      if (!image) {\n        return null;\n      }\n      \n      const imageSizes = image.node.childImageSharp.sizes;\n      return (\n        <Img\n          alt={props.alt}\n          sizes={imageSizes}\n        />\n      );\n    }}\n  />\n)\nexport default Image;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport Image from \"../components/Image\";\n\nconst Container = styled.div`\n    margin: 20px 0;\n`;\n\nconst Caption = styled.div`\n    font-family: \"Gentium Book Basic\", times, serif;\n    font-style: italic;\n    font-size: 16px;\n    color: #999;\n    margin-bottom: 30px;\n\n    img {\n        width: 100%;\n        margin-bottom: 10px;   \n    }\n`;\n\nexport default class CaptionedImage extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Image filename={this.props.filename} alt={this.props.alt} />\n                <Caption>{this.props.caption}</Caption>\n            </Container>\n        );\n    }\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/noahgilmore/code/noahgilmore.com/blog-gatsby/src/components/BlogPageLayout.jsx\"\nimport { BlogPostMeta } from '../../components/BlogPost';\nimport CaptionedImage from '../../components/CaptionedImage';\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\" Layout={DefaultLayout} layoutProps={props} components={components}>\n\n\n<BlogPostMeta title=\"Syntax trees with Pyparsing\" date=\"October 23rd, 2016\" />\n<MDXTag name=\"p\" components={components}>{`Let's talk about `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\"}}>{`syntax trees`}</MDXTag>{`. In static analysis, a common operation is to take a character string (e.g. \"x = 1\") and transform it into well structured data:`}</MDXTag>\n<CaptionedImage filename=\"pyparsing-trees-1.png\" alt=\"Simple syntax tree\" caption=\"This is a simple example of course.\" />\n<MDXTag name=\"p\" components={components}>{`Let's try to do this in python. We'll use `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://pyparsing.wikispaces.com/\"}}>{`Pyparsing`}</MDXTag>{` as our tokenization tool - you can use pyparsing's rules to build a grammar, from which you can get back a list of token data.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\",\"metaString\":\"\"}}>{`from pyparsing import alphas, Word, Literal, nums\n\ngrammar = Literal(\"var\") + Word(alphas) + Literal(\"=\") + Word(nums)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"metaString\":null}}>{`>>> print(grammar.parseString(\"var x = 1\"))\n['var', 'x', '=', '1']\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is great, but what if we need a tree instead of an array of tokens?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For example, let's say we have a language that describes a tree, where each node in the tree can have a number. Each node is represented by a pair of parentheses, and inside is the value followed by the child nodes:`}</MDXTag>\n<CaptionedImage filename=\"pyparsing-trees-2.png\" alt=\"Simple syntax tree\" caption=\"\" />\n<MDXTag name=\"p\" components={components}>{`How could we write a parser for this? It differs in a couple of ways from the first example:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`It's inherently recursive, since after the value in each node, zero or more child nodes can follow:`}</MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-nohighlight\",\"metaString\":\"\"}}>{`node := (value[, node, node, node, ...])\n`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`If we just parse the string as a list, we won't be able to preserve the tree structure.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Recursive grammars with pyparsing`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Pyparsing supports recursive grammars using a grammar component called `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Forward`}</MDXTag>{`. To define a recursive grammar, you create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pyparsing.Forward()`}</MDXTag>{`, then use the shift left operator to set its content:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\",\"metaString\":\"\"}}>{`grammar = pyparsing.Forward()\ngrammar << pyparsing.Suppress(\"(\") + pyparsing.Word(\"0123456789\") + pyparsing.ZeroOrMore(grammar) + pyparsing.Suppress(\")\")\n\nquery = \"(1 (2 (3)) (4 (5 (6) (7) (8)))\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"metaString\":null}}>{`>>> print(grammar.parseString(query))\n['5', '6', '7', '9', '9', '5', '6', '7', '8', '9', '7', '8', '9']\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This parses the grammar, but we still don't have the tree structure.`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Parse actions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Pyparsing allows a \"parse action\" to be defined:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\",\"metaString\":\"\"}}>{`def action(string, location, tokens):\n    return tokens\n\ngrammar.setParseAction(action)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The parse action is a function which will be applied every time a parse element generates output. It takes three arguments:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`The full input string being parsed.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`The location of the parse element as an index into the full string.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`The list generated tokens, as strings.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The value returned from the parse action function will replace the string tokens, and the default implementation does nothing with the tokens and just returns them the way they are. The parse action is our chance to hook into pyparsing and output structured data instead of strings.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As an example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\",\"metaString\":\"\"}}>{`import pyparsing\n\nclass Item:\n    def __init__(self, value):\n        self.value = value\n\n    def __repr__(self):\n        return \"{Item: %s}\" % self.value\n\ndef transform(string, location, tokens):\n    return [Item(token) for token in tokens]\n\ngrammar = Literal(\"var\") + Word(alphas) + Literal(\"=\") + Word(nums)\ngrammar.setParseAction(transform)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"metaString\":null}}>{`>>> print(grammar.parseString(\"var x = 1\"))\n[{Item: var}, {Item: x}, {Item: =}, {Item: 1}]\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now we have items instead of strings.`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Building a tree`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's apply this to the tree grammar to build a tree. We'll define a simple node class:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\",\"metaString\":\"\"}}>{`from collections import namedtuple\n\nNode = namedtuple(\"Node\", [\"value\", \"children\"])\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`And define the recursive grammar:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\",\"metaString\":\"\"}}>{`from pyparsing import Forward, Suppress, Word, ZeroOrMore\n\ngrammar = Forward()\ngrammar << Suppress(\"(\") + Word(\"0123456789\") + ZeroOrMore(grammar) + Suppress(\")\")\n\ndef parseAction(string, location, tokens):\n    return Node(value=tokens[0], children=tokens[1:])\n\ngrammar.setParseAction(parseAction)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`And a way to print it out and see if it worked:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\",\"metaString\":\"\"}}>{`def pprint(node, tab=\"\"):\n   print tab + u\"┗━ \" + str(node.value)\n   for child in node.children:\n      pprint(child, tab + \"    \")\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"metaString\":null}}>{`>>> pprint(grammar.parseString(\"(1 (2 (3)) (4 (5 (6) (7) (8))))\"))\n┗━ 1\n    ┗━ 2\n        ┗━ 3\n    ┗━ 4\n        ┗━ 5\n            ┗━ 6\n            ┗━ 7\n            ┗━ 8\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Not bad: a simple parser in 9 lines of code.`}</MDXTag></MDXTag>\n\nexport const _frontmatter = {};\n\n  ","import React from 'react';\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from 'styled-components'\nimport bariol_eot from '../fonts/Bariol-Regular.eot';\nimport bariol_woff from '../fonts/Bariol-Regular.woff';\nimport bariol_ttf from '../fonts/Bariol-Regular.ttf';\nimport bariol_svg from '../fonts/Bariol-Regular.svg';\n\nexport const GlobalStyle = createGlobalStyle`\n    @font-face {\n        font-family: 'Bariol';\n        src: url('${bariol_eot}');\n        src: url('${bariol_eot}?#iefix') format('embedded-opentype'),\n             url('${bariol_woff}') format('woff'),\n             url('${bariol_ttf}') format('truetype'),\n             url('${bariol_svg}#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box;\n    }\n`;\n\nexport const Div = styled.div``;\nexport const Nav = styled.nav``;\nexport const UL = styled.ul`\n    margin: 0;\n    padding: 0;\n`;\nexport const LI = styled.li`\n    margin: 0;\n    padding: 0;\n`;\n\nexport const A = styled.a`\n    &, &:hover, &:focus {\n        outline: none;\n        color: inherit;\n        text-decoration: none;\n    }\n`;","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot\";","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff\";","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf\";","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg\";","import React from 'react';\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\n\nexport const BlogPostContainer = styled.div`\n    padding: 60px 0;\n    margin: 0 auto;\n    width: 90%;\n    @media all and (min-width: 600px) {\n        max-width: 700px;\n        margin: auto;\n    }\n`;\n\nconst TitleContainer = styled.div`\n    width: 100%;\n    margin-bottom: 40px;\n`;\n\nconst Heading = styled.h1`\n    width: 100%;\n    font-family: \"Roboto\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n    font-size: 28px;\n    margin-bottom: 10px;\n`;\n\nconst DateContainer = styled.p`\n    font-family: \"Gentium Book Basic\", times, serif;\n    font-style: italic;\n    font-size: 16px;\n    color: #999;\n`;\n\nexport const BlogPostMeta = (props) => {\n    return (\n        <div>\n            <Helmet>\n                <title>{props.title}</title>\n            </Helmet>\n            <TitleContainer>\n                <Heading>{props.title}</Heading>\n                <DateContainer>{props.date}</DateContainer>\n            </TitleContainer>\n        </div>\n    );\n};\n\nexport default class BlogPost extends React.Component {\n    render() {\n        return (\n            <BlogPostContainer>\n                <BlogPostMeta title={this.props.title} date={this.props.date} />\n                <div>\n                    {this.props.children}\n                </div>\n            </BlogPostContainer>\n        );\n    }\n};\n","import React from 'react';\nimport { A, UL, LI } from '../components/default';\nimport styled from \"styled-components\";\n\nconst StyledNav = styled.nav`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 60px;\n    border-bottom: 1px solid #ddd;\n\n    @media all and (max-width: 600px) {\n        flex-direction: column;\n        padding: 20px 20px 10px 20px;\n    }\n`;\n\nconst Title = styled.div`\n    flex: 2;\n    font-family: \"Roboto\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n    font-size: 28px;\n`;\n\nconst NavLinks = styled(UL)`\n    flex: 10;\n    display: flex;\n    flex-direction: horizontal;\n    flex-wrap: wrap;\n    justify-content: flex-end;\n\n    @media all and (max-width: 600px) {\n        justify-content: flex-start;\n    }\n`;\n\nconst NavLink = styled(LI)`\n    display: flex;\n    flex-direction: horizontal;\n    text-align: center;\n    font-family: \"Bariol\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n    font-size: 16px;\n    padding: 0px 20px;\n\n    @media all and (max-width: 600px) {\n        display: block;\n        width: 100%;\n        font-size: 20px;\n        margin: 5px 0px;\n        padding: 10px 10px;\n        background-color: #eee;\n    }\n`;\n\nconst StyledA = styled(A)`\n    height: auto;\n    color: rgba(128, 165, 177, 1);\n\n    -webkit-transition: 0.2s ease-in-out;\n    -moz-transition: 0.2s ease-in-out;\n    -o-transition: 0.2s ease-in-out;\n    transition: 0.2s ease-in-out;\n\n    &:hover {\n        color: rgba(151, 195, 210, 1);\n    }\n\n    @media all and (max-width: 600px) {\n        width: 100%;\n    }\n`;\n\nconst Nav = (props) => {\n    return (\n        <StyledNav>\n            <Title><StyledA href='/'>NOAH GILMORE</StyledA></Title>\n            <NavLinks>\n                <NavLink><StyledA href=\"/\">HOME</StyledA></NavLink>\n                <NavLink><StyledA href=\"/blog/\">POSTS</StyledA></NavLink>\n            </NavLinks>\n        </StyledNav>\n    );\n};\n\nexport default Nav;","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    .format-post-preview p, .format-post-preview li {\n        font-family: \"Open Sans\", arial, sans-serif;\n        font-size: 14px;\n        line-height: 14px;\n        line-height: 18px;\n        margin-top: 10px;\n        padding-bottom: 10px;\n    }\n    .format-post-preview p + p {\n        margin-top: 0;\n    }\n    .format-post-preview pre > code {\n        font-size: 12px;\n        line-height: 12px;\n        margin-top: 0;\n        margin-bottom: 0;\n    }\n    p, li {\n        margin: 0;\n        padding: 0;\n        font-family: \"Gentium Book Basic\", times, serif;\n        font-size: 21px;\n        line-height: 26px;\n        color: #333;\n        padding-bottom: 15px;\n        margin-top: 15px;\n    }\n    a {\n        color: #1A3F4B;\n        -webkit-transition: 0.2s ease-in-out;\n        -moz-transition: 0.2s ease-in-out;\n        -o-transition: 0.2s ease-in-out;\n        transition: 0.2s ease-in-out;\n    }\n    a:hover {\n        color: #47656E;\n    }\n    code {\n        font-family: monospace;\n        font-size: 16px; \n    }\n    pre {\n        display: block;\n        margin: 0;\n        padding: 0;\n        background: none;\n    }\n    pre > code {\n        display: block;\n        margin: 0;\n        padding: 0;\n        border: 1px solid #ddd;\n        border-radius: 2px;\n        padding: 10px;\n        margin-top: 10px;\n        font-family: monospace;\n        font-size: 14px;\n        white-space: pre-wrap;\n    }\n\n    pre + p {\n        margin-top: 30px;\n    }\n    ol {\n        margin-left: 30px;\n    }\n    ol li {\n        list-style-type: decimal;\n    }\n    ul li {\n        list-style-type: square;\n        margin-left: 40px;\n    }\n    h1, h2, h3, h4, h5, h6 {\n        width: 100%;\n        font-family: \"Roboto\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n        margin-bottom: 10px;   \n        margin-top: 40px;\n    }\n    h1 {\n        font-size: 28px;\n    }\n    h2 {\n        font-size: 24px;\n    }\n    h3 {\n        font-size: 20px;\n    }\n`;\n\nexport default class MarkdownContent extends React.Component {\n    render() {\n        return (\n            <Container>\n                {this.props.children}\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        const node = ReactDOM.findDOMNode(this);\n        var elements = node.querySelectorAll(\"pre code\");\n        // this next line has to be stuck in the 90's\n        // https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\n        console.log(\"HEYYYY YAAAAAA\");\n        console.log(elements);\n        for (var i = 0; i < elements.length; i++) {\n            // I would love to import the node version of hljs here, but it turns out\n            // this doesn't work due to something in gatsby-mdx's rendering. Oh well,\n            // we just import it in html.js and use the window version here.\n            window.hljs.highlightBlock(elements[i]);\n        }\n    }\n}","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    margin-top: 80px;\n`;\n\nexport default class Disqus extends React.Component {\n    render() {\n        return (\n            <Wrapper>\n                <div id=\"disqus_thread\"></div>\n            </Wrapper>\n        )\n    }\n\n    componentDidMount() {\n       /**\n        *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n        *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n        /*\n        var disqus_config = function () {\n        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\n        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n        };\n        */\n        (function() { // DON'T EDIT BELOW THIS LINE\n        var d = document, s = d.createElement('script');\n        s.src = '//noahgilmore-com.disqus.com/embed.js';\n        s.setAttribute('data-timestamp', +new Date());\n        (d.head || d.body).appendChild(s);\n        })();     \n    }\n}","import React from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { GlobalStyle } from './default';\nimport Nav from './Nav';\nimport { BlogPostContainer } from './BlogPost';\nimport MarkdownContent from './MarkdownContent';\nimport Disqus from './Disqus';\nimport ReactGA from 'react-ga';\n\nexport default class BlogPageLayout extends React.Component {\n    render() {\n        return (\n            <div>\n              <GlobalStyle />\n              <Helmet>\n                  <link href='http://fonts.googleapis.com/css?family=Roboto:700' rel='stylesheet' type='text/css' />\n                  <link href=\"https://fonts.googleapis.com/css?family=Gentium+Book+Basic\" rel=\"stylesheet\" />\n              </Helmet>\n              <Nav />\n              <BlogPostContainer>\n                <MarkdownContent>\n                  {this.props.children}\n                </MarkdownContent>\n                <Disqus />\n              </BlogPostContainer>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        ReactGA.initialize('UA-35325391-1');\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}