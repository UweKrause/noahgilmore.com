{"version":3,"sources":["webpack:///./src/pages/blog/xcode-shared-test-target.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","filename","max","caption","alt","columns","isMDXComponent"],"mappings":"oTASO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,qHAAoG,+BAAGC,WAAW,KAAQ,CACtH,KAAQ,0BADwF,qCAApG,gQAE+S,0BAAYA,WAAW,KAAvB,cAF/S,yBAE+X,0BAAYA,WAAW,KAAvB,yBAF/X,oBAEqd,+BAAGA,WAAW,KAAQ,CACve,KAAQ,kFADyc,6BAFrd,0BAIiE,0BAAYA,WAAW,KAAvB,sBAJjE,uMAKA,YAAC,IAAD,CAAgBC,SAAS,oBAAoBC,IAAK,IAAKC,QAAQ,GAAGC,IAAI,6EAA6EL,QAAQ,mBAC3J,8KAA6J,0BAAYC,WAAW,KAAvB,mBAA7J,iVACA,4EAA2D,0BAAYA,WAAW,KAAvB,mBAA3D,8XACA,8BACE,iBAAGA,WAAW,cAAd,oDAAgF,+BAAGA,WAAW,KAAQ,CAClG,KAAQ,kEADoE,kCAAhF,wFAEoI,+BAAGA,WAAW,KAAQ,CACtJ,KAAQ,wCADwH,QAFpI,MAMF,iBAAQ,CACN,GAAM,uBADR,uBAGA,4GAA2F,0BAAYA,WAAW,KAAvB,cAA3F,wHAA0Q,0BAAYA,WAAW,KAAvB,mBAA1Q,6EACA,kBAAS,CACP,UAAa,qCACb,gBAAiB,SAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,UAEmB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,aAEQ,kCAAMA,WAAW,QAAW,CACjD,UAAa,SADQ,OAV1B,KAaL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,OAED,kCAAMA,WAAW,QAAW,CAC3C,UAAa,SADE,aAEM,kCAAMA,WAAW,QAAW,CACjD,UAAa,UADQ,WArB1B,KAwBL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,OAED,kCAAMA,WAAW,QAAW,CAC3C,UAAa,SADE,aAEM,kCAAMA,WAAW,QAAW,CACjD,UAAa,UADQ,WAhC1B,KAmCL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAGP,2EAA0D,0BAAYA,WAAW,KAAvB,wBAA1D,6BAAwJ,0BAAYA,WAAW,KAAvB,mBAAxJ,yBACA,kBAAS,CACP,UAAa,qCACb,gBAAiB,SAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,6BAJJ,KAOL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,UADd,UAEmB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,WAblB,KAgBL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,aAEsB,kCAAMA,WAAW,QAAW,CACjD,UAAa,SADQ,KAER,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,UAEK,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,eA1BlB,KA6BL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,WAhClB,KAkCL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,KAEH,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,wBAEmB,kCAAMA,WAAW,QAAW,CAC5D,UAAa,SADmB,SA1CrC,KA6CL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,OAED,kCAAMA,WAAW,QAAW,CAC3C,UAAa,SADE,iBAEU,kCAAMA,WAAW,QAAW,CACrD,UAAa,UADY,aAEJ,kCAAMA,WAAW,QAAW,CACjD,UAAa,SADQ,KAER,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,UAEK,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,MAEJ,kCAAMA,WAAW,QAAW,CAC1C,UAAa,SADC,SAEG,kCAAMA,WAAW,QAAW,CAC7C,UAAa,SADI,MAEH,kCAAMA,WAAW,QAAW,CAC1C,UAAa,UADC,UAEI,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,MAEJ,kCAAMA,WAAW,QAAW,CAC1C,UAAa,SADC,SAEG,kCAAMA,WAAW,QAAW,CAC7C,UAAa,SADI,MAvEtB,KA0EL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,UADG,kBAEU,kCAAMA,WAAW,QAAW,CACtD,UAAa,SADa,eAEH,kCAAMA,WAAW,QAAW,CACnD,UAAa,UADU,UAEL,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,gBAEM,kCAAMA,WAAW,QAAW,CACpD,UAAa,UADW,UAEN,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,MAxFvB,KA2FL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,MA7FJ,KAgGL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,WAnGlB,KAqGL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,SAEkB,kCAAMA,WAAW,QAAW,CAC7C,UAAa,SADI,KAEJ,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,mBAEc,kCAAMA,WAAW,QAAW,CACvD,UAAa,SADc,mBA7GhC,KAgHL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,QAEA,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,KAEH,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,eAEU,kCAAMA,WAAW,QAAW,CACnD,UAAa,SADU,OAER,kCAAMA,WAAW,QAAW,CAC3C,UAAa,UADE,UAEG,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,OA9HvB,KAiIL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,YAEqB,kCAAMA,WAAW,QAAW,CAChD,UAAa,UADO,wBAEY,kCAAMA,WAAW,QAAW,CAC5D,UAAa,SADmB,OAvIrC,KA0IL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,UA5IJ,KA+IL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAGP,0NAAyM,0BAAYA,WAAW,KAAvB,cAAzM,KACA,YAAC,IAAD,CAAgBC,SAAS,oBAAoBC,IAAK,IAAKC,QAAQ,GAAGC,IAAI,mDAAmDL,QAAQ,mBACjI,4BAAW,0BAAYC,WAAW,KAAvB,oBAAX,gBACA,kBAAS,CACP,UAAa,qCACb,gBAAiB,SAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,UADd,UAEmB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,WARlB,KAWL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,aAEsB,kCAAMA,WAAW,QAAW,CACjD,UAAa,SADQ,KAER,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,UAEK,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,eArBlB,KAwBL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,WA3BlB,KA6BL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,SAEkB,kCAAMA,WAAW,QAAW,CAC7C,UAAa,SADI,KAEJ,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,cAES,kCAAMA,WAAW,QAAW,CAClD,UAAa,SADS,mBArC3B,KAwCL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,QAEA,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,KAEH,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,eAEU,kCAAMA,WAAW,QAAW,CACnD,UAAa,SADU,OAER,kCAAMA,WAAW,QAAW,CAC3C,UAAa,UADE,UAEG,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,OAtDvB,KAyDL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,YAEqB,kCAAMA,WAAW,QAAW,CAChD,UAAa,UADO,wBAEY,kCAAMA,WAAW,QAAW,CAC5D,UAAa,SADmB,OA/DrC,KAkEL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,UApEJ,KAuEL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAGP,0EAAyD,0BAAYA,WAAW,KAAvB,wBAAzD,kBAA4I,0BAAYA,WAAW,KAAvB,mBAA5I,SAAiN,0BAAYA,WAAW,KAAvB,cAAjN,KACA,+CAA8B,0BAAYA,WAAW,KAAvB,wBAA9B,yCAAwI,0BAAYA,WAAW,KAAvB,mBAAxI,gBACA,sBACE,kBAAIA,WAAW,MAAf,yDAA8E,0BAAYA,WAAW,MAAvB,yBAC9E,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,mBAApB,4CAA6H,0BAAYA,WAAW,MAAvB,cAA7H,+BAAoN,0BAAYA,WAAW,MAAvB,+BAApN,MAEF,iBAAQ,CACN,GAAM,6BADR,6BAGA,8BACE,iBAAGA,WAAW,cAAd,oFAAgH,+BAAGA,WAAW,KAAQ,CAClI,KAAQ,kHADoG,eAAhH,uEAIF,iEAAgD,0BAAYA,WAAW,KAAvB,mBAAhD,4KACA,YAAC,IAAD,CAAUK,QAAS,EAAGN,QAAQ,YAC9B,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,oBAAoBG,IAAI,sDAAsDD,QAAQ,aAAaJ,QAAQ,mBAC9I,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,oBAAoBG,IAAI,0DAA0DD,QAAQ,iBAAiBJ,QAAQ,oBAEtJ,qBAAG,0BAAYC,WAAW,KAAvB,yBAAH,qHAA0L,0BAAYA,WAAW,KAAvB,UAA1L,MACA,kBAAS,CACP,UAAa,qCACb,gBAAiB,SAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,6BAJJ,KAOL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,UADd,UAEmB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,WAblB,KAgBL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,aAEsB,kCAAMA,WAAW,QAAW,CACjD,UAAa,SADQ,KAER,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,UAEK,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,eA1BlB,KA6BL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,WAhClB,KAkCL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,UAEmB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,SADA,QAEG,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,KAEH,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,wBAEmB,kCAAMA,WAAW,QAAW,CAC5D,UAAa,SADmB,SA9CrC,KAiDL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,OAED,kCAAMA,WAAW,QAAW,CAC3C,UAAa,SADE,iBAEU,kCAAMA,WAAW,QAAW,CACrD,UAAa,UADY,aAEJ,kCAAMA,WAAW,QAAW,CACjD,UAAa,SADQ,KAER,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,UAEK,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,MAEJ,kCAAMA,WAAW,QAAW,CAC1C,UAAa,SADC,SAEG,kCAAMA,WAAW,QAAW,CAC7C,UAAa,SADI,MAEH,kCAAMA,WAAW,QAAW,CAC1C,UAAa,UADC,UAEI,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,MAEJ,kCAAMA,WAAW,QAAW,CAC1C,UAAa,SADC,SAEG,kCAAMA,WAAW,QAAW,CAC7C,UAAa,SADI,MA3EtB,KA8EL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,UADG,kBAEU,kCAAMA,WAAW,QAAW,CACtD,UAAa,SADa,eAEH,kCAAMA,WAAW,QAAW,CACnD,UAAa,UADU,UAEL,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,gBAEM,kCAAMA,WAAW,QAAW,CACpD,UAAa,UADW,UAEN,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,MA5FvB,KA+FL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAGP,gFACA,YAAC,IAAD,CAAgBC,SAAS,oBAAoBC,IAAK,IAAKC,QAAQ,GAAGC,IAAI,+DAA+DL,QAAQ,mBAC7I,iBAAQ,CACN,GAAM,gCADR,gCAGA,4SAA2R,+BAAGC,WAAW,KAAQ,CAC7S,KAAQ,wCAD+Q,QAA3R,MAGA,iBAAQ,CACN,GAAM,mBADR,qBAGA,kBAAS,CACP,UAAa,qCACb,gBAAiB,IAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BADd,yDAGL,uDAAsC,0BAAYA,WAAW,KAAvB,wBAAtC,yEAAgL,0BAAYA,WAAW,KAAvB,0BAAhL,4CACA,kBAAS,CACP,UAAa,qCACb,gBAAiB,SAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,UADd,UAEmB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,WARlB,KAWL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,aAEsB,kCAAMA,WAAW,QAAW,CACjD,UAAa,SADQ,KAER,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,UAEK,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,eArBlB,KAwBL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,UADd,UAEmB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,KAEL,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,oBA9BlB,KAiCL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,WApClB,KAsCL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,SAEkB,kCAAMA,WAAW,QAAW,CAC7C,UAAa,SADI,KAEJ,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,mBAEc,kCAAMA,WAAW,QAAW,CACvD,UAAa,SADc,mBA9ChC,KAiDL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAEiB,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,QAEA,kCAAMA,WAAW,QAAW,CAC5C,UAAa,SADG,KAEH,kCAAMA,WAAW,QAAW,CACzC,UAAa,UADA,eAEU,kCAAMA,WAAW,QAAW,CACnD,UAAa,SADU,OAER,kCAAMA,WAAW,QAAW,CAC3C,UAAa,UADE,UAEG,kCAAMA,WAAW,QAAW,CAC9C,UAAa,SADK,OA/DvB,KAkEL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,YAEqB,kCAAMA,WAAW,QAAW,CAChD,UAAa,UADO,wBAEY,kCAAMA,WAAW,QAAW,CAC5D,UAAa,SADmB,OAxErC,KA2EL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,UA7EJ,KAgFL,kCAAMA,WAAW,QAAW,CACpB,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,SADd,QAGP,iBAAQ,CACN,GAAM,mBADR,qBAGA,kBAAS,CACP,UAAa,qCACb,gBAAiB,IAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BADd,sCAGL,8EAA6D,0BAAYA,WAAW,KAAvB,mBAA7D,iEAA0L,0BAAYA,WAAW,KAAvB,mBAA1L,iGACA,YAAC,IAAD,CAAUK,QAAS,EAAGN,QAAQ,YAC9B,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,oBAAoBG,IAAI,8DAA8DD,QAAQ,iBAAiBJ,QAAQ,mBAC1J,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,oBAAoBG,IAAI,kFAAkFD,QAAQ,kBAAkBJ,QAAQ,oBAE/K,iBAAQ,CACN,GAAM,mBADR,qBAGA,kBAAS,CACP,UAAa,qCACb,gBAAiB,IAChB,kCAAMC,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BADd,0DAGL,8HAA6G,0BAAYA,WAAW,KAAvB,kCAA7G,KACA,YAAC,IAAD,CAAgBC,SAAS,oBAAoBC,IAAK,IAAKC,QAAQ,GAAGC,IAAI,wDAAwDL,QAAQ,mBACtI,8DAA6C,0BAAYC,WAAW,KAAvB,mBAA7C,oBAA6H,0BAAYA,WAAW,KAAvB,UAA7H,kDAAkO,0BAAYA,WAAW,KAAvB,mBAAlO,yDAAuV,0BAAYA,WAAW,KAAvB,UAAvV,oBACA,YAAC,IAAD,CAAUK,QAAS,EAAGN,QAAQ,YAC9B,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,oBAAoBG,IAAI,qDAAqDD,QAAQ,eAAeJ,QAAQ,mBAC/I,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,qBAAqBG,IAAI,qEAAqED,QAAQ,mBAAmBJ,QAAQ,oBAEpK,iBAAQ,CACN,GAAM,mBADR,qBAGA,kBAAS,CACP,UAAa,qCACb,gBAAiB,IAChB,kCAAMC,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BADd,iCAGL,sDAAqC,0BAAYA,WAAW,KAAvB,cAArC,8BAA0H,0BAAYA,WAAW,KAAvB,mBAA1H,2DACA,YAAC,IAAD,CAAUK,QAAS,EAAGN,QAAQ,YAC9B,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,qBAAqBG,IAAI,kFAAkFD,QAAQ,GAAGJ,QAAQ,mBACjK,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,qBAAqBG,IAAI,qEAAqED,QAAQ,GAAGJ,QAAQ,oBAEpJ,iBAAQ,CACN,GAAM,mBADR,qBAGA,kBAAS,CACP,UAAa,qCACb,gBAAiB,IAChB,kCAAMC,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BADd,oEAGL,iGAAgF,0BAAYA,WAAW,KAAvB,mBAAhF,mIAA+Q,0BAAYA,WAAW,KAAvB,wBAA/Q,6HAA4c,0BAAYA,WAAW,KAAvB,wBAA5c,6DAA0kB,0BAAYA,WAAW,KAAvB,mBAA1kB,KACA,YAAC,IAAD,CAAUK,QAAS,EAAGN,QAAQ,YAC9B,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,qBAAqBG,IAAI,6EAA6ED,QAAQ,mCAAmCJ,QAAQ,mBAC5L,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,qBAAqBG,IAAI,mFAAmFD,QAAQ,uBAAuBJ,QAAQ,oBAEtL,iBAAQ,CACN,GAAM,mBADR,qBAGA,kCACA,YAAC,IAAD,CAAgBG,IAAK,IAAKD,SAAS,qBAAqBG,IAAI,0CAA0CD,QAAQ,KAAKJ,QAAQ,mBAC3H,iBAAQ,CACN,GAAM,QADR,UAGA,mIACA,sBACE,kBAAIC,WAAW,MAAf,iDACA,kBAAIA,WAAW,MAAf,gCACA,kBAAIA,WAAW,MAAf,6DACA,kBAAIA,WAAW,MAAf,iGAAsH,0BAAYA,WAAW,MAAvB,MAAtH,WACA,kBAAIA,WAAW,MAAf,uCAEF,iBAAQ,CACN,GAAM,4BADR,4BAGA,kMAAiL,0BAAYA,WAAW,KAAvB,mBAAjL,0HACA,2JAA0I,0BAAYA,WAAW,KAAvB,UAA1I,wBAAqN,0BAAYA,WAAW,KAAvB,oBAArN,uIAAyZ,+BAAGA,WAAW,KAAQ,CAC3a,KAAQ,4DAD6Y,kCAAzZ,sCAEkF,0BAAYA,WAAW,KAAvB,iBAFlF,6FAGA,kBAAS,CACP,UAAa,qCACb,gBAAiB,IAChB,kCAAMA,WAAW,OAAU,CAC1B,UAAa,0BACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,0BADd,yEAGL,mCAAkB,0BAAYA,WAAW,KAAvB,iBAAlB,2QAAuV,+BAAGA,WAAW,KAAQ,CACzW,KAAQ,oCAD2U,eAAvV,yBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,6LAA4K,+BAAGA,WAAW,KAAQ,CAC9L,KAAQ,0BADgK,WAA5K,4HAEiJ,+BAAGA,WAAW,KAAQ,CACnK,KAAQ,oCADqI,wBAFjJ,KAMA,oBAAW,CACT,UAAa,2BADf,wiCAiCJJ,EAAWU,gBAAiB","file":"component---src-pages-blog-xcode-shared-test-target-mdx-8379ff29794f156fc128.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/noahgilmore.com/noahgilmore.com/src/components/BlogPageLayout.jsx\";\nimport Tweet from \"../../components/Tweet\";\nimport CaptionedImage from \"../../components/CaptionedImage\";\nimport FlowGrid from '../../components/FlowGrid';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`I've been talking a fair amount recently about how I've been writing a lot of unit tests for `}<a parentName=\"p\" {...{\n        \"href\": \"https://getfluency.io\"\n      }}>{`Fluency, my Confluence editor app`}</a>{`, and how much I value having good tests to catch regressions and verify that the editor is actually working correctly. In the case of Fluency, I now have 70+ tests which test various parts of the app, and I've extracted various utils out of the actual `}<inlineCode parentName=\"p\">{`XCTestCase`}</inlineCode>{`s into functions like `}<inlineCode parentName=\"p\">{`assertRoundTrip(xml:)`}</inlineCode>{`, which takes in `}<a parentName=\"p\" {...{\n        \"href\": \"https://confluence.atlassian.com/doc/confluence-storage-format-790796544.html\"\n      }}>{`Confluence Storage Format`}</a>{` XML, renders it to an `}<inlineCode parentName=\"p\">{`NSAttributedString`}</inlineCode>{`, reads it back, and asserts that the resulting xml is the same as what was passed in - a crucial test when you want to make sure your editor isn't going to break any page storage just by saving.`}</p>\n    <CaptionedImage filename=\"xcodeshared-1.png\" max={300} caption=\"\" alt=\"Xcode UI showing RoundTripRenderingTest from Fluency in the test navigator\" mdxType=\"CaptionedImage\" />\n    <p>{`Today, I took the next step by writing some more complicated tests: I wanted to sample 100+ valid Confluence pages from various places on the web and `}<inlineCode parentName=\"p\">{`assertRoundTrip`}</inlineCode>{` on them, to give myself a reasonable amount of confidence that my editor could handle \"real world\" inputs. Some of these pages were quite large, and as a result the tests would take a long time to run, so I opted to put them in a separate test target so that I could run all the \"unit\" tests separately from the \"integration\" tests.`}</p>\n    <p>{`This all seemed fine, but I ran into a road block - `}<inlineCode parentName=\"p\">{`assertRoundTrip`}</inlineCode>{` had been declared in my original test target, so it wasn't available in the new one. After struggling for a few hours, I was finally  (with some help) able to figure out a way to extract my test utils into a shared library, but it wasn't at all straightforward. In this post I'll describe the method I used so that you can implement the same thing if it works for your project.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The sample code for this article is available at `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/noahsark769/NGSharedTestUtilsTargetExample\"\n        }}>{`NGSharedTestUtilsTargetExample`}</a>{`. If you're just interested in a list of steps to create the shared library, skip to `}<a parentName=\"p\" {...{\n          \"href\": \"/blog/xcode-shared-test-target#tldr\"\n        }}>{`here`}</a>{`.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"background-and-goal\"\n    }}>{`Background and Goal`}</h2>\n    <p>{`Let's assume a fairly standard setup for iOS app development: we have an app called `}<inlineCode parentName=\"p\">{`ExampleApp`}</inlineCode>{`, and if we checked the \"Include Unit Tests\" checkbox when we created it in Xcode, we have a unit test target called `}<inlineCode parentName=\"p\">{`ExampleAppTests`}</inlineCode>{`. For purposes of example, let's say we have a container type in our app:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`struct`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`Container`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`let`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` value1: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`String`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`let`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` value2: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`String`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span></code></pre>\n    <p>{`And in our tests, we've defined a util to test it (`}<inlineCode parentName=\"p\">{`assertContainerWorks`}</inlineCode>{` is less complicated than `}<inlineCode parentName=\"p\">{`assertRoundTrip`}</inlineCode>{`, but the same idea):`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk3\"\n          }}>{`// ExampleAppTests.swift`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`XCTest`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`@testable`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`ExampleApp`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`func`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`assertContainerWorks`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`() {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`let`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` container = `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`Container`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`value1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"abc\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`value2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"abc\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`XCTAssertEqual`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(container.`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`value1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, container.`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`value2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`class`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`ExampleAppTests`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: XCTestCase {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`func`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`testExample`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`() `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`throws`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`        `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`assertContainerWorks`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`()`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    }`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span></code></pre>\n    <p>{`Now, we want to add another test target which uses the same util. Right-clicking ExampleAppTests in the text navigator and choosing \"New Unit Test Target\" gets us that target, which we can call `}<inlineCode parentName=\"p\">{`OtherTests`}</inlineCode>{`:`}</p>\n    <CaptionedImage filename=\"xcodeshared-2.png\" max={400} caption=\"\" alt=\"Xcode UI with 'New Unit Test' menu item selected\" mdxType=\"CaptionedImage\" />\n    <p>{`Our `}<inlineCode parentName=\"p\">{`OtherTests.swift`}</inlineCode>{` looks like:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`XCTest`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`@testable`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`ExampleApp`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`class`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`OtherTests`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: XCTestCase {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`func`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`testExample`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`() `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`throws`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`        `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`assertContainerWorks`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`()`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    }`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span></code></pre>\n    <p>{`But the issue is that this doesn't compile, since `}<inlineCode parentName=\"p\">{`assertContainerWorks`}</inlineCode>{` is defined in `}<inlineCode parentName=\"p\">{`ExampleAppTests`}</inlineCode>{`, not `}<inlineCode parentName=\"p\">{`OtherTests`}</inlineCode>{`.`}</p>\n    <p>{`Our goal is to extract `}<inlineCode parentName=\"p\">{`assertContainerWorks`}</inlineCode>{` into a shared library (we'll call it `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{`) such that:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Both test targets should be able to import it and use `}<inlineCode parentName=\"li\">{`assertContainerWorks`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`SharedTestUtils`}</inlineCode>{` itself should be able to use types from `}<inlineCode parentName=\"li\">{`ExampleApp`}</inlineCode>{` (i.e. it should be able to `}<inlineCode parentName=\"li\">{`@testable import ExampleApp`}</inlineCode>{`)`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"creating-a-static-library\"\n    }}>{`Creating a Static Library`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`If you'd like to practice this part or compare it to your own local Xcode setup, `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/noahsark769/NGSharedTestUtilsTargetExample/commit/d8fb23b14168561000189a71533e79747ade16f3\"\n        }}>{`this commit`}</a>{` is the starting point before the shared library has been created.`}</p>\n    </blockquote>\n    <p>{`The way we'll approach this is to create `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{` as a static library (for more on why we need a static library as opposed to another kind of library, see the next section). The first step is to create the new target:`}</p>\n    <FlowGrid columns={2} mdxType=\"FlowGrid\">\n    <CaptionedImage max={300} filename=\"xcodeshared-3.png\" alt=\"Xcode menu showing the 'New Target' option selected\" caption=\"New Target\" mdxType=\"CaptionedImage\" />\n    <CaptionedImage max={300} filename=\"xcodeshared-4.png\" alt=\"Xcode menu showing the 'Static Library' option selected\" caption=\"Static library\" mdxType=\"CaptionedImage\" />\n    </FlowGrid>\n    <p><inlineCode parentName=\"p\">{`SharedTestUtils.swift`}</inlineCode>{` gets created automatically - we can fill it in with our util (and since it's now in another module, it has to be `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{`):`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk3\"\n          }}>{`// SharedTestUtils.swift`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`XCTest`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`@testable`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`ExampleApp`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`public`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`func`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`assertContainerWorks`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`() {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`let`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` container = `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`Container`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`value1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"abc\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`value2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk8\"\n          }}>{`\"abc\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`XCTAssertEqual`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(container.`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`value1`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`, container.`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`value2`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span></code></pre>\n    <p>{`Now let's go to work by telling Xcode to run the tests:`}</p>\n    <CaptionedImage filename=\"xcodeshared-5.png\" max={400} caption=\"\" alt=\"Xcode UI with the 'Run example app tests' menu item selected\" mdxType=\"CaptionedImage\" />\n    <h2 {...{\n      \"id\": \"compiling-the-shared-library\"\n    }}>{`Compiling the shared library`}</h2>\n    <p>{`(This section goes into detail about how to triage and resolve each issue I ran into - I'm hoping this is helpful for folks who, like me, weren't experienced at building and linking static libraries. If you're looking for a laundry list of what to do to make it work, skip to `}<a parentName=\"p\" {...{\n        \"href\": \"/blog/xcode-shared-test-target#tldr\"\n      }}>{`here`}</a>{`.)`}</p>\n    <h3 {...{\n      \"id\": \"clean-and-run-1\"\n    }}>{`Clean and run #1:`}</h3>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`Use of unresolved identifier 'assertContainerWorks'`}</span></code></pre>\n    <p>{`Makes sense - now that we have `}<inlineCode parentName=\"p\">{`assertContainerWorks`}</inlineCode>{` in a separate library, we need to import the library's Swift module. `}<inlineCode parentName=\"p\">{`import SharedTestUtils`}</inlineCode>{` works, so our tests now look like this:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`XCTest`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`@testable`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`ExampleApp`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`import`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`SharedTestUtils`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}></span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`class`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`ExampleAppTests`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: XCTestCase {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk4\"\n          }}>{`func`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`testExample`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`() `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk15\"\n          }}>{`throws`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` {`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`        `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk11\"\n          }}>{`assertContainerWorks`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`()`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`    }`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`}`}</span></span></code></pre>\n    <h3 {...{\n      \"id\": \"clean-and-run-2\"\n    }}>{`Clean and run #2:`}</h3>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`No such module 'SharedTestUtils'`}</span></code></pre>\n    <p>{`We haven't told Xcode that our test targets depend on `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{` being built, so it hasn't built it for us. We'll need to add `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{` as a dependency in the Xcode project settings (Build Phrases section) for both test targets:`}</p>\n    <FlowGrid columns={2} mdxType=\"FlowGrid\">\n    <CaptionedImage max={300} filename=\"xcodeshared-6.png\" alt=\"Xcode menu showing the plus button in the dependencies menu\" caption=\"New Dependency\" mdxType=\"CaptionedImage\" />\n    <CaptionedImage max={300} filename=\"xcodeshared-7.png\" alt=\"Xcode menu showing the 'SharedTestUtils' library being selected as a dependency\" caption=\"SharedTestUtils\" mdxType=\"CaptionedImage\" />\n    </FlowGrid>\n    <h3 {...{\n      \"id\": \"clean-and-run-3\"\n    }}>{`Clean and run #3:`}</h3>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`Command CompileSwift failed with a nonzero exit code`}</span></code></pre>\n    <p>{`This one is a little harder: looking at the build log in the report navigator, we see the real error: `}<inlineCode parentName=\"p\">{`Failed to load module 'XCTest'`}</inlineCode>{`.`}</p>\n    <CaptionedImage filename=\"xcodeshared-8.png\" max={600} caption=\"\" alt=\"Xcode build output screen showing the failure message\" mdxType=\"CaptionedImage\" />\n    <p>{`This is because we haven't linked the `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{` library against `}<inlineCode parentName=\"p\">{`XCTest`}</inlineCode>{`. We'll need to go to the project settings for `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{`, Build Phases, Link Binary With Libraries and select `}<inlineCode parentName=\"p\">{`XCTest`}</inlineCode>{` from the sheet.`}</p>\n    <FlowGrid columns={2} mdxType=\"FlowGrid\">\n    <CaptionedImage max={300} filename=\"xcodeshared-9.png\" alt=\"Xcode menu showing the plus button in linking menu\" caption=\"Linking Menu\" mdxType=\"CaptionedImage\" />\n    <CaptionedImage max={300} filename=\"xcodeshared-10.png\" alt=\"Xcode menu showing the 'XCTest' library being selected for linking\" caption=\"Selecting XCTest\" mdxType=\"CaptionedImage\" />\n    </FlowGrid>\n    <h3 {...{\n      \"id\": \"clean-and-run-4\"\n    }}>{`Clean and run #4:`}</h3>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`No such module 'ExampleApp'`}</span></code></pre>\n    <p>{`We haven't specified that the `}<inlineCode parentName=\"p\">{`ExampleApp`}</inlineCode>{` target is a dependency of `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{`, so we'll need to add that via Xcode settings as well.`}</p>\n    <FlowGrid columns={2} mdxType=\"FlowGrid\">\n    <CaptionedImage max={300} filename=\"xcodeshared-11.png\" alt=\"Xcode menu showing the plus button in the dependencies menu for SharedTestUtils\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <CaptionedImage max={300} filename=\"xcodeshared-12.png\" alt=\"Xcode menu showing the 'XCTest' library being selected for linking\" caption=\"\" mdxType=\"CaptionedImage\" />\n    </FlowGrid>\n    <h3 {...{\n      \"id\": \"clean-and-run-5\"\n    }}>{`Clean and run #5:`}</h3>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`Undefined symbol: SharedTestUtils.assertContainerWorks() -> ()`}</span></code></pre>\n    <p>{`We've gotten past the compiler errors and we're now on to linker errors. `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{` got compiled, but our test targets aren't linking against it, so the linker doesn't know where to find the executable code for `}<inlineCode parentName=\"p\">{`assertContainerWorks`}</inlineCode>{`. This can be solved in Xcode project settings too - under \"Link Binary with Libraries\" for both test targets, we'll add `}<inlineCode parentName=\"p\">{`libSharedTestUtils.a`}</inlineCode>{`, the static library artifact that results from compiling `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{`.`}</p>\n    <FlowGrid columns={2} mdxType=\"FlowGrid\">\n    <CaptionedImage max={300} filename=\"xcodeshared-13.png\" alt=\"Xcode menu showing the plus button in the linking menu for the test target\" caption=\"Adding a library to link against\" mdxType=\"CaptionedImage\" />\n    <CaptionedImage max={300} filename=\"xcodeshared-14.png\" alt=\"Xcode menu showing the 'libSharedTestUtils.a' library being selected for linking\" caption=\"libSharedTestUtils.a\" mdxType=\"CaptionedImage\" />\n    </FlowGrid>\n    <h3 {...{\n      \"id\": \"clean-and-run-6\"\n    }}>{`Clean and run #6:`}</h3>\n    <p>{`It works!`}</p>\n    <CaptionedImage max={400} filename=\"xcodeshared-15.png\" alt=\"Xcode test run UI showing tests passing\" caption=\"🎉\" mdxType=\"CaptionedImage\" />\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr:`}</h2>\n    <p>{`In order to create a library that depends on app code and is shared between two test targets, you need to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create the library as a Static Library target`}</li>\n      <li parentName=\"ol\">{`Link the library with XCTest`}</li>\n      <li parentName=\"ol\">{`Add your app target as a dependency of the library target`}</li>\n      <li parentName=\"ol\">{`Add the library target as a dependency as all test targets and link all test targets with the `}<inlineCode parentName=\"li\">{`.a`}</inlineCode>{` binary`}</li>\n      <li parentName=\"ol\">{`Import the library into your tests`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"other-options-considered\"\n    }}>{`Other Options Considered`}</h2>\n    <p>{`A static library is only one way to include code in a dependency. I also tried using a Unit Test Bundle, but ran into linker issues - the test targets can't link against `}<inlineCode parentName=\"p\">{`SharedTestUtils`}</inlineCode>{` if it's a Unit Test Bundle, or at least not easily - Xcode doesn't show it in the Link Binary With Libraries setting.`}</p>\n    <p>{`Using a dynamic library (wrapped in a Framework target) is also an option, and it might work well if your utils library just needs `}<inlineCode parentName=\"p\">{`XCTest`}</inlineCode>{` and doesn't need to `}<inlineCode parentName=\"p\">{`@testable import`}</inlineCode>{` your app. However, this is subject to the same issue as a Unit Test Bundle, where you can't link against the app binary. Thanks to `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/NeoNacho/status/1292203466362773505\"\n      }}>{`Boris Bügling for pointing out`}</a>{` that you can get around this with `}<inlineCode parentName=\"p\">{`BUNDLE_LOADER`}</inlineCode>{`, but it turns out if you specify the loader app correctly you end up with the following:`}</p>\n    <pre {...{\n      \"className\": \"dark-default-dark vscode-highlight\",\n      \"data-language\": \"\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}>{`'-bundle_loader <path/to/ExampleApp> not allowed with '-dynamiclib'`}</span></code></pre>\n    <p>{`Apparently `}<inlineCode parentName=\"p\">{`BUNDLE_LOADER`}</inlineCode>{` doesn't work with dynamic libraries, which is why I went with the static library approach in the first place. To be honest, I'm not sure if this is the best way - there could be something I'm totally missing that might allow this to work with a Framework. Please `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/noahsark769\"\n      }}>{`let me know`}</a>{` if you have ideas 👋`}</p>\n    <h2 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h2>\n    <p>{`Hopefully this approach helps folks who want to maintain multiple unit test targets while keeping shared app test utils in common between them. It's worked great in `}<a parentName=\"p\" {...{\n        \"href\": \"https://getfluency.io\"\n      }}>{`Fluency`}</a>{`, but your mileage might vary - if you're interested in discussing this or other Xcode/Swift/iOS related things, you can `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/noahsark769\"\n      }}>{`follow me on Twitter`}</a>{`.`}</p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  \n  .dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }\n`}</style>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}