{"version":3,"sources":["webpack:///./src/pages/blog/swift-dependency-injection.mdx","webpack:///./src/components/default.jsx","webpack:///./src/components/colors.js","webpack:///./src/fonts/Bariol-Regular.eot","webpack:///./src/fonts/Bariol-Regular.woff","webpack:///./src/fonts/Bariol-Regular.ttf","webpack:///./src/fonts/Bariol-Regular.svg","webpack:///./src/components/Nav.jsx","webpack:///./src/components/BlogPost.jsx","webpack:///./src/components/MarkdownContent.jsx","webpack:///./src/lib/dateFormat.js","webpack:///./src/components/EndButtons.jsx","webpack:///./src/lib/twitter.js","webpack:///./src/components/Disqus.jsx","webpack:///./src/components/BlogPageLayout.jsx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","assign","mdxType","parentName","href","className","_components_CaptionedImage__WEBPACK_IMPORTED_MODULE_8__","filename","alt","caption","name","isMDXComponent","GlobalStyle","createGlobalStyle","_templateObject","bariol_eot","bariol_woff","bariol_ttf","bariol_svg","Div","styled","div","withConfig","displayName","componentId","UL","nav","ul","LI","li","P","p","A","a","__webpack_require__","d","__webpack_exports__","blue","blueHighlight","module","exports","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_default__WEBPACK_IMPORTED_MODULE_1__","_components_colors__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","react_icons_io__WEBPACK_IMPORTED_MODULE_4__","react_icons_fa__WEBPACK_IMPORTED_MODULE_5__","StyledNav","Title","NavLinks","NavLink","StyledA","Nav","createElement","blog","aria-label","color","size","BlogPostContainer","darkened","css","TitleContainer","Heading","h1","DateContainer","BlogPostMeta","react_helmet__WEBPACK_IMPORTED_MODULE_2__","title","date","React","Component","Container","MarkdownContent","render","this","children","componentDidMount","elements","ReactDOM","findDOMNode","querySelectorAll","i","length","window","hljs","highlightBlock","formatDateString","dateString","Date","toLocaleDateString","year","month","day","ButtonStyle","margin","Button","react_default","components_default","url","target","newTab","label","EndButtons","text","twitterUrl","tweetTitle","tweetUrl","encodeURIComponent","EndButtons_Button","fa","io","Wrapper","Disqus","id","s","document","src","setAttribute","head","body","appendChild","NonContent","BlogPageLayout","isDarkMode","matchMedia","matches","BlogPageLayout_Container","Helmet","rel","type","content","property","location","pathname","pageContext","frontmatter","staticPreview","BlogPost","EndButtons_EndButtons","Disqus_Disqus","ReactGA","initialize","pageview","search"],"mappings":"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","file":"component---src-pages-blog-swift-dependency-injection-mdx-0820b7231a9737f38260.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/noahgilmore/code/noahgilmore.com/src/components/BlogPageLayout.jsx\";\nimport CaptionedImage from '../../components/CaptionedImage';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`At the most recent `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.meetup.com/swift-language/\"\n      }}>{`Swift Language User Group`}</a>{` meetup, `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/patbarry\"\n      }}>{`Patrick Barry`}</a>{` presented a `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=dA9rGQRwHGs\"\n      }}>{`great talk`}</a>{` about how Lyft implements dependency injection. I'd highly recommend watching the video - I was impressed by how clean and functional the solution they came up with is. I was going to write up a summary for my coworkers, but figured I might as well put it here for the benefit of anyone who's interested.`}</p>\n    <p>{`This post describes the very simple approach to dependency injection presented in the talk, using new functions `}<inlineCode parentName=\"p\">{`bind`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`mock`}</inlineCode>{`. I'll paraphrase some code in this write up, but the concepts and function names will match the talk.`}</p>\n    <p><em parentName=\"p\">{`Edit (4/30/2019): This post describes a nice Swift implementation of a pattern similar to the `}<a parentName=\"em\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Service_locator_pattern\"\n        }}>{`Service Locator Pattern`}</a>{`, considered by many to be a strong anti-pattern. Like Singletons, you should use Service Locator carefully - I've added a `}<a parentName=\"em\" {...{\n          \"href\": \"#downsides\"\n        }}>{`section`}</a>{` at the end about drawbacks of this approach.`}</em></p>\n    <h2>{`Dependency Injection`}</h2>\n    <p>{`I won't go into detail on what dependency injection is, since there's a fair amount of time in the talk dedicated to it. Instead, let's think about an example.`}</p>\n    <p>{`Say we're writing an app to display info about cats. We would have a `}<inlineCode parentName=\"p\">{`Cat`}</inlineCode>{` model in our app:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`struct Cat: Codable {\n    let name: String\n    let image: URL\n}\n`}</code></pre>\n    <p>{`And let's assume we have an API to fetch a cat by name:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /cat?id=2\n{\n    \"name\": \"Maggie\",\n    \"image\": \"https://placekitten.com/200/200\"\n}\n`}</code></pre>\n    <p>{`From an architectural point of view, we want to extract this into two different parts:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A `}<inlineCode parentName=\"li\">{`NetworkService`}</inlineCode>{` which makes the requests`}</li>\n      <li parentName=\"ol\">{`A `}<inlineCode parentName=\"li\">{`CatService`}</inlineCode>{` which exposes a `}<inlineCode parentName=\"li\">{`getCat(id:)`}</inlineCode>{` method (this calls into the network service)`}</li>\n    </ol>\n    <CaptionedImage filename=\"swift-di-1.png\" alt=\"Diagram of CatService calling NetworkService\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <h2>{`Binding`}</h2>\n    <p>{`There's a clear `}<a parentName=\"p\" {...{\n        \"href\": \"#seam\"\n      }}>{`seam`}</a>{` between the `}<inlineCode parentName=\"p\">{`NetworkService`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CatService`}</inlineCode>{` that we can use to test `}<inlineCode parentName=\"p\">{`CatService`}</inlineCode>{`. Let's extract the network's functionality into an interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`protocol NetworkInterface {\n    func makeRequest(\n        url: URL,\n        completion: @escaping (Result<Data, Error>) -> Void\n    )\n}\n`}</code></pre>\n    <p>{`And the concrete implementation:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`private class NetworkService: NetworkInterface {\n    func makeRequest(\n        url: URL,\n        completion: @escaping (Result<Data, Error>) -> Void\n    ) {\n        // Use URLSession, etc\n    }\n}\n`}</code></pre>\n    <p>{`And now for the really interesting part - `}<inlineCode parentName=\"p\">{`NetworkService`}</inlineCode>{` will `}<em parentName=\"p\">{`expose itself using a special function called bind`}</em>{` (I've added the \"SimpleDI\" namespace here):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let getNetwork = SimpleDI.bind(NetworkInterface.self) { NetworkService() }\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`bind`}</inlineCode>{` returns `}<inlineCode parentName=\"p\">{`getNetwork`}</inlineCode>{` as a function which can be called to get a concrete implementation of the `}<inlineCode parentName=\"p\">{`NetworkInterface`}</inlineCode>{` protocol. `}<inlineCode parentName=\"p\">{`CatService`}</inlineCode>{` can then call `}<inlineCode parentName=\"p\">{`getNetwork`}</inlineCode>{` to get access to the network:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`class CatService {\n    func getCat(id: Int, completion: @escaping (Result<Cat, Error>) -> Void) {\n        let network = getNetwork()\n        network.makeRequest(/* ... */)\n    }\n}\n`}</code></pre>\n    <CaptionedImage filename=\"swift-di-2.png\" alt=\"Diagram of CatService calling NetworkService, with bind as an intermediary\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <h2>{`Implementation`}</h2>\n    <p>{`Before we talk about why `}<inlineCode parentName=\"p\">{`bind`}</inlineCode>{` is useful, let's discuss the implementation. `}<inlineCode parentName=\"p\">{`bind`}</inlineCode>{` returns a function which takes no parameters and returns a type of `}<inlineCode parentName=\"p\">{`NetworkInterface`}</inlineCode>{`, but it also takes a closure which will be used to generate the concrete implementation.`}</p>\n    <p><inlineCode parentName=\"p\">{`bind`}</inlineCode>{`'s body looks like this (again, paraphrased a bit from the talk):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`private var instantiators: [String: Any] = [:]\n\nenum SimpleDI {\n    static func bind<T>(\n        _ interfaceType: T.Type,\n        instantiator: @escaping () -> T\n    ) -> () -> T {\n        instantiators[String(describing: interfaceType)] = instantiator\n        return self.instance\n    }\n\n    private static func instance<T>() -> T {\n        let key = String(describing: T.self)\n        let instantiator = instantiators[key] as! () -> T\n        return instantiator()\n    }\n}\n`}</code></pre>\n    <p>{`We take the closure that we're passed and save it in a dictionary (`}<a parentName=\"p\" {...{\n        \"href\": \"#dictionary-atomic\"\n      }}>{`see end note`}</a>{`), then return a function which accesses and calls the closure we provided. Though we have to do some force casting, we're guaranteed that the closure we need will be there when `}<inlineCode parentName=\"p\">{`getNetworkInterface`}</inlineCode>{` is called, since we put it into `}<inlineCode parentName=\"p\">{`instantiators`}</inlineCode>{` before returning from `}<inlineCode parentName=\"p\">{`bind`}</inlineCode>{`.`}</p>\n    <h2>{`Testability`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`bind`}</inlineCode>{` adds a level of indirection at the seam between `}<inlineCode parentName=\"p\">{`NetworkService`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CatService`}</inlineCode>{`, which allows us to stub in a mock in tests. In order to do that, we need to define `}<inlineCode parentName=\"p\">{`mock`}</inlineCode>{` as well, and add a bit of more infrastructure:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`private var instantiators: [String: Any] = [:]\nprivate var mockInstantiators: [String: Any] = [:]\n\nenum SimpleDI {\n    static var isTestEnvironment = false\n\n    static func bind<T>(\n        _ type: T.Type,\n        instantiator: @escaping () -> T\n    ) -> () -> T {\n        instantiators[String(describing: type)] = instantiator\n        return self.instance\n    }\n\n    private static func instance<T>() -> T {\n        let key = String(describing: T.self)\n        if self.isTestEnvironment {\n            guard let instantiator = mockInstantiators[key] as? () -> T else {\n                fatalError(\"Type \\\\\\\\(key) unmocked in test!\")\n            }\n            return instantiator()\n        }\n        let instantiator = instantiators[key] as! () -> T\n        return instantiator()\n    }\n\n    static func mock<T>(_ type: T.Type, instantiator: @escaping () -> T) {\n        mockInstantiators[String(describing: type)] = instantiator\n    }\n}\n`}</code></pre>\n    <p>{`This code isn't very pretty - in fact, checks like `}<inlineCode parentName=\"p\">{`isTestEnvironment`}</inlineCode>{` are generally a code smell that mean you should refactor how the class works to avoid the check. However, this enables us to write tests very easily: all we have to do is set `}<inlineCode parentName=\"p\">{`isTestEnvironment = true`}</inlineCode>{`, and we'll be able to `}<a parentName=\"p\" {...{\n        \"href\": \"#mock\"\n      }}>{`stub in a mock`}</a>{` immediately using `}<inlineCode parentName=\"p\">{`mock`}</inlineCode>{`.`}</p>\n    <h2>{`Example`}</h2>\n    <p>{`Let's say we want to write a test which makes sure CatService reports an error when the underlying network errors:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`class NetworkThatAlwaysErrors: NetworkInterface {\n    func makeRequest(url: URL, completion: @escaping (Result<Data>) -> Void) {\n        completion(.error(error: NSError(domain: \"\", code: 0, userInfo: nil)))\n    }\n}\n\nclass CatServiceTestCase: XCTestCase {\n    func testCatServiceReportsError() {\n        SimpleDI.isTestEnvironment = true\n        SimpleDI.mock(NetworkInterface.self) { NetworkThatAlwaysErrors() }\n\n        let expecation = self.expectation(description: \"Should return error\")\n        let service = CatService()\n        service.getCatImage(named: \"Maggie\", completion: { result in\n            if case .error = result {\n                expecation.fulfill()\n            }\n        })\n        self.waitForExpectations(timeout: 0.2)\n    }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`bind`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`mock`}</inlineCode>{` take the dirty work of setting up the DI/mocking infrastructure and hide it under the rug, allowing us to write more expressive tests easily.`}</p>\n    <CaptionedImage filename=\"swift-di-3.png\" alt=\"Diagram of bind and mock being used to separate CatService and NetworkService and stub in a mock in tests\" caption=\"\" mdxType=\"CaptionedImage\" />\n    <p>{`Some interesting things to note:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Many people who've worked with DI have horror stories of passing 10/15+ dependencies into an initializer so they can be mocked in tests. `}<inlineCode parentName=\"li\">{`bind`}</inlineCode>{` brings the argument count down to 0 without sacrificing testability, and makes both the service and the test more elegant.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`bind`}</inlineCode>{` will error if you forget to mock out an interface in a test, so you're never accidentally calling deeper into dependencies than you mean to.`}</li>\n    </ol>\n    <a name=\"downsides\"></a>\n    <h2>{`Downsides`}</h2>\n    <p>{`This approach is very similar to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Service_locator_pattern\"\n      }}>{`Service Locator Pattern`}</a>{`, which is commonly criticized. I really enjoyed `}<a parentName=\"p\" {...{\n        \"href\": \"https://badootech.badoo.com/singleton-service-locator-and-tests-in-ios-d69484e88944\"\n      }}>{`this article`}</a>{` about Service Locator in iOS, and there are a few downsides that I should mention:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Using a service locator registry like `}<inlineCode parentName=\"li\">{`bind`}</inlineCode>{` means you have implicit instead of explicit dependencies. Instead of knowing explicitly that `}<inlineCode parentName=\"li\">{`CatService`}</inlineCode>{` depends on `}<inlineCode parentName=\"li\">{`NetworkService`}</inlineCode>{`, you have to look for the call to `}<inlineCode parentName=\"li\">{`getNetwork`}</inlineCode>{`. There's a tradeoff between the simplicity of using a service locator and the fact that it can make services with many dependencies more complex to reason about.`}</li>\n      <li parentName=\"ol\">{`With `}<inlineCode parentName=\"li\">{`bind`}</inlineCode>{`, it can be tough to recognize that you can update a test when a dependency of a service is removed. If `}<inlineCode parentName=\"li\">{`CatService`}</inlineCode>{` stopped calling out to the network, it's wouldn't be immediately apparent that `}<inlineCode parentName=\"li\">{`NetworkThatAlwaysErrors`}</inlineCode>{` could be deleted. This can lead to unnessary cognitive overhead in tests.`}</li>\n      <li parentName=\"ol\">{`When calling `}<inlineCode parentName=\"li\">{`mock`}</inlineCode>{`, you have to be `}<em parentName=\"li\">{`very`}</em>{` careful to set up your testing framework such that all the mocks get cleared after every test. Otherwise, you might have different behavior based on the order the tests are run, which can lead to flakes.`}</li>\n    </ol>\n    <h2>{`Conclusion`}</h2>\n    <p>{`It was really interesting to see how Lyft was able to come up with such a simple solution to a complex problem. I'd really recommend watching `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=dA9rGQRwHGs\"\n      }}>{`the talk`}</a>{` if you're interested in dependency injection and testing. If you'd like to see a working example of `}<inlineCode parentName=\"p\">{`bind`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`mock`}</inlineCode>{`, I've put one `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/noahsark769/NGSimpleDIExample\"\n      }}>{`here`}</a>{` (it has a few differences from the code in this post in order to demonstrate an actual working request and test).`}</p>\n    <h2>{`Footnotes`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a name=\"dictionary-atomic\"></a>Dictionary is not thread safe, so if you want to use `bind` and `mock` on multiple threads you'll need to implement something similar to an [atomic box](https://www.objc.io/blog/2018/12/18/atomic-variables/) (the talk mentions this).</li>\n      <li parentName=\"ol\"><a name=\"seam\"></a>\"[Seam](http://wiki.c2.com/?SoftwareSeam)\" is a concept that seems to have been first coined in [Working Effectively With Legacy Code](https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052). It's defined as \"[a place where two parts of the software meet and where something else can be injected](https://softwareengineering.stackexchange.com/questions/132563/problem-with-understanding-seam-word/311122)\".</li>\n      <li parentName=\"ol\"><a name=\"mock\"></a>You could even put `mock` in your test target to make sure it can't be called in production!</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import styled from \"styled-components\";\nimport { createGlobalStyle } from 'styled-components'\nimport bariol_eot from '../fonts/Bariol-Regular.eot';\nimport bariol_woff from '../fonts/Bariol-Regular.woff';\nimport bariol_ttf from '../fonts/Bariol-Regular.ttf';\nimport bariol_svg from '../fonts/Bariol-Regular.svg';\n\nexport const GlobalStyle = createGlobalStyle`\n    @font-face {\n        font-family: 'Bariol';\n        src: url('${bariol_eot}');\n        src: url('${bariol_eot}?#iefix') format('embedded-opentype'),\n             url('${bariol_woff}') format('woff'),\n             url('${bariol_ttf}') format('truetype'),\n             url('${bariol_svg}#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nexport const Div = styled.div``;\nexport const Nav = styled.nav``;\nexport const UL = styled.ul`\n    margin: 0;\n    padding: 0;\n`;\nexport const LI = styled.li`\n    margin: 0;\n    padding: 0;\n`;\nexport const P = styled.p`\n    margin: 0;\n    padding: 0;\n`;\n\nexport const A = styled.a`\n    &, &:hover, &:focus {\n        outline: none;\n        color: inherit;\n        text-decoration: none;\n    }\n`;","export const blue = 'rgba(128, 165, 177, 1)';\nexport const blueHighlight = 'rgba(151, 195, 210, 1)';","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot\";","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff\";","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf\";","module.exports = __webpack_public_path__ + \"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg\";","import React from 'react';\nimport { A, UL, LI } from '../components/default';\nimport { blue, blueHighlight } from '../components/colors';\nimport styled from \"styled-components\";\nimport { IoIosHome, IoIosAppstore } from \"react-icons/io\";\nimport { FaTwitter } from \"react-icons/fa\";\n\nconst StyledNav = styled.nav`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 60px;\n    border-bottom: 1px solid #ddd;\n\n    @media all and (max-width: 600px) {\n        padding: 20px;\n    }\n\n    @media (prefers-color-scheme: dark) {\n        border-color: #777;\n    }\n`;\n\nconst Title = styled.div`\n    flex: 2;\n    font-family: \"Roboto\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n    font-size: 28px;\n    font-display: swap;\n\n    @media (prefers-color-scheme: dark) {\n        color: #fff;\n    }\n`;\n\nconst NavLinks = styled(UL)`\n    flex: 10;\n    display: flex;\n    flex-direction: horizontal;\n    flex-wrap: wrap;\n    justify-content: flex-end;\n    height: 100%;\n    align-self: center;\n`;\n\nconst NavLink = styled(LI)`\n    display: flex;\n    flex-direction: vertical;\n    align-items: center;\n    text-align: center;\n    font-family: \"Bariol\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n    font-size: 16px;\n    padding: 0px 20px;\n`;\n\nconst StyledA = styled(A)`\n    height: auto;\n    color: ${blue};\n    display: flex;\n    flex-direction: vertical;\n    align-items: center;\n\n    -webkit-transition: 0.2s ease-in-out;\n    -moz-transition: 0.2s ease-in-out;\n    -o-transition: 0.2s ease-in-out;\n    transition: 0.2s ease-in-out;\n\n    &:hover {\n        color: ${blueHighlight};\n    }\n`;\n\nconst Nav = (props) => {\n    return (\n        <StyledNav>\n            <Title><StyledA href={props.blog ? '/blog' : '/'}>NOAH GILMORE</StyledA></Title>\n            <NavLinks>\n                <NavLink><StyledA aria-label=\"Blog Home\" href=\"/blog\"><IoIosHome color={blue} size=\"24\" /></StyledA></NavLink>\n                <NavLink><StyledA aria-label=\"Twitter\" href=\"https://twitter.com/noahsark769\"><FaTwitter color={blue} size=\"24\" /></StyledA></NavLink>\n                <NavLink><StyledA aria-label=\"App Store\" href=\"https://appstore.com/trestle\"><IoIosAppstore color={blue} size=\"24\" /></StyledA></NavLink>\n            </NavLinks>\n        </StyledNav>\n    );\n};\n\nexport default Nav;","import React from 'react';\nimport styled, { css } from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\n\nexport const BlogPostContainer = styled.div`\n    padding: 60px 0;\n    margin: 0 auto;\n    width: 90%;\n    @media all and (min-width: 600px) {\n        max-width: 700px;\n        margin: auto;\n    }\n\n    @media all and (max-width: 600px) {\n        width: 100%;\n        padding: 20px 0;\n        ${(props) => props.darkened && css`\n            background-color: #f6f6f6;\n            @media (prefers-color-scheme: dark) {\n                background-color: inherit;\n            }\n        `}\n    }\n`;\n\nconst TitleContainer = styled.div`\n    width: 100%;\n    margin-bottom: 40px;\n`;\n\nconst Heading = styled.h1`\n    width: 100%;\n    font-family: \"Roboto\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n    font-size: 34px;\n    margin-bottom: 10px;\n\n    @media (prefers-color-scheme: dark) {\n        color: #fff;\n    }\n`;\n\nconst DateContainer = styled.p`\n    font-family: \"Gentium Book Basic\", times, serif;\n    font-style: italic;\n    font-size: 16px;\n    color: #999;\n`;\n\nexport const BlogPostMeta = (props) => {\n    return (\n        <div>\n            <Helmet>\n                <title>{props.title}</title>\n            </Helmet>\n            <TitleContainer>\n                <Heading>{props.title}</Heading>\n                <DateContainer>{props.date}</DateContainer>\n            </TitleContainer>\n        </div>\n    );\n};\n\nexport default class BlogPost extends React.Component {\n    render() {\n        return (\n            <BlogPostContainer>\n                <div>\n                    {this.props.children}\n                </div>\n            </BlogPostContainer>\n        );\n    }\n};\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    p, li {\n        margin: 0;\n        padding: 0;\n        font-family: \"Gentium Book Basic\", times, serif;\n        font-size: 21px;\n        line-height: 29px;\n        color: #333;\n        padding-bottom: 15px;\n        margin-top: 15px;\n        @media all and (max-width: 600px) {\n            width: 90%;\n            margin: 15px auto 0 auto;\n        }\n\n        @media (prefers-color-scheme: dark) {\n            color: #fff;\n        }\n    }\n\n    blockquote {\n        background-color: #faf9f7;\n        border-left: 4px solid #e5e4e1;\n        padding: 20px;\n        font-style: italic;\n\n        @media (prefers-color-scheme: dark) {\n            background-color: #3f3f3f;\n        }\n\n        p {\n            margin: 0;\n            padding: 0;\n            color: #555;\n\n            @media (prefers-color-scheme: dark) {\n                color: #fff;\n            }\n        }\n    }\n\n    a {\n        color: #1A3F4B;\n        -webkit-transition: 0.2s ease-in-out;\n        -moz-transition: 0.2s ease-in-out;\n        -o-transition: 0.2s ease-in-out;\n        transition: 0.2s ease-in-out;\n\n        @media (prefers-color-scheme: dark) {\n            color: #60b5d1;\n        }\n    }\n    a:hover {\n        color: #47656E;\n\n        @media (prefers-color-scheme: dark) {\n            color: #6bcfef;\n        }\n    }\n    code {\n        font-family: monospace;\n        font-size: 16px;\n        background-color: #faf9f7;\n        border: 1px solid #e5e4e1;\n        padding: 3px 5px;\n        margin: 0px 2px;\n        color: #555;\n\n        @media (prefers-color-scheme: dark) {\n            color: #fff;\n            background-color: #3f3f3f;\n        }\n    }\n    code:not(pre code) {\n        font-family: monospace;\n        font-size: 16px;\n        background-color: #faf9f7;\n        border: 1px solid #e5e4e1;\n        padding: 3px 5px;\n        margin: 0px 2px;\n        color: #555;\n\n        @media (prefers-color-scheme: dark) {\n            color: #fff;\n            background-color: #3f3f3f;\n        }\n    }\n    code:first-child {\n        margin-left: 0;\n    }\n    pre {\n        display: block;\n        margin: 0;\n        padding: 0;\n        background: none;\n        @media all and (max-width: 600px) {\n            width: 100%;\n            margin: 0 auto;\n        }\n    }\n    pre > code {\n        display: block;\n        margin: 0;\n        padding: 0;\n        border: 1px solid #e5e4e1;\n        border-radius: 2px;\n        padding: 10px;\n        margin-top: 10px;\n        font-family: monospace;\n        font-size: 14px;\n        line-height: 17px;\n        white-space: pre-wrap;\n\n        @media all and (max-width: 600px) {\n            font-size: 15px;\n            white-space: pre;\n            border-left: none;\n            border-right: none;\n            padding: 15px 5% 15px 5%;\n            width: 100%;\n        }\n    }\n\n    pre > code.language-nohighlight {\n        @media (prefers-color-scheme: dark) {\n            color: #fff;\n            background-color: #3f3f3f;\n        }\n    }\n\n    pre + p {\n        margin-top: 30px;\n    }\n    ol {\n        margin-left: 30px;\n        @media all and (max-width: 600px) {\n            width: 90%;\n            margin: 0 auto 0 30px;\n        }\n\n        @media (prefers-color-scheme: dark) {\n            color: #fff;\n        }\n    }\n    ol li {\n        list-style-type: decimal;\n    }\n    ul li {\n        list-style-type: square;\n        margin-left: 40px;\n        @media all and (max-width: 600px) {\n            width: 90%;\n            margin: 0 auto;\n        }\n\n        @media (prefers-color-scheme: dark) {\n            color: #fff;\n        }\n    }\n    h1, h2, h3, h4, h5, h6 {\n        width: 100%;\n        font-family: \"Roboto\", \"Helvetica Neue\", \"Helvetica\", sans-serif;\n        margin-bottom: 10px;   \n        margin-top: 40px;\n        @media all and (max-width: 600px) {\n            width: 90%;\n            margin: 40px auto 10px auto;\n        }\n\n        @media (prefers-color-scheme: dark) {\n            color: #fff;\n        }\n    }\n    h1 {\n        font-size: 28px;\n    }\n    h2 {\n        font-size: 24px;\n    }\n    h3 {\n        font-size: 20px;\n    }\n\n    em {\n        font-style: italic;\n    }\n\n    strong {\n        font-weight: bold;\n    }\n`;\n\nexport default class MarkdownContent extends React.Component {\n    render() {\n        return (\n            <Container>\n                {this.props.children}\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        const node = ReactDOM.findDOMNode(this);\n        var elements = node.querySelectorAll(\"pre code\");\n        // this next line has to be stuck in the 90's\n        // https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\n        for (var i = 0; i < elements.length; i++) {\n            // I would love to import the node version of hljs here, but it turns out\n            // this doesn't work due to something in gatsby-mdx's rendering. Oh well,\n            // we just import it in html.js and use the window version here.\n            window.hljs && window.hljs.highlightBlock(elements[i]);\n        }\n    }\n}","export function formatDateString(dateString) {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {year: 'numeric', month: 'long', day: 'numeric'});\n}","import React from 'react';\nimport { A } from '../components/default';\nimport styled, { css } from \"styled-components\";\nimport { IoIosHome } from \"react-icons/io\";\nimport { FaTwitter } from \"react-icons/fa\";\nimport { blue, blueHighlight } from '../components/colors';\nimport { formatTweetIntentUrl } from '../lib/twitter';\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: horizontal;\n    align-items: center;\n    justify-content: center;\n    margin-top: 40px;\n`;\n\nconst ButtonStyle = styled.div`\n    background-color: ${blue};\n    -webkit-transition: 0.2s ease-in-out;\n    -moz-transition: 0.2s ease-in-out;\n    -o-transition: 0.2s ease-in-out;\n    transition: 0.2s ease-in-out;\n\n    &:hover {\n        background-color: ${blueHighlight};\n    }\n\n    width: 100px;\n    padding: 10px 20px;\n    text-align: center;\n    display: flex;\n    flex-direction: vertical;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    ${(props) => props.margin && css`\n        margin-right: 20px;\n    `};\n`;\nconst Button = (props) => {\n    return (\n        <A href={props.url} target={props.newTab ? '_blank' : null} aria-label={props.label}><ButtonStyle margin={props.margin}>{props.children}</ButtonStyle></A>\n    );\n};\n\nexport default class EndButtons extends React.Component {\n    render() {\n        const twitterUrl = formatTweetIntentUrl(`Post by @noahsark769: ${this.props.tweetTitle} ${this.props.tweetUrl}`);\n        return (\n            <Container>\n                <Button label=\"Twitter\" url={twitterUrl} newTab margin><FaTwitter size={24} color='white'/></Button>\n                <Button label=\"Blog homepage\" url=\"/blog\"><IoIosHome size={24} color='white' /></Button>\n            </Container>\n        );\n    }\n};\n","export function formatTweetIntentUrl(text) {\n    const encodedText = encodeURIComponent(text);\n    return `https://twitter.com/intent/tweet?text=${encodedText}`;\n}","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    margin-top: 80px;\n`;\n\nexport default class Disqus extends React.Component {\n    render() {\n        return (\n            <Wrapper>\n                <div id=\"disqus_thread\"></div>\n            </Wrapper>\n        )\n    }\n\n    componentDidMount() {\n       /**\n        *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n        *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n        /*\n        var disqus_config = function () {\n        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\n        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n        };\n        */\n        (function() { // DON'T EDIT BELOW THIS LINE\n        var d = document, s = d.createElement('script');\n        s.src = '//noahgilmore-com.disqus.com/embed.js';\n        s.setAttribute('data-timestamp', +new Date());\n        (d.head || d.body).appendChild(s);\n        })();     \n    }\n}","import React from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { GlobalStyle } from './default';\nimport Nav from './Nav';\nimport EndButtons from './EndButtons';\nimport { BlogPostContainer, BlogPostMeta } from './BlogPost';\nimport MarkdownContent from './MarkdownContent';\nimport { formatDateString } from '../lib/dateFormat';\nimport Disqus from './Disqus';\nimport ReactGA from 'react-ga';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  @media (prefers-color-scheme: dark) {\n    background-color: #2b2c2f;\n  }\n`;\n\nconst NonContent = styled.div`\n    @media all and (max-width: 600px) {\n        padding-right: 5%;\n        padding-left: 5%;\n    }\n`;\n\nexport default class BlogPageLayout extends React.Component {\n    render() {\n      let isDarkMode = (typeof window !== 'undefined' && window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\n        return (\n            <Container>\n              <GlobalStyle />\n              <Helmet>\n                  <link href='https://fonts.googleapis.com/css?family=Roboto:700' rel='stylesheet' type='text/css' />\n                  <link href=\"https://fonts.googleapis.com/css?family=Gentium+Book+Basic\" rel=\"stylesheet\" />\n                  {!isDarkMode && <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/atom-one-light.min.css\" />}\n                  {isDarkMode && <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/zenburn.min.css\" />}\n                  <meta name=\"twitter:card\" content=\"summary\" />\n                  <meta name=\"twitter:creator\" content=\"@noahsark769\" />\n                  <meta property=\"og:url\" content={`https://noahgilmore.com${this.props.location.pathname}`} />\n                  <meta property=\"og:title\" content={this.props.pageContext.frontmatter.title} />\n                  <meta property=\"og:description\" content={this.props.pageContext.frontmatter.staticPreview} />\n                  <meta name=\"description\" content={this.props.pageContext.frontmatter.staticPreview} />\n              </Helmet>\n              <Nav blog />\n              <BlogPostContainer>\n                <NonContent>\n                  <BlogPostMeta\n                      title={this.props.pageContext.frontmatter.title}\n                      date={formatDateString(this.props.pageContext.frontmatter.date)} />\n                </NonContent>\n                <MarkdownContent>\n                  {this.props.children}\n                </MarkdownContent>\n                <NonContent>\n                  <EndButtons tweetTitle={this.props.pageContext.frontmatter.title} tweetUrl={`https://noahgilmore.com${this.props.location.pathname}`} />\n                  <Disqus />\n                </NonContent>\n              </BlogPostContainer>\n            </Container>\n        )\n    }\n\n    componentDidMount() {\n        ReactGA.initialize('UA-35325391-1');\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n}\n"],"sourceRoot":""}