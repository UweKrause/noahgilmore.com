(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{HZyh:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return b})),a.d(t,"default",(function(){return m}));a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("91GP"),a("q1tI");var n=a("E/Ix"),s=a("1zrH"),i=a("Qjvx"),c=a("D+Sk");a("5yWb");var b={},p={_frontmatter:b},o=s.a;function m(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,["components"]);return Object(n.b)(o,Object.assign({},p,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Pop quiz: in a ",Object(n.b)("inlineCode",{parentName:"p"},"UIButton"),", how do you set a padding of 10pt between the image and the title?"),Object(n.b)(i.a,{max:200,filename:"uibutton-padding-1.png",alt:"Image showing 10pt padding between title and image of a UIButton",caption:"If you're looking for a code snippet, skip to the bottom :)",mdxType:"CaptionedImage"}),Object(n.b)("p",null,"I had to do this at work recently, and I was surprised at how hard it was to reason about. There are several posts talking about this topic (including ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://medium.com/short-swift-stories/using-uiedgeinsets-to-layout-a-uibutton-44ba04dd085c"}),"this one")," which uses edge insets to flip the title and image!), but the answer for my use case was pretty hard to find."),Object(n.b)("p",null,"Adding image-title padding is possible, but takes some trickiness with ",Object(n.b)("inlineCode",{parentName:"p"},"contentEdgeInsets"),", ",Object(n.b)("inlineCode",{parentName:"p"},"titleEdgeInsets"),", and ",Object(n.b)("inlineCode",{parentName:"p"},"imageEdgeInsets"),"."),Object(n.b)("h1",{id:"uibutton-insets"},"UIButton Insets"),Object(n.b)("p",null,"To understand why adding image-title padding is hard, we have to look at UIButton's various insets properties, which control how the UIButton is drawn (in different ways)."),Object(n.b)("h2",{id:"contentedgeinsets"},"contentEdgeInsets"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"contentEdgeInsets")," is probably the easiest insets property to reason about. The insets apply padding to the content of the button, and they're taken into account in the button's ",Object(n.b)("inlineCode",{parentName:"p"},"instrinsicContentSize")," (which was what I expected)."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Positive values expand the button away from its content"),Object(n.b)("li",{parentName:"ul"},"Negative values contract the button towards its content")),Object(n.b)("p",null,"With negative ",Object(n.b)("inlineCode",{parentName:"p"},"contentEdgeInsets"),", it's possible to get the image and text to draw outside of the button's bounds."),Object(n.b)(c.a,{columns:2,mdxType:"FlowGrid"},Object(n.b)(i.a,{max:300,filename:"content-top.gif",alt:"contentEdgeInsets top",caption:"Top",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"content-left.gif",alt:"contentEdgeInsets left",caption:"Left",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"content-bottom.gif",alt:"contentEdgeInsets bottom",caption:"Bottom",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"content-right.gif",alt:"contentEdgeInsets right",caption:"Right",mdxType:"CaptionedImage"})),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"contentEdgeInsets"),' is the closest thing available to "padding" within UIButton.'),Object(n.b)("h2",{id:"imageedgeinsets"},"imageEdgeInsets"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"imageEdgeInsets")," affects the drawing rect of the button's image, and does ",Object(n.b)("em",{parentName:"p"},"not")," figure into the button's ",Object(n.b)("inlineCode",{parentName:"p"},"intrinsicContentSize")," (this is different than ",Object(n.b)("inlineCode",{parentName:"p"},"contentEdgeInsets"),", which contributes to the ",Object(n.b)("inlineCode",{parentName:"p"},"intrinsicContentSize"),")."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Positive values contract the drawing rect towards the image's center"),Object(n.b)("li",{parentName:"ul"},"Negative values expand the drawing rect away from the image's center")),Object(n.b)("p",null,"Because ",Object(n.b)("inlineCode",{parentName:"p"},"imageEdgeInsets")," modifies the drawing rect, setting positive values can result in a squished image - with correct insets, you can actually flip the image! Negative values have the effect of translating the image, they expand the drawing rect back instead of contracting it."),Object(n.b)(c.a,{columns:2,mdxType:"FlowGrid"},Object(n.b)(i.a,{max:300,filename:"image-top.gif",alt:"imageEdgeInsets top",caption:"Top",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"image-left.gif",alt:"imageEdgeInsets left",caption:"Left",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"image-bottom.gif",alt:"imageEdgeInsets bottom",caption:"Bottom",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"image-right.gif",alt:"imageEdgeInsets right",caption:"Right",mdxType:"CaptionedImage"})),Object(n.b)("p",null,"Interestingly, ",Object(n.b)("inlineCode",{parentName:"p"},"UIButton")," seems to have some issues with positive left and right edge insets - if you have an idea of why, please ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769"}),"let me know"),"."),Object(n.b)("p",null,"Also interestingly, negative values of equal magnitudes cancel each other out!"),Object(n.b)(i.a,{max:300,filename:"uibutton-cancellout.png",alt:"With all insets the same negative value, the button looks the same",caption:"",mdxType:"CaptionedImage"}),Object(n.b)("h2",{id:"titleedgeinsets"},"titleEdgeInsets"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"titleEdgeInsets")," affects the drawing rect of the button's title, and like ",Object(n.b)("inlineCode",{parentName:"p"},"imageEdgeInsets")," does ",Object(n.b)("em",{parentName:"p"},"not")," contribute to the button's ",Object(n.b)("inlineCode",{parentName:"p"},"intrinsicContentSize"),"."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Positive values contract the drawing rect towards the center of the title"),Object(n.b)("li",{parentName:"ul"},"Negative values expand the drawing rect away from the center of the title")),Object(n.b)("p",null,"As the title's drawing rect compresses (i.e., as positive insets are added), letters get cut off with ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769/status/1125608257806979073"}),"ellipses"),". As with ",Object(n.b)("inlineCode",{parentName:"p"},"imageEdgeInsets"),", negative values translate the text without otherwise affecting the button's layout."),Object(n.b)(c.a,{columns:2,mdxType:"FlowGrid"},Object(n.b)(i.a,{max:300,filename:"title-top.gif",alt:"titleEdgeInsets top",caption:"Top",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"title-left.gif",alt:"titleEdgeInsets left",caption:"Left",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"title-bottom.gif",alt:"titleEdgeInsets bottom",caption:"Bottom",mdxType:"CaptionedImage"}),Object(n.b)(i.a,{max:300,filename:"title-right.gif",alt:"titleEdgeInsets right",caption:"Right",mdxType:"CaptionedImage"})),Object(n.b)("h2",{id:"image-title-padding"},"Image-title padding"),Object(n.b)("p",null,"Though there's no built in way to put padding between the image and the title of a ",Object(n.b)("inlineCode",{parentName:"p"},"UIButton"),", we can fake it by using what we know about the various inset properties. Let's assume we want a button with 10pt padding around the content and 10pt padding between the image and the title. We'll:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Add 10pt to all edges of the ",Object(n.b)("inlineCode",{parentName:"li"},"contentEdgeInsets")),Object(n.b)("li",{parentName:"ol"},"Add 10pt to the left edge of the ",Object(n.b)("inlineCode",{parentName:"li"},"titleEdgeInsets")," to shift the button to the right"),Object(n.b)("li",{parentName:"ol"},"Add ",Object(n.b)("em",{parentName:"li"},"negative")," 10pt to the ",Object(n.b)("em",{parentName:"li"},"right")," edge of the ",Object(n.b)("inlineCode",{parentName:"li"},"titleEdgeInsets")," since we have to make sure the button doesn't get cut off by ellipsis - adding this negative padding preserves the text's original drawing rect"),Object(n.b)("li",{parentName:"ol"},"Add 10pt ",Object(n.b)("em",{parentName:"li"},"more")," to the right edge of the ",Object(n.b)("inlineCode",{parentName:"li"},"contentEdgeInsets")," to account for the button being moved 10pt to the right")),Object(n.b)("p",null,"The final product ends up looking like this:"),Object(n.b)(i.a,{max:300,filename:"uibutton-wireframe.png",alt:"Wireframe explaining the incantation required to add padding between the image and title of a UIButton",caption:"Magic incantation",mdxType:"CaptionedImage"}),Object(n.b)("p",null,"Once we know how to do this, we can extract it to a method:"),Object(n.b)("pre",{className:"dark-default-dark vscode-highlight","data-language":"swift"},Object(n.b)("code",Object.assign({parentName:"pre"},{className:"vscode-highlight-code"}),Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"extension"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk10"}),"UIButton"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," {")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"func"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"setInsets"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"forContentPadding"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"contentPadding"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": UIEdgeInsets,")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"imageTitlePadding"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": CGFloat")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    ) {")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"contentEdgeInsets"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"UIEdgeInsets"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"top"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": contentPadding."),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"top"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"left"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": contentPadding."),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"left"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"bottom"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": contentPadding."),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"bottom"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"right"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": contentPadding."),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"right"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," + imageTitlePadding")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        )")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk4"}),"self"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"."),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk12"}),"titleEdgeInsets"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"})," = "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"UIEdgeInsets"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"(")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"top"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"left"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": imageTitlePadding,")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"bottom"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk7"}),"0"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),",")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"            "),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk11"}),"right"),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),": -imageTitlePadding")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"        )")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"    }")),"\n",Object(n.b)("span",Object.assign({parentName:"code"},{className:"vscode-highlight-line"}),Object(n.b)("span",Object.assign({parentName:"span"},{className:"mtk1"}),"}")))),Object(n.b)("h2",{id:"conclusion"},"Conclusion"),Object(n.b)("p",null,"Hopefully this post helps some folks wrap their heads around a ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769/status/1123798154082758656"}),"weird")," UIKit API. If you're looking for a truly customizable ",Object(n.b)("inlineCode",{parentName:"p"},"UIButton"),", don't forget that you can subclass ",Object(n.b)("inlineCode",{parentName:"p"},"UIControl")," directly and use your own layout entirely - I did this for ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8"}),"Trestle")," and it worked well, even when I needed SVGs (!) inside the button."),Object(n.b)("p",null,"If you're interested in learning more about what I've built with UIKit (like ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/blog/popover-uinavigationcontroller-preferredcontentsize"}),"making UINavigationController animate inside a popover"),"), you can ",Object(n.b)("strong",{parentName:"p"},Object(n.b)("a",Object.assign({parentName:"strong"},{href:"https://twitter.com/noahsark769"}),"follow me on Twitter")),"."),Object(n.b)("p",null,"The code for all the examples in this post can be found at ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/noahsark769/NGUIButtonInsetsExample"}),"NGUIButtonInsetsExample"),"."),Object(n.b)(i.a,{max:300,filename:"uibutton-final.png",alt:"Screenshot of the sample app displaying a UIButton with image-title padding.",caption:"",mdxType:"CaptionedImage"}),Object(n.b)("style",{className:"vscode-highlight-styles"},"\n  \n  .dark-default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.dark-default-dark .mtk1 { color: #D4D4D4; }\n.dark-default-dark .mtk2 { color: #1E1E1E; }\n.dark-default-dark .mtk3 { color: #6A9955; }\n.dark-default-dark .mtk4 { color: #569CD6; }\n.dark-default-dark .mtk5 { color: #D16969; }\n.dark-default-dark .mtk6 { color: #D7BA7D; }\n.dark-default-dark .mtk7 { color: #B5CEA8; }\n.dark-default-dark .mtk8 { color: #CE9178; }\n.dark-default-dark .mtk9 { color: #646695; }\n.dark-default-dark .mtk10 { color: #4EC9B0; }\n.dark-default-dark .mtk11 { color: #DCDCAA; }\n.dark-default-dark .mtk12 { color: #9CDCFE; }\n.dark-default-dark .mtk13 { color: #000080; }\n.dark-default-dark .mtk14 { color: #F44747; }\n.dark-default-dark .mtk15 { color: #C586C0; }\n.dark-default-dark .mtk16 { color: #6796E6; }\n.dark-default-dark .mtk17 { color: #808080; }\n.dark-default-dark .mtki { font-style: italic; }\n.dark-default-dark .mtkb { font-weight: bold; }\n.dark-default-dark .mtku { text-decoration: underline; text-underline-position: under; }\n"))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-blog-uibutton-padding-mdx-46b66640b9f6145ccf7b.js.map