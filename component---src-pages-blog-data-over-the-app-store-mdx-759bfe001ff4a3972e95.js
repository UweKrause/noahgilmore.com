(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{241:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",function(){return l}),n.d(t,"default",function(){return p});n(11),n(12),n(6),n(19),n(21),n(0);var a=n(79),o=n(258),r=n(145),i=n(28);var l={},s={_frontmatter:l},c=o.a;function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(c,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(i.a,{filename:"safari-trestle.png",alt:"Safari and Trestle icons",caption:"Safari and Trestle icons",mdxType:"CaptionedImage"}),Object(a.b)("p",null,"About a year ago I wrote a puzzle game called ",Object(a.b)(r.a,{mdxType:"TrestleBlogPostLink"},"Trestle"),". If you download it using ",Object(a.b)(r.a,{mdxType:"TrestleBlogPostLink"},"this link")," or any of the links in this post (by clicking on them on your iOS device), you'll get a nice Easter egg and two of the (normally paid) level sets enabled for free."),Object(a.b)("p",null,"In this post, I'm going to describe the technique behind how I implemented this referral link without a backend or third party service, using ",Object(a.b)("inlineCode",{parentName:"p"},"UIPasteboard"),"."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Disclaimer: I'm not recommending you use this in production to power your business-critical flows, since it's a non-standard use of an API and a few things could change that would break it. It might be tenable in small use cases, but might also be grounds for App Store rejection. Use at your own risk.")),Object(a.b)("h1",null,"Background"),Object(a.b)("p",null,"It's common in iOS development, especially when you have a mobile web version of a product along with an app, to want to take some action on first app launch based on how the user was interacting with your product before."),Object(a.b)("p",null,"As an example, imagine you're Facebook and the user is viewing a profile in Safari, then decides to download the app via a button on the page - you'd ideally open that profile when the app launches. I like to call this \"passing data over the app store\", and Apple doesn't provide an official API for it."),Object(a.b)("p",null,"There are tricky ways to hack around this restriction - one of the most common is called \"fingerprinting\", where you use a variety of signals to try to link a user's web session to their app session. With this technique, you collect data about the user's browser (IP address, etc) beforehand, and make a call to your server on app launch to try to give your app data about what flow to present, if any."),Object(a.b)("p",null,"The implementation of this approach is pretty involved and usually implemented by a third party company like ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://branch.io/"}),"Branch"),", or with your own backend if you're a big enough operation. I'm going to describe a simpler method which requires no backend (and doesn't track any remote user data) using ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/uikit/uipasteboard"}),"UIPasteboard"),"."),Object(a.b)("h1",null,"The idea"),Object(a.b)("p",null,"The general approach looks like this:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Write a link on your website which, on click, both opens the url and copies it into the pasteboard with data encoded as a url parameter"),Object(a.b)("li",{parentName:"ol"},"On ",Object(a.b)("inlineCode",{parentName:"li"},"didFinishLaunchingWithOptions"),", read the pasteboard, decode the data, and use it to take action")),Object(a.b)(i.a,{filename:"pasteboard-diagram.png",alt:"Diagram showing Safari connected with Trestle over the app store via UIPasteboard",caption:"",mdxType:"CaptionedImage"}),Object(a.b)("h2",null,"Step 1: Copying a link (Javascript)"),Object(a.b)("p",null,"In Javascript (depending on your browser) it's possible to programmatically copy to the clipboard using ",Object(a.b)("inlineCode",{parentName:"p"},'document.execCommand("copy")')," (see ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand"}),"MDN docs"),"). The API is a little finicky - you have to construct a DOM element and fill it with the content you want to copy, and you can only use ",Object(a.b)("inlineCode",{parentName:"p"},"input")," and ",Object(a.b)("inlineCode",{parentName:"p"},"textarea")," elements, but it works! I tested this on iOS 11 and 12, but according to ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://caniuse.com/#feat=clipboard"}),"caniuse")," it looks like it's supported as far back as iOS 10. It even works on mobile Chrome (note though - it won't work in the iOS simulator)."),Object(a.b)("p",null,"Here's the code to copy a string to the pasteboard (thanks in part to ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://stackoverflow.com/questions/34045777/copy-to-clipboard-using-javascript-in-ios"}),"this stackoverflow post"),"):"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),'function iosCopyToClipboard(string) {\n    let el = document.createElement("input");\n    el.contentEditable = true;\n    el.readOnly = false;\n    el.value = string;\n    el.style = "position: absolute; top: 0; left: 0; width: 100%; font-size: 0; opacity: 0.0";\n    document.body.appendChild(el);\n\n    let range = document.createRange();\n    range.selectNodeContents(el);\n    let s = window.getSelection();\n    s.removeAllRanges();\n    s.addRange(range);\n\n    // A big number, to cover anything that could be inside the element.\n    el.setSelectionRange(0, 999999);\n\n    return document.execCommand(\'copy\');\n}\n')),Object(a.b)("p",null,"(You might notice the odd CSS on this element - we have to make it the whole width of the page or else Safari might zoom to it before opening the link, and we have to make it opaque and font-size 0 in order to avoid showing an iOS selection UI.)"),Object(a.b)("p",null,"Once we've got this working, it's easy enough to take some data, base64 encode it, and copy it to the clipboard in addition to the link's href. We'll add a custom parameter to the copied url (I've called the parameter ",Object(a.b)("inlineCode",{parentName:"p"},"ed")," for \"encoded data\"). Note that we include a timestamp of when the link was clicked - we'll need this for later. I'm using React here, but other frameworks or even ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"http://vanilla-js.com/"}),"vanilla JS")," should be similar:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'class DataLink extends React.Component {\n    handleOnClick() {\n        let data = {\n            timestamp: Date.now(),\n            ...this.props.data\n        }\n        let json = JSON.stringify(data);\n        let encoded = btoa(json)\n        let toAppend;\n        if (this.props.href.includes("?")) {\n            toAppend = "&ed=" + encoded\n        } else {\n            toAppend = "?ed=" + encoded\n        }\n        iosCopyToClipboard(this.props.href + toAppend);\n    }\n\n    render() {\n        return (\n            <a href={this.props.href} onClick={this.handleOnClick.bind(this)}>{\n                this.props.children}\n            </a>\n        );\n    }\n};\n')),Object(a.b)("p",null,"Now, let's construct a link with JSON data that we want to pass to our app:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'const TrestleBlogPostLink = (props) => {\n    let data = {"referrer": "pasteboard-blog-post"};\n    return (\n        <DataLink\n            data={data}\n            href={"https://itunes.apple.com/us/app/trestle-the-new-sudoku/id1300230302?mt=8"}\n        >\n            {props.children}\n        </DataLink>);\n};\n')),Object(a.b)("p",null,"When the user clicks on this link they'll be redirected to the app store, with the modified link in their pasteboard."),Object(a.b)("h2",null,"Step 2: Reading the link (Swift)"),Object(a.b)("p",null,"From the app side, we'll hook into ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/documentation/uikit/uipasteboard"}),"UIPasteboard"),", a UIKit class which allows your app to integrate with iOS's copy and paste functionality. You can access the current contents of the general pasteboard (the one that gets updated when the user copies and pastes) using ",Object(a.b)("inlineCode",{parentName:"p"},"UIPasteboard.general")," - ",Object(a.b)("inlineCode",{parentName:"p"},"UIPasteboard.general.strings")," gives you the current text contents (pasteboard can also hold images, colors, etc)."),Object(a.b)("p",null,"For ",Object(a.b)(r.a,{mdxType:"TrestleBlogPostLink"},"Trestle"),", I decided to encapsulate this functionality into an ",Object(a.b)("inlineCode",{parentName:"p"},"AppStoreBridge")," class - this class will have the responsibility of checking the pasteboard and reporting to its delegate if it sees a referral link."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),"protocol AppStoreBridgeDelegate: class {\n    func appStoreBridge(\n        _ bridge: AppStoreBridge,\n        didTriggerCampaignLinkReferrer: String\n    )\n}\n\nfinal class AppStoreBridge {\n    static let shared = AppStoreBridge()\n\n    weak var delegate: AppStoreBridgeDelegate?\n\n    func checkForReferralLinks() {\n        // Check the UIPasteboard here...\n    }\n}\n")),Object(a.b)("p",null,"To fill in the body of ",Object(a.b)("inlineCode",{parentName:"p"},"checkForReferralLinks"),", let's first define the referral data we're looking for:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),"struct ReferralData: Codable {\n    let timestamp: TimeInterval\n    let referrer: String\n}\n")),Object(a.b)("p",null,"Now we'll iterate through all the strings in the pasteboard, and check them (using a wall of ",Object(a.b)("inlineCode",{parentName:"p"},"guard")," statements) to see the URL we're expecting: "),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'let pasteboard = UIPasteboard.general\nguard let strings = pasteboard.strings else { return }\nfor string in strings {\n    if string.contains("id1300230302") {\n        guard let url = URL(string: string) else { return }\n        guard let components = URLComponents(\n            url: url,\n            resolvingAgainstBaseURL: false\n        ) else { return }\n        guard let queryItems = components.queryItems else { return }\n        guard let value = queryItems.filter(\n            { $0.name == "ed" }\n        ).first?.value else { return }\n        guard let data = Data(base64Encoded: value) else { return }\n        let decoder = JSONDecoder()\n        guard let referral = try? decoder.decode(\n            ReferralData.self,\n            from: data\n        ) else { return }\n        /// Use the referral object...\n    }\n}\n')),Object(a.b)("p",null,"Note here that we use a string that we know will be in the URL (",Object(a.b)("inlineCode",{parentName:"p"},'"id1300230302"'),") to quickly filter out any other pasteboard items."),Object(a.b)("p",null,"Now all that's left is to report the referral! However, we probably only want to take action if the user recently clicked the link - I used a timeout of 5 minutes here:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),"let referralClickDate = Date(timeIntervalSince1970: referral.timestamp)\nlet currentDate = Date()\nif currentDate.minutes(from: referralClickDate) < 5 {\n    self.delegate?.appStoreBridge(\n        self,\n        didTriggerCampaignLinkReferrer: referral.referrer\n    )\n    return\n}\n")),Object(a.b)("p",null,"The small Date extension to make this possible looks like:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),"extension Date {\n    func minutes(from date: Date) -> Int {\n        return Calendar.current.dateComponents(\n            [.minute],\n            from: date,\n            to: self\n        ).minute ?? 0\n    }\n}\n")),Object(a.b)("p",null,"And we're done! Our app store bridge tells the app delegate that it noticed a referral, and we can then take any action we want!"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'extension AppDelegate: AppStoreBridgeDelegate {\n    func appStoreBridge(\n        _ bridge: AppStoreBridge,\n        didTriggerCampaignLink referrer: String\n    ) {\n        if referrer == "pasteboard-blog-post" {\n            // Show an easter egg, unlock level sets, etc...\n        }\n    }\n}\n')),Object(a.b)("h1",null,"UX considerations"),Object(a.b)("p",null,"There are a couple of user experience issues to keep in mind here:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Using this technique clobbers whatever's in the user's pasteboard currently. Usually this won't be a problem, because users should understand the pasteboard is ephemeral, but you might not want to do this if copying and pasting in your web app is a common use case (text editor, etc)."),Object(a.b)("li",{parentName:"ol"},"It's important to remember, on your call to ",Object(a.b)("inlineCode",{parentName:"li"},"didTriggerCampaignLink"),", to save some sort of flag locally so as not to accidentally trigger the referral link the next time the user opens the app. Trestle uses UserDefaults for this, which is probably as good a store as any.")),Object(a.b)("h1",null,"Security considerations"),Object(a.b)("p",null,"We should always consider approaches like this with security in mind, and this technique warrants a few very important considerations:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"If you take any action from the ",Object(a.b)("inlineCode",{parentName:"li"},"AppStoreBridge"),", assume that ",Object(a.b)("em",{parentName:"li"},"anyone")," can trigger that action ",Object(a.b)("em",{parentName:"li"},"at any time"),". This means you don't want to take actions that expose private data, make payments, etc. Consider your ",Object(a.b)("inlineCode",{parentName:"li"},"AppStoreBridge")," functionality as publicly exposed, since an attacker could pre-populate the pasteboard with anything they want to trigger the ",Object(a.b)("inlineCode",{parentName:"li"},"AppStoreBridge")," logic."),Object(a.b)("li",{parentName:"ol"},"Don't expose any private information via the ",Object(a.b)("inlineCode",{parentName:"li"},"DataLink"),", ",Object(a.b)("em",{parentName:"li"},"especially")," not user session tokens. Other apps can read the pasteboard too, so assume that all data encoded in a ",Object(a.b)("inlineCode",{parentName:"li"},"DataLink")," will be publicly available to anyone. Don't include anything in a data link that could be associated with a user's PII (personally identifiable information) including emails, locations, etc.")),Object(a.b)("h1",null,"Will this get my app rejected?"),Object(a.b)("p",null,Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/app-store/review/guidelines/#software-requirements"}),"Section 2.5.1 of the App Store Review Guidelines")," says the following:"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Apps should use APIs and frameworks for their intended purposes and indicate that integration in their app description.")),Object(a.b)("p",null,"Though this is probably referring more to frameworks like HomeKit (mentioned as an example), using ",Object(a.b)("inlineCode",{parentName:"p"},"UIPasteboard")," as described in this post is technically an unintended use of the API. Your mileage might vary, and I'm not claiming anything about this approach."),Object(a.b)("p",null,"There are also a few things that could change that would throw a wrench in things - the behavior of the execCommand could change, Apple could change the behavior of the general pasteboard, etc. This technique was a good use case for ",Object(a.b)(r.a,{mdxType:"TrestleBlogPostLink"},"Trestle"),", but might not match yours. 🤷‍♂"),Object(a.b)("h1",null,"Conclusion"),Object(a.b)("p",null,"Hopefully this was an interesting technical discussion of a simple way to get around a complicated problem, and provide user delight in the flow from mobile web to app. If you have any other hacky ideas about how to pass data across the app store, feel free to ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://twitter.com/noahsark769"}),"reach out"),". (And if you'd like to see ",Object(a.b)("inlineCode",{parentName:"p"},"UIPasteboard")," in action, you can download Trestle using ",Object(a.b)(r.a,{mdxType:"TrestleBlogPostLink"},"this link"),".)"))}p.isMDXComponent=!0},245:function(e,t,n){"use strict";n.d(t,"c",function(){return m}),n.d(t,"b",function(){return h}),n.d(t,"f",function(){return b}),n.d(t,"d",function(){return f}),n.d(t,"e",function(){return g}),n.d(t,"a",function(){return y});var a=n(10),o=n(248),r=n.n(o),i=n(249),l=n.n(i),s=n(250),c=n.n(s),p=n(251),d=n.n(p);function u(){var e=function(e,t){t||(t=e.slice(0));return e.raw=t,e}(["\n    @font-face {\n        font-family: 'Bariol';\n        src: url('","');\n        src: url('","?#iefix') format('embedded-opentype'),\n             url('","') format('woff'),\n             url('","') format('truetype'),\n             url('","#svgBariolRegular') format('svg');\n    }\n\n    * {\n        box-sizing: border-box !important;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n"]);return u=function(){return e},e}var m=Object(a.a)(u(),r.a,r.a,l.a,c.a,d.a),h=a.c.div.withConfig({displayName:"default__Div",componentId:"d4l1a1-0"})([""]),b=(a.c.nav.withConfig({displayName:"default__Nav",componentId:"d4l1a1-1"})([""]),a.c.ul.withConfig({displayName:"default__UL",componentId:"d4l1a1-2"})(["margin:0;padding:0;"])),f=a.c.li.withConfig({displayName:"default__LI",componentId:"d4l1a1-3"})(["margin:0;padding:0;"]),g=a.c.p.withConfig({displayName:"default__P",componentId:"d4l1a1-4"})(["margin:0;padding:0;"]),y=a.c.a.withConfig({displayName:"default__A",componentId:"d4l1a1-5"})(["&,&:hover,&:focus{outline:none;color:inherit;text-decoration:none;}"])},246:function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return o});var a="rgba(128, 165, 177, 1)",o="rgba(151, 195, 210, 1)"},248:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-b0d07df351f442860551405a4be58de7.eot"},249:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-4afd94f0fd93a1f63b46c6c6ad792f71.woff"},250:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-8a7d23d53f8d118e190c63e4e81a91fe.ttf"},251:function(e,t,n){e.exports=n.p+"static/Bariol-Regular-75b90056f4cdf5a742897ec0a59569d7.svg"},252:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(245),i=n(246),l=n(10),s=n(256),c=n(257),p=l.c.nav.withConfig({displayName:"Nav__StyledNav",componentId:"sc-1cm9dpf-0"})(["display:flex;flex-direction:row;flex-wrap:wrap;padding:20px 60px;border-bottom:1px solid #ddd;@media all and (max-width:600px){padding:20px;}@media (prefers-color-scheme:dark){border-color:#777;}"]),d=l.c.div.withConfig({displayName:"Nav__Title",componentId:"sc-1cm9dpf-1"})(['flex:2;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:28px;font-display:swap;@media (prefers-color-scheme:dark){color:#fff;}']),u=Object(l.c)(r.f).withConfig({displayName:"Nav__NavLinks",componentId:"sc-1cm9dpf-2"})(["flex:10;display:flex;flex-direction:horizontal;flex-wrap:wrap;justify-content:flex-end;height:100%;align-self:center;"]),m=Object(l.c)(r.d).withConfig({displayName:"Nav__NavLink",componentId:"sc-1cm9dpf-3"})(['display:flex;flex-direction:vertical;align-items:center;text-align:center;font-family:"Bariol","Helvetica Neue","Helvetica",sans-serif;font-size:16px;padding:0px 20px;']),h=Object(l.c)(r.a).withConfig({displayName:"Nav__StyledA",componentId:"sc-1cm9dpf-4"})(["height:auto;color:",";display:flex;flex-direction:vertical;align-items:center;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{color:",";}"],i.a,i.b);t.a=function(e){return o.a.createElement(p,null,o.a.createElement(d,null,o.a.createElement(h,{href:e.blog?"/blog":"/"},"NOAH GILMORE")),o.a.createElement(u,null,o.a.createElement(m,null,o.a.createElement(h,{"aria-label":"Blog Home",href:"/blog"},o.a.createElement(s.b,{color:i.a,size:"24"}))),o.a.createElement(m,null,o.a.createElement(h,{"aria-label":"Twitter",href:"https://twitter.com/noahsark769"},o.a.createElement(c.a,{color:i.a,size:"24"}))),o.a.createElement(m,null,o.a.createElement(h,{"aria-label":"App Store",href:"https://appstore.com/trestle"},o.a.createElement(s.a,{color:i.a,size:"24"})))))}},253:function(e,t,n){"use strict";n.d(t,"a",function(){return l}),n.d(t,"b",function(){return d});var a=n(0),o=n.n(a),r=n(10),i=n(247);var l=r.c.div.withConfig({displayName:"BlogPost__BlogPostContainer",componentId:"gyfnna-0"})(["padding:60px 0;margin:0 auto;width:90%;@media all and (min-width:600px){max-width:700px;margin:auto;}@media all and (max-width:600px){width:100%;padding:20px 0;","}"],function(e){return e.darkened&&Object(r.b)(["background-color:#f6f6f6;@media (prefers-color-scheme:dark){background-color:inherit;}"])}),s=r.c.div.withConfig({displayName:"BlogPost__TitleContainer",componentId:"gyfnna-1"})(["width:100%;margin-bottom:40px;"]),c=r.c.h1.withConfig({displayName:"BlogPost__Heading",componentId:"gyfnna-2"})(['width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;font-size:34px;margin-bottom:10px;@media (prefers-color-scheme:dark){color:#fff;}']),p=r.c.p.withConfig({displayName:"BlogPost__DateContainer",componentId:"gyfnna-3"})(['font-family:"Gentium Book Basic",times,serif;font-style:italic;font-size:16px;color:#999;']),d=function(e){return o.a.createElement("div",null,o.a.createElement(i.Helmet,null,o.a.createElement("title",null,e.title)),o.a.createElement(s,null,o.a.createElement(c,null,e.title),o.a.createElement(p,null,e.date)))};o.a.Component},254:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n(0),o=n.n(a),r=n(50),i=n.n(r);var l=n(10).c.div.withConfig({displayName:"MarkdownContent__Container",componentId:"zl3v0s-0"})(['p,li{margin:0;padding:0;font-family:"Gentium Book Basic",times,serif;font-size:21px;line-height:29px;color:#333;padding-bottom:15px;margin-top:15px;@media all and (max-width:600px){width:90%;margin:15px auto 0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}blockquote{background-color:#faf9f7;border-left:4px solid #e5e4e1;padding:20px;font-style:italic;@media (prefers-color-scheme:dark){background-color:#3f3f3f;}p{margin:0;padding:0;color:#555;@media (prefers-color-scheme:dark){color:#fff;}}}a{color:#1A3F4B;-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;@media (prefers-color-scheme:dark){color:#60b5d1;}}a:hover{color:#47656E;@media (prefers-color-scheme:dark){color:#6bcfef;}}code{font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:not(pre code){font-family:monospace;font-size:16px;background-color:#faf9f7;border:1px solid #e5e4e1;padding:3px 5px;margin:0px 2px;color:#555;@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}code:first-child{margin-left:0;}pre{display:block;margin:0;padding:0;background:none;@media all and (max-width:600px){width:100%;margin:0 auto;}}pre > code{display:block;margin:0;padding:0;border:1px solid #e5e4e1;border-radius:2px;padding:10px;margin-top:10px;font-family:monospace;font-size:14px;line-height:17px;white-space:pre-wrap;@media all and (max-width:600px){font-size:15px;white-space:pre;border-left:none;border-right:none;padding:15px 5% 15px 5%;width:100%;}}pre > code.language-nohighlight{@media (prefers-color-scheme:dark){color:#fff;background-color:#3f3f3f;}}pre + p{margin-top:30px;}ol{margin-left:30px;@media all and (max-width:600px){width:90%;margin:0 auto 0 30px;}@media (prefers-color-scheme:dark){color:#fff;}}ol li{list-style-type:decimal;}ul li{list-style-type:square;margin-left:40px;@media all and (max-width:600px){width:90%;margin:0 auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1,h2,h3,h4,h5,h6{width:100%;font-family:"Roboto","Helvetica Neue","Helvetica",sans-serif;margin-bottom:10px;margin-top:40px;@media all and (max-width:600px){width:90%;margin:40px auto 10px auto;}@media (prefers-color-scheme:dark){color:#fff;}}h1{font-size:28px;}h2{font-size:24px;}h3{font-size:20px;}em{font-style:italic;}strong{font-weight:bold;}']),s=function(e){var t,n;function a(){return e.apply(this,arguments)||this}n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var r=a.prototype;return r.render=function(){return o.a.createElement(l,null,this.props.children)},r.componentDidMount=function(){for(var e=i.a.findDOMNode(this).querySelectorAll("pre code"),t=0;t<e.length;t++)window.hljs&&window.hljs.highlightBlock(e[t])},a}(o.a.Component)},255:function(e,t,n){"use strict";function a(e){return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}n.d(t,"a",function(){return a})},258:function(e,t,n){"use strict";n(157);var a=n(0),o=n.n(a),r=n(247),i=n(245),l=n(252),s=n(10),c=n(256),p=n(257),d=n(246);var u=s.c.div.withConfig({displayName:"EndButtons__Container",componentId:"sc-2ta1su-0"})(["width:100%;display:flex;flex-direction:horizontal;align-items:center;justify-content:center;margin-top:40px;"]),m=s.c.div.withConfig({displayName:"EndButtons__ButtonStyle",componentId:"sc-2ta1su-1"})(["background-color:",";-webkit-transition:0.2s ease-in-out;-moz-transition:0.2s ease-in-out;-o-transition:0.2s ease-in-out;transition:0.2s ease-in-out;&:hover{background-color:",";}width:100px;padding:10px 20px;text-align:center;display:flex;flex-direction:vertical;align-items:center;justify-content:center;border-radius:4px;",";"],d.a,d.b,function(e){return e.margin&&Object(s.b)(["margin-right:20px;"])}),h=function(e){return o.a.createElement(i.a,{href:e.url,target:e.newTab?"_blank":null,"aria-label":e.label},o.a.createElement(m,{margin:e.margin},e.children))},b=function(e){var t,n;function a(){return e.apply(this,arguments)||this}return n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,a.prototype.render=function(){var e,t=(e="Post by @noahsark769: "+this.props.tweetTitle+" "+this.props.tweetUrl,"https://twitter.com/intent/tweet?text="+encodeURIComponent(e));return o.a.createElement(u,null,o.a.createElement(h,{label:"Twitter",url:t,newTab:!0,margin:!0},o.a.createElement(p.a,{size:24,color:"white"})),o.a.createElement(h,{label:"Blog homepage",url:"/blog"},o.a.createElement(c.b,{size:24,color:"white"})))},a}(o.a.Component),f=n(253),g=n(254),y=n(255);var w=s.c.div.withConfig({displayName:"Disqus__Wrapper",componentId:"sc-1jjeqqj-0"})(["margin-top:80px;"]),k=function(e){var t,n;function a(){return e.apply(this,arguments)||this}n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var r=a.prototype;return r.render=function(){return o.a.createElement(w,null,o.a.createElement("div",{id:"disqus_thread"}))},r.componentDidMount=function(){var e,t;e=document,(t=e.createElement("script")).src="//noahgilmore-com.disqus.com/embed.js",t.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(t)},a}(o.a.Component),j=n(259),O=n.n(j);n.d(t,"a",function(){return N});var x=s.c.div.withConfig({displayName:"BlogPageLayout__Container",componentId:"sc-118ribu-0"})(["@media (prefers-color-scheme:dark){background-color:#2b2c2f;}"]),v=s.c.div.withConfig({displayName:"BlogPageLayout__NonContent",componentId:"sc-118ribu-1"})(["@media all and (max-width:600px){padding-right:5%;padding-left:5%;}"]),N=function(e){var t,n;function a(){return e.apply(this,arguments)||this}n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var s=a.prototype;return s.render=function(){var e="undefined"!=typeof window&&window.matchMedia("(prefers-color-scheme: dark)").matches;return o.a.createElement(x,null,o.a.createElement(i.c,null),o.a.createElement(r.Helmet,null,o.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Roboto:700",rel:"stylesheet",type:"text/css"}),o.a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Gentium+Book+Basic",rel:"stylesheet"}),!e&&o.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/atom-one-light.min.css"}),e&&o.a.createElement("link",{rel:"stylesheet",href:"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.0/styles/zenburn.min.css"}),o.a.createElement("meta",{name:"twitter:card",content:"summary"}),o.a.createElement("meta",{name:"twitter:creator",content:"@noahsark769"}),o.a.createElement("meta",{property:"og:url",content:"https://noahgilmore.com"+this.props.location.pathname}),o.a.createElement("meta",{property:"og:title",content:this.props.pageContext.frontmatter.title}),o.a.createElement("meta",{property:"og:description",content:this.props.pageContext.frontmatter.staticPreview}),o.a.createElement("meta",{name:"description",content:this.props.pageContext.frontmatter.staticPreview})),o.a.createElement(l.a,{blog:!0}),o.a.createElement(f.a,null,o.a.createElement(v,null,o.a.createElement(f.b,{title:this.props.pageContext.frontmatter.title,date:Object(y.a)(this.props.pageContext.frontmatter.date)})),o.a.createElement(g.a,null,this.props.children),o.a.createElement(v,null,o.a.createElement(b,{tweetTitle:this.props.pageContext.frontmatter.title,tweetUrl:"https://noahgilmore.com"+this.props.location.pathname}),o.a.createElement(k,null))))},s.componentDidMount=function(){O.a.initialize("UA-35325391-1"),O.a.pageview(window.location.pathname+window.location.search)},a}(o.a.Component)}}]);
//# sourceMappingURL=component---src-pages-blog-data-over-the-app-store-mdx-759bfe001ff4a3972e95.js.map